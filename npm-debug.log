0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'install' ]
2 info using npm@1.3.14
3 info using node@v0.10.22
4 verbose node symlink /usr/bin/node
5 verbose readDependencies using package.json deps
6 verbose install where, deps [ '/var/www/sites/marker/http',
6 verbose install   [ 'grunt',
6 verbose install     'grunt-contrib-jshint',
6 verbose install     'grunt-contrib-nodeunit',
6 verbose install     'grunt-contrib-uglify' ] ]
7 info preinstall marker@0.5.0
8 verbose readDependencies using package.json deps
9 verbose cache add [ 'grunt@~0.4.1', null ]
10 verbose cache add name=undefined spec="grunt@~0.4.1" args=["grunt@~0.4.1",null]
11 verbose parsed url { protocol: null,
11 verbose parsed url   slashes: null,
11 verbose parsed url   auth: null,
11 verbose parsed url   host: null,
11 verbose parsed url   port: null,
11 verbose parsed url   hostname: null,
11 verbose parsed url   hash: null,
11 verbose parsed url   search: null,
11 verbose parsed url   query: null,
11 verbose parsed url   pathname: 'grunt@~0.4.1',
11 verbose parsed url   path: 'grunt@~0.4.1',
11 verbose parsed url   href: 'grunt@~0.4.1' }
12 verbose cache add name="grunt" spec="~0.4.1" args=["grunt","~0.4.1"]
13 verbose parsed url { protocol: null,
13 verbose parsed url   slashes: null,
13 verbose parsed url   auth: null,
13 verbose parsed url   host: null,
13 verbose parsed url   port: null,
13 verbose parsed url   hostname: null,
13 verbose parsed url   hash: null,
13 verbose parsed url   search: null,
13 verbose parsed url   query: null,
13 verbose parsed url   pathname: '~0.4.1',
13 verbose parsed url   path: '~0.4.1',
13 verbose parsed url   href: '~0.4.1' }
14 verbose addNamed [ 'grunt', '~0.4.1' ]
15 verbose addNamed [ null, '>=0.4.1-0 <0.5.0-0' ]
16 verbose cache add [ 'grunt-contrib-jshint@~0.6.3', null ]
17 verbose cache add name=undefined spec="grunt-contrib-jshint@~0.6.3" args=["grunt-contrib-jshint@~0.6.3",null]
18 verbose parsed url { protocol: null,
18 verbose parsed url   slashes: null,
18 verbose parsed url   auth: null,
18 verbose parsed url   host: null,
18 verbose parsed url   port: null,
18 verbose parsed url   hostname: null,
18 verbose parsed url   hash: null,
18 verbose parsed url   search: null,
18 verbose parsed url   query: null,
18 verbose parsed url   pathname: 'grunt-contrib-jshint@~0.6.3',
18 verbose parsed url   path: 'grunt-contrib-jshint@~0.6.3',
18 verbose parsed url   href: 'grunt-contrib-jshint@~0.6.3' }
19 verbose cache add name="grunt-contrib-jshint" spec="~0.6.3" args=["grunt-contrib-jshint","~0.6.3"]
20 verbose parsed url { protocol: null,
20 verbose parsed url   slashes: null,
20 verbose parsed url   auth: null,
20 verbose parsed url   host: null,
20 verbose parsed url   port: null,
20 verbose parsed url   hostname: null,
20 verbose parsed url   hash: null,
20 verbose parsed url   search: null,
20 verbose parsed url   query: null,
20 verbose parsed url   pathname: '~0.6.3',
20 verbose parsed url   path: '~0.6.3',
20 verbose parsed url   href: '~0.6.3' }
21 verbose addNamed [ 'grunt-contrib-jshint', '~0.6.3' ]
22 verbose addNamed [ null, '>=0.6.3-0 <0.7.0-0' ]
23 silly lockFile 766a3bd3-grunt-0-4-1 grunt@~0.4.1
24 verbose lock grunt@~0.4.1 /home/ahmad/.npm/766a3bd3-grunt-0-4-1.lock
25 silly lockFile 6f38214b-grunt-contrib-jshint-0-6-3 grunt-contrib-jshint@~0.6.3
26 verbose lock grunt-contrib-jshint@~0.6.3 /home/ahmad/.npm/6f38214b-grunt-contrib-jshint-0-6-3.lock
27 verbose cache add [ 'grunt-contrib-uglify@~0.2.2', null ]
28 verbose cache add name=undefined spec="grunt-contrib-uglify@~0.2.2" args=["grunt-contrib-uglify@~0.2.2",null]
29 verbose parsed url { protocol: null,
29 verbose parsed url   slashes: null,
29 verbose parsed url   auth: null,
29 verbose parsed url   host: null,
29 verbose parsed url   port: null,
29 verbose parsed url   hostname: null,
29 verbose parsed url   hash: null,
29 verbose parsed url   search: null,
29 verbose parsed url   query: null,
29 verbose parsed url   pathname: 'grunt-contrib-uglify@~0.2.2',
29 verbose parsed url   path: 'grunt-contrib-uglify@~0.2.2',
29 verbose parsed url   href: 'grunt-contrib-uglify@~0.2.2' }
30 verbose cache add name="grunt-contrib-uglify" spec="~0.2.2" args=["grunt-contrib-uglify","~0.2.2"]
31 verbose parsed url { protocol: null,
31 verbose parsed url   slashes: null,
31 verbose parsed url   auth: null,
31 verbose parsed url   host: null,
31 verbose parsed url   port: null,
31 verbose parsed url   hostname: null,
31 verbose parsed url   hash: null,
31 verbose parsed url   search: null,
31 verbose parsed url   query: null,
31 verbose parsed url   pathname: '~0.2.2',
31 verbose parsed url   path: '~0.2.2',
31 verbose parsed url   href: '~0.2.2' }
32 verbose addNamed [ 'grunt-contrib-uglify', '~0.2.2' ]
33 verbose addNamed [ null, '>=0.2.2-0 <0.3.0-0' ]
34 silly lockFile deac4dba-grunt-contrib-uglify-0-2-2 grunt-contrib-uglify@~0.2.2
35 verbose lock grunt-contrib-uglify@~0.2.2 /home/ahmad/.npm/deac4dba-grunt-contrib-uglify-0-2-2.lock
36 verbose cache add [ 'grunt-contrib-nodeunit@~0.2.0', null ]
37 verbose cache add name=undefined spec="grunt-contrib-nodeunit@~0.2.0" args=["grunt-contrib-nodeunit@~0.2.0",null]
38 verbose parsed url { protocol: null,
38 verbose parsed url   slashes: null,
38 verbose parsed url   auth: null,
38 verbose parsed url   host: null,
38 verbose parsed url   port: null,
38 verbose parsed url   hostname: null,
38 verbose parsed url   hash: null,
38 verbose parsed url   search: null,
38 verbose parsed url   query: null,
38 verbose parsed url   pathname: 'grunt-contrib-nodeunit@~0.2.0',
38 verbose parsed url   path: 'grunt-contrib-nodeunit@~0.2.0',
38 verbose parsed url   href: 'grunt-contrib-nodeunit@~0.2.0' }
39 verbose cache add name="grunt-contrib-nodeunit" spec="~0.2.0" args=["grunt-contrib-nodeunit","~0.2.0"]
40 verbose parsed url { protocol: null,
40 verbose parsed url   slashes: null,
40 verbose parsed url   auth: null,
40 verbose parsed url   host: null,
40 verbose parsed url   port: null,
40 verbose parsed url   hostname: null,
40 verbose parsed url   hash: null,
40 verbose parsed url   search: null,
40 verbose parsed url   query: null,
40 verbose parsed url   pathname: '~0.2.0',
40 verbose parsed url   path: '~0.2.0',
40 verbose parsed url   href: '~0.2.0' }
41 verbose addNamed [ 'grunt-contrib-nodeunit', '~0.2.0' ]
42 verbose addNamed [ null, '>=0.2.0-0 <0.3.0-0' ]
43 silly lockFile ac0ef488-grunt-contrib-nodeunit-0-2-0 grunt-contrib-nodeunit@~0.2.0
44 verbose lock grunt-contrib-nodeunit@~0.2.0 /home/ahmad/.npm/ac0ef488-grunt-contrib-nodeunit-0-2-0.lock
45 silly addNameRange { name: 'grunt', range: '>=0.4.1-0 <0.5.0-0', hasData: false }
46 silly addNameRange { name: 'grunt-contrib-jshint',
46 silly addNameRange   range: '>=0.6.3-0 <0.7.0-0',
46 silly addNameRange   hasData: false }
47 silly addNameRange { name: 'grunt-contrib-uglify',
47 silly addNameRange   range: '>=0.2.2-0 <0.3.0-0',
47 silly addNameRange   hasData: false }
48 silly addNameRange { name: 'grunt-contrib-nodeunit',
48 silly addNameRange   range: '>=0.2.0-0 <0.3.0-0',
48 silly addNameRange   hasData: false }
49 verbose url raw grunt-contrib-jshint
50 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-contrib-jshint' ]
51 verbose url resolved https://registry.npmjs.org/grunt-contrib-jshint
52 info trying registry request attempt 1 at 23:46:10
53 http GET https://registry.npmjs.org/grunt-contrib-jshint
54 verbose url raw grunt-contrib-uglify
55 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-contrib-uglify' ]
56 verbose url resolved https://registry.npmjs.org/grunt-contrib-uglify
57 info trying registry request attempt 1 at 23:46:10
58 http GET https://registry.npmjs.org/grunt-contrib-uglify
59 verbose url raw grunt-contrib-nodeunit
60 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-contrib-nodeunit' ]
61 verbose url resolved https://registry.npmjs.org/grunt-contrib-nodeunit
62 info trying registry request attempt 1 at 23:46:10
63 http GET https://registry.npmjs.org/grunt-contrib-nodeunit
64 verbose url raw grunt
65 verbose url resolving [ 'https://registry.npmjs.org/', './grunt' ]
66 verbose url resolved https://registry.npmjs.org/grunt
67 info trying registry request attempt 1 at 23:46:10
68 verbose etag "4N29LMTAA1GT2U8E41HHQIGTO"
69 http GET https://registry.npmjs.org/grunt
70 http 304 https://registry.npmjs.org/grunt
71 silly registry.get cb [ 304,
71 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
71 silly registry.get     etag: '"4N29LMTAA1GT2U8E41HHQIGTO"',
71 silly registry.get     date: 'Sun, 17 Nov 2013 21:46:22 GMT',
71 silly registry.get     'content-length': '0' } ]
72 verbose etag grunt from cache
73 silly addNameRange number 2 { name: 'grunt', range: '>=0.4.1-0 <0.5.0-0', hasData: true }
74 silly addNameRange versions [ 'grunt',
74 silly addNameRange   [ '0.1.0',
74 silly addNameRange     '0.1.1',
74 silly addNameRange     '0.1.2',
74 silly addNameRange     '0.2.0',
74 silly addNameRange     '0.2.1',
74 silly addNameRange     '0.2.2',
74 silly addNameRange     '0.2.3',
74 silly addNameRange     '0.2.4',
74 silly addNameRange     '0.2.5',
74 silly addNameRange     '0.2.6',
74 silly addNameRange     '0.2.7',
74 silly addNameRange     '0.2.8',
74 silly addNameRange     '0.2.9',
74 silly addNameRange     '0.2.10',
74 silly addNameRange     '0.2.11',
74 silly addNameRange     '0.2.12',
74 silly addNameRange     '0.2.13',
74 silly addNameRange     '0.2.14',
74 silly addNameRange     '0.2.15',
74 silly addNameRange     '0.3.0',
74 silly addNameRange     '0.3.1',
74 silly addNameRange     '0.3.2',
74 silly addNameRange     '0.3.3',
74 silly addNameRange     '0.3.4',
74 silly addNameRange     '0.3.5',
74 silly addNameRange     '0.3.6',
74 silly addNameRange     '0.3.7',
74 silly addNameRange     '0.3.8',
74 silly addNameRange     '0.3.9',
74 silly addNameRange     '0.3.10',
74 silly addNameRange     '0.3.11',
74 silly addNameRange     '0.3.12',
74 silly addNameRange     '0.3.13',
74 silly addNameRange     '0.3.14',
74 silly addNameRange     '0.3.15',
74 silly addNameRange     '0.3.16',
74 silly addNameRange     '0.3.17',
74 silly addNameRange     '0.4.0',
74 silly addNameRange     '0.4.1',
74 silly addNameRange     '0.3.13-a',
74 silly addNameRange     '0.4.0-a',
74 silly addNameRange     '0.4.0-rc1',
74 silly addNameRange     '0.4.0-rc2',
74 silly addNameRange     '0.4.0-rc3',
74 silly addNameRange     '0.4.0-rc4',
74 silly addNameRange     '0.4.0-rc5',
74 silly addNameRange     '0.4.0-rc6',
74 silly addNameRange     '0.4.0-rc7',
74 silly addNameRange     '0.4.0-rc8' ] ]
75 verbose addNamed [ 'grunt', '0.4.1' ]
76 verbose addNamed [ '0.4.1', '0.4.1' ]
77 silly lockFile f9e87dfe-grunt-0-4-1 grunt@0.4.1
78 verbose lock grunt@0.4.1 /home/ahmad/.npm/f9e87dfe-grunt-0-4-1.lock
79 silly lockFile f9e87dfe-grunt-0-4-1 grunt@0.4.1
80 silly lockFile f9e87dfe-grunt-0-4-1 grunt@0.4.1
81 silly lockFile 766a3bd3-grunt-0-4-1 grunt@~0.4.1
82 silly lockFile 766a3bd3-grunt-0-4-1 grunt@~0.4.1
83 http 200 https://registry.npmjs.org/grunt-contrib-nodeunit
84 silly registry.get cb [ 200,
84 silly registry.get   { vary: 'Accept',
84 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
84 silly registry.get     etag: '"WUKAT1VDXOELK5FB3IGOJJNM"',
84 silly registry.get     date: 'Sun, 17 Nov 2013 21:46:22 GMT',
84 silly registry.get     'content-type': 'application/json',
84 silly registry.get     'content-length': '36555' } ]
85 silly addNameRange number 2 { name: 'grunt-contrib-nodeunit',
85 silly addNameRange   range: '>=0.2.0-0 <0.3.0-0',
85 silly addNameRange   hasData: true }
86 silly addNameRange versions [ 'grunt-contrib-nodeunit',
86 silly addNameRange   [ '0.1.0',
86 silly addNameRange     '0.1.1',
86 silly addNameRange     '0.1.2',
86 silly addNameRange     '0.2.0',
86 silly addNameRange     '0.2.1',
86 silly addNameRange     '0.2.2',
86 silly addNameRange     '0.1.2-rc5',
86 silly addNameRange     '0.1.2-rc6' ] ]
87 verbose addNamed [ 'grunt-contrib-nodeunit', '0.2.2' ]
88 verbose addNamed [ '0.2.2', '0.2.2' ]
89 silly lockFile 483e218a-grunt-contrib-nodeunit-0-2-2 grunt-contrib-nodeunit@0.2.2
90 verbose lock grunt-contrib-nodeunit@0.2.2 /home/ahmad/.npm/483e218a-grunt-contrib-nodeunit-0-2-2.lock
91 silly lockFile 229a75cb-grunt-contrib-nodeunit-0-2-2-tgz https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz
92 verbose lock https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz /home/ahmad/.npm/229a75cb-grunt-contrib-nodeunit-0-2-2-tgz.lock
93 verbose addRemoteTarball [ 'https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz',
93 verbose addRemoteTarball   'd3a9c7908a38b6a31bca24f62ba03efc34bb9766' ]
94 info retry fetch attempt 1 at 23:46:28
95 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/tmp.tgz
96 http GET https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz
97 http 200 https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz
98 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/tmp.tgz
99 silly lockFile e597d22c-88158-0-1679816786199808-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
100 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package /home/ahmad/.npm/e597d22c-88158-0-1679816786199808-package.lock
101 silly lockFile eff2d9b0-88158-0-1679816786199808-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/tmp.tgz
102 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/tmp.tgz /home/ahmad/.npm/eff2d9b0-88158-0-1679816786199808-tmp-tgz.lock
103 silly gunzTarPerm modes [ '755', '644' ]
104 silly gunzTarPerm extractEntry package.json
105 silly gunzTarPerm extractEntry .npmignore
106 silly gunzTarPerm extractEntry README.md
107 silly gunzTarPerm extractEntry Gruntfile.js
108 silly gunzTarPerm extractEntry CHANGELOG
109 silly gunzTarPerm extractEntry CONTRIBUTING.md
110 silly gunzTarPerm extractEntry .jshintrc
111 silly gunzTarPerm extractEntry LICENSE-MIT
112 silly gunzTarPerm extractEntry .travis.yml
113 silly gunzTarPerm extractEntry docs/nodeunit-examples.md
114 silly gunzTarPerm extractEntry docs/nodeunit-options.md
115 silly gunzTarPerm extractEntry docs/nodeunit-overview.md
116 silly gunzTarPerm extractEntry AUTHORS
117 silly gunzTarPerm extractEntry tasks/nodeunit.js
118 silly gunzTarPerm extractEntry test/nodeunit_test.js
119 silly gunzTarPerm extractEntry test/fixtures/fail.js
120 silly lockFile e597d22c-88158-0-1679816786199808-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
121 silly lockFile e597d22c-88158-0-1679816786199808-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
122 silly lockFile eff2d9b0-88158-0-1679816786199808-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/tmp.tgz
123 silly lockFile eff2d9b0-88158-0-1679816786199808-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/tmp.tgz
124 verbose tar pack [ '/home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz',
124 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package' ]
125 verbose tarball /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
126 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
127 silly lockFile e597d22c-88158-0-1679816786199808-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
128 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package /home/ahmad/.npm/e597d22c-88158-0-1679816786199808-package.lock
129 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
130 verbose lock tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz /home/ahmad/.npm/7d4264ad-ntrib-nodeunit-0-2-2-package-tgz.lock
131 silly lockFile e597d22c-88158-0-1679816786199808-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
132 silly lockFile e597d22c-88158-0-1679816786199808-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724788158-0.1679816786199808/package
133 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
134 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
135 silly lockFile 929b294a-t-contrib-nodeunit-0-2-2-package /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package
136 verbose lock /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package /home/ahmad/.npm/929b294a-t-contrib-nodeunit-0-2-2-package.lock
137 silly lockFile 929b294a-t-contrib-nodeunit-0-2-2-package /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package
138 silly lockFile 929b294a-t-contrib-nodeunit-0-2-2-package /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package
139 verbose tar unpack /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
140 silly lockFile 01bc07e3-t-contrib-nodeunit-0-2-2-package tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package
141 verbose lock tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package /home/ahmad/.npm/01bc07e3-t-contrib-nodeunit-0-2-2-package.lock
142 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
143 verbose lock tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz /home/ahmad/.npm/7d4264ad-ntrib-nodeunit-0-2-2-package-tgz.lock
144 silly gunzTarPerm modes [ '755', '644' ]
145 silly gunzTarPerm extractEntry package.json
146 silly gunzTarPerm extractEntry .npmignore
147 silly gunzTarPerm extractEntry README.md
148 silly gunzTarPerm extractEntry Gruntfile.js
149 silly gunzTarPerm extractEntry CHANGELOG
150 silly gunzTarPerm extractEntry CONTRIBUTING.md
151 silly gunzTarPerm extractEntry .jshintrc
152 silly gunzTarPerm extractEntry LICENSE-MIT
153 silly gunzTarPerm extractEntry .travis.yml
154 silly gunzTarPerm extractEntry docs/nodeunit-examples.md
155 silly gunzTarPerm extractEntry docs/nodeunit-options.md
156 silly gunzTarPerm extractEntry docs/nodeunit-overview.md
157 silly gunzTarPerm extractEntry AUTHORS
158 silly gunzTarPerm extractEntry tasks/nodeunit.js
159 silly gunzTarPerm extractEntry test/nodeunit_test.js
160 silly gunzTarPerm extractEntry test/fixtures/fail.js
161 silly lockFile 01bc07e3-t-contrib-nodeunit-0-2-2-package tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package
162 silly lockFile 01bc07e3-t-contrib-nodeunit-0-2-2-package tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package
163 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
164 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
165 verbose chmod /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz 644
166 verbose chown /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz [ 1000, 1000 ]
167 silly lockFile 229a75cb-grunt-contrib-nodeunit-0-2-2-tgz https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz
168 silly lockFile 229a75cb-grunt-contrib-nodeunit-0-2-2-tgz https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz
169 silly lockFile 483e218a-grunt-contrib-nodeunit-0-2-2 grunt-contrib-nodeunit@0.2.2
170 silly lockFile 483e218a-grunt-contrib-nodeunit-0-2-2 grunt-contrib-nodeunit@0.2.2
171 silly lockFile ac0ef488-grunt-contrib-nodeunit-0-2-0 grunt-contrib-nodeunit@~0.2.0
172 silly lockFile ac0ef488-grunt-contrib-nodeunit-0-2-0 grunt-contrib-nodeunit@~0.2.0
173 http 200 https://registry.npmjs.org/grunt-contrib-uglify
174 silly registry.get cb [ 200,
174 silly registry.get   { vary: 'Accept',
174 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
174 silly registry.get     etag: '"4TXR29PVFYI9Q601175RPVN7Q"',
174 silly registry.get     date: 'Sun, 17 Nov 2013 21:46:22 GMT',
174 silly registry.get     'content-type': 'application/json',
174 silly registry.get     'content-length': '165071' } ]
175 silly addNameRange number 2 { name: 'grunt-contrib-uglify',
175 silly addNameRange   range: '>=0.2.2-0 <0.3.0-0',
175 silly addNameRange   hasData: true }
176 silly addNameRange versions [ 'grunt-contrib-uglify',
176 silly addNameRange   [ '0.1.0',
176 silly addNameRange     '0.1.1',
176 silly addNameRange     '0.1.2',
176 silly addNameRange     '0.2.0',
176 silly addNameRange     '0.2.1',
176 silly addNameRange     '0.2.2',
176 silly addNameRange     '0.2.3',
176 silly addNameRange     '0.2.4',
176 silly addNameRange     '0.2.5',
176 silly addNameRange     '0.2.6',
176 silly addNameRange     '0.2.7',
176 silly addNameRange     '0.1.1-rc5',
176 silly addNameRange     '0.1.1-rc6' ] ]
177 verbose addNamed [ 'grunt-contrib-uglify', '0.2.7' ]
178 verbose addNamed [ '0.2.7', '0.2.7' ]
179 silly lockFile 480328f6-grunt-contrib-uglify-0-2-7 grunt-contrib-uglify@0.2.7
180 verbose lock grunt-contrib-uglify@0.2.7 /home/ahmad/.npm/480328f6-grunt-contrib-uglify-0-2-7.lock
181 silly lockFile 90f282d3-y-grunt-contrib-uglify-0-2-7-tgz https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz
182 verbose lock https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz /home/ahmad/.npm/90f282d3-y-grunt-contrib-uglify-0-2-7-tgz.lock
183 verbose addRemoteTarball [ 'https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz',
183 verbose addRemoteTarball   'e6bda51e0c40a1459f6cead423c65efd725a1bf7' ]
184 info retry fetch attempt 1 at 23:46:44
185 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/tmp.tgz
186 http GET https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz
187 http 200 https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz
188 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/tmp.tgz
189 silly lockFile e7b73b5c-04614-0-5930880766827613-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
190 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package /home/ahmad/.npm/e7b73b5c-04614-0-5930880766827613-package.lock
191 silly lockFile ad1ca27e-04614-0-5930880766827613-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/tmp.tgz
192 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/tmp.tgz /home/ahmad/.npm/ad1ca27e-04614-0-5930880766827613-tmp-tgz.lock
193 silly gunzTarPerm modes [ '755', '644' ]
194 silly gunzTarPerm extractEntry package.json
195 silly gunzTarPerm extractEntry .npmignore
196 silly gunzTarPerm extractEntry README.md
197 silly gunzTarPerm extractEntry Gruntfile.js
198 silly gunzTarPerm extractEntry CHANGELOG
199 silly gunzTarPerm extractEntry CONTRIBUTING.md
200 silly gunzTarPerm extractEntry .jshintrc
201 silly gunzTarPerm extractEntry LICENSE-MIT
202 silly gunzTarPerm extractEntry .travis.yml
203 silly gunzTarPerm extractEntry docs/uglify-examples.md
204 silly gunzTarPerm extractEntry docs/uglify-options.md
205 silly gunzTarPerm extractEntry docs/uglify-overview.md
206 silly gunzTarPerm extractEntry AUTHORS
207 silly gunzTarPerm extractEntry tasks/uglify.js
208 silly gunzTarPerm extractEntry tasks/lib/uglify.js
209 silly gunzTarPerm extractEntry test/uglify_test.js
210 silly gunzTarPerm extractEntry test/fixtures/expected/comments.js
211 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_banner.js
212 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_beautify.js
213 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_except.js
214 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapurl.js
215 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle.js
216 silly gunzTarPerm extractEntry test/fixtures/expected/exportAll.js
217 silly gunzTarPerm extractEntry test/fixtures/expected/compress.js
218 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps1.js
219 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapin.js
220 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps2.js
221 silly gunzTarPerm extractEntry test/fixtures/expected/enclose.js
222 silly gunzTarPerm extractEntry test/fixtures/expected/wrap.js
223 silly gunzTarPerm extractEntry test/fixtures/expected/multifile.js
224 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps2.map
225 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemap_prefix
226 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapin
227 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps1.map
228 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_sourcemap
229 silly gunzTarPerm extractEntry test/fixtures/src/comments.js
230 silly gunzTarPerm extractEntry test/fixtures/src/simple.js
231 silly gunzTarPerm extractEntry test/fixtures/src/simple2.js
232 silly gunzTarPerm extractEntry test/fixtures/src/simple2.coffee
233 silly gunzTarPerm extractEntry test/fixtures/src/simple2.map
234 silly lockFile e7b73b5c-04614-0-5930880766827613-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
235 silly lockFile e7b73b5c-04614-0-5930880766827613-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
236 silly lockFile ad1ca27e-04614-0-5930880766827613-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/tmp.tgz
237 silly lockFile ad1ca27e-04614-0-5930880766827613-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/tmp.tgz
238 verbose tar pack [ '/home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz',
238 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package' ]
239 verbose tarball /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
240 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
241 silly lockFile e7b73b5c-04614-0-5930880766827613-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
242 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package /home/ahmad/.npm/e7b73b5c-04614-0-5930880766827613-package.lock
243 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
244 verbose lock tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz /home/ahmad/.npm/e8383fd4-contrib-uglify-0-2-7-package-tgz.lock
245 silly lockFile e7b73b5c-04614-0-5930880766827613-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
246 silly lockFile e7b73b5c-04614-0-5930880766827613-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724804614-0.5930880766827613/package
247 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
248 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
249 silly lockFile 31cbdccc-unt-contrib-uglify-0-2-7-package /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package
250 verbose lock /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package /home/ahmad/.npm/31cbdccc-unt-contrib-uglify-0-2-7-package.lock
251 silly lockFile 31cbdccc-unt-contrib-uglify-0-2-7-package /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package
252 silly lockFile 31cbdccc-unt-contrib-uglify-0-2-7-package /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package
253 verbose tar unpack /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
254 silly lockFile b094ff6b-unt-contrib-uglify-0-2-7-package tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package
255 verbose lock tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package /home/ahmad/.npm/b094ff6b-unt-contrib-uglify-0-2-7-package.lock
256 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
257 verbose lock tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz /home/ahmad/.npm/e8383fd4-contrib-uglify-0-2-7-package-tgz.lock
258 silly gunzTarPerm modes [ '755', '644' ]
259 silly gunzTarPerm extractEntry package.json
260 silly gunzTarPerm extractEntry .npmignore
261 silly gunzTarPerm extractEntry README.md
262 silly gunzTarPerm extractEntry Gruntfile.js
263 silly gunzTarPerm extractEntry CHANGELOG
264 silly gunzTarPerm extractEntry CONTRIBUTING.md
265 silly gunzTarPerm extractEntry .jshintrc
266 silly gunzTarPerm extractEntry LICENSE-MIT
267 silly gunzTarPerm extractEntry .travis.yml
268 silly gunzTarPerm extractEntry docs/uglify-examples.md
269 silly gunzTarPerm extractEntry docs/uglify-options.md
270 silly gunzTarPerm extractEntry docs/uglify-overview.md
271 silly gunzTarPerm extractEntry AUTHORS
272 silly gunzTarPerm extractEntry tasks/uglify.js
273 silly gunzTarPerm extractEntry tasks/lib/uglify.js
274 silly gunzTarPerm extractEntry test/uglify_test.js
275 silly gunzTarPerm extractEntry test/fixtures/expected/comments.js
276 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_banner.js
277 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_beautify.js
278 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_except.js
279 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapurl.js
280 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle.js
281 silly gunzTarPerm extractEntry test/fixtures/expected/exportAll.js
282 silly gunzTarPerm extractEntry test/fixtures/expected/compress.js
283 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps1.js
284 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapin.js
285 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps2.js
286 silly gunzTarPerm extractEntry test/fixtures/expected/enclose.js
287 silly gunzTarPerm extractEntry test/fixtures/expected/wrap.js
288 silly gunzTarPerm extractEntry test/fixtures/expected/multifile.js
289 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps2.map
290 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemap_prefix
291 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapin
292 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps1.map
293 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_sourcemap
294 silly gunzTarPerm extractEntry test/fixtures/src/comments.js
295 silly gunzTarPerm extractEntry test/fixtures/src/simple.js
296 silly gunzTarPerm extractEntry test/fixtures/src/simple2.js
297 silly gunzTarPerm extractEntry test/fixtures/src/simple2.coffee
298 silly gunzTarPerm extractEntry test/fixtures/src/simple2.map
299 silly lockFile b094ff6b-unt-contrib-uglify-0-2-7-package tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package
300 silly lockFile b094ff6b-unt-contrib-uglify-0-2-7-package tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package
301 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
302 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
303 verbose chmod /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz 644
304 verbose chown /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz [ 1000, 1000 ]
305 silly lockFile 90f282d3-y-grunt-contrib-uglify-0-2-7-tgz https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz
306 silly lockFile 90f282d3-y-grunt-contrib-uglify-0-2-7-tgz https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz
307 silly lockFile 480328f6-grunt-contrib-uglify-0-2-7 grunt-contrib-uglify@0.2.7
308 silly lockFile 480328f6-grunt-contrib-uglify-0-2-7 grunt-contrib-uglify@0.2.7
309 silly lockFile deac4dba-grunt-contrib-uglify-0-2-2 grunt-contrib-uglify@~0.2.2
310 silly lockFile deac4dba-grunt-contrib-uglify-0-2-2 grunt-contrib-uglify@~0.2.2
311 http 200 https://registry.npmjs.org/grunt-contrib-jshint
312 silly registry.get cb [ 200,
312 silly registry.get   { vary: 'Accept',
312 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
312 silly registry.get     etag: '"3KRY4YS9RP9EOMQ3R08BTK2OG"',
312 silly registry.get     date: 'Sun, 17 Nov 2013 21:46:22 GMT',
312 silly registry.get     'content-type': 'application/json',
312 silly registry.get     'content-length': '205443' } ]
313 silly addNameRange number 2 { name: 'grunt-contrib-jshint',
313 silly addNameRange   range: '>=0.6.3-0 <0.7.0-0',
313 silly addNameRange   hasData: true }
314 silly addNameRange versions [ 'grunt-contrib-jshint',
314 silly addNameRange   [ '0.1.0',
314 silly addNameRange     '0.1.1',
314 silly addNameRange     '0.2.0',
314 silly addNameRange     '0.3.0',
314 silly addNameRange     '0.4.0',
314 silly addNameRange     '0.4.1',
314 silly addNameRange     '0.4.2',
314 silly addNameRange     '0.4.3',
314 silly addNameRange     '0.5.0',
314 silly addNameRange     '0.5.1',
314 silly addNameRange     '0.5.2',
314 silly addNameRange     '0.5.3',
314 silly addNameRange     '0.5.4',
314 silly addNameRange     '0.6.0',
314 silly addNameRange     '0.6.1',
314 silly addNameRange     '0.6.2',
314 silly addNameRange     '0.6.3',
314 silly addNameRange     '0.6.4',
314 silly addNameRange     '0.6.5',
314 silly addNameRange     '0.7.0',
314 silly addNameRange     '0.7.1',
314 silly addNameRange     '0.7.2',
314 silly addNameRange     '0.1.1-rc5',
314 silly addNameRange     '0.1.1-rc6' ] ]
315 verbose addNamed [ 'grunt-contrib-jshint', '0.6.5' ]
316 verbose addNamed [ '0.6.5', '0.6.5' ]
317 silly lockFile d0b3f61f-grunt-contrib-jshint-0-6-5 grunt-contrib-jshint@0.6.5
318 verbose lock grunt-contrib-jshint@0.6.5 /home/ahmad/.npm/d0b3f61f-grunt-contrib-jshint-0-6-5.lock
319 silly lockFile cafed715-t-grunt-contrib-jshint-0-6-5-tgz https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz
320 verbose lock https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz /home/ahmad/.npm/cafed715-t-grunt-contrib-jshint-0-6-5-tgz.lock
321 verbose addRemoteTarball [ 'https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz',
321 verbose addRemoteTarball   '3afb4676745364cc4a19eee7934c0e06008b566e' ]
322 info retry fetch attempt 1 at 23:47:07
323 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/tmp.tgz
324 http GET https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz
325 http 200 https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz
326 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/tmp.tgz
327 silly lockFile f6e82531-27825-0-6747343428432941-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
328 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package /home/ahmad/.npm/f6e82531-27825-0-6747343428432941-package.lock
329 silly lockFile 310b1089-27825-0-6747343428432941-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/tmp.tgz
330 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/tmp.tgz /home/ahmad/.npm/310b1089-27825-0-6747343428432941-tmp-tgz.lock
331 silly gunzTarPerm modes [ '755', '644' ]
332 silly gunzTarPerm extractEntry package.json
333 silly gunzTarPerm extractEntry .npmignore
334 silly gunzTarPerm extractEntry README.md
335 silly gunzTarPerm extractEntry Gruntfile.js
336 silly gunzTarPerm extractEntry AUTHORS
337 silly gunzTarPerm extractEntry CHANGELOG
338 silly gunzTarPerm extractEntry CONTRIBUTING.md
339 silly gunzTarPerm extractEntry .jshintrc
340 silly gunzTarPerm extractEntry LICENSE-MIT
341 silly gunzTarPerm extractEntry .jshintignore
342 silly gunzTarPerm extractEntry docs/jshint-examples.md
343 silly gunzTarPerm extractEntry docs/jshint-options.md
344 silly gunzTarPerm extractEntry docs/jshint-overview.md
345 silly gunzTarPerm extractEntry .travis.yml
346 silly gunzTarPerm extractEntry tasks/jshint.js
347 silly gunzTarPerm extractEntry tasks/lib/jshint.js
348 silly gunzTarPerm extractEntry test/jshint_test.js
349 silly gunzTarPerm extractEntry test/fixtures/missingsemicolon.js
350 silly gunzTarPerm extractEntry test/fixtures/nodemodule.js
351 silly gunzTarPerm extractEntry test/fixtures/dontlint.txt
352 silly gunzTarPerm extractEntry test/fixtures/lint.txt
353 silly lockFile f6e82531-27825-0-6747343428432941-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
354 silly lockFile f6e82531-27825-0-6747343428432941-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
355 silly lockFile 310b1089-27825-0-6747343428432941-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/tmp.tgz
356 silly lockFile 310b1089-27825-0-6747343428432941-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/tmp.tgz
357 verbose tar pack [ '/home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz',
357 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package' ]
358 verbose tarball /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
359 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
360 silly lockFile f6e82531-27825-0-6747343428432941-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
361 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package /home/ahmad/.npm/f6e82531-27825-0-6747343428432941-package.lock
362 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
363 verbose lock tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz /home/ahmad/.npm/722405a8-contrib-jshint-0-6-5-package-tgz.lock
364 silly lockFile f6e82531-27825-0-6747343428432941-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
365 silly lockFile f6e82531-27825-0-6747343428432941-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724827825-0.6747343428432941/package
366 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
367 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
368 silly lockFile 1ce4ba94-unt-contrib-jshint-0-6-5-package /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package
369 verbose lock /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package /home/ahmad/.npm/1ce4ba94-unt-contrib-jshint-0-6-5-package.lock
370 silly lockFile 1ce4ba94-unt-contrib-jshint-0-6-5-package /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package
371 silly lockFile 1ce4ba94-unt-contrib-jshint-0-6-5-package /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package
372 verbose tar unpack /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
373 silly lockFile a788bfb9-unt-contrib-jshint-0-6-5-package tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package
374 verbose lock tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package /home/ahmad/.npm/a788bfb9-unt-contrib-jshint-0-6-5-package.lock
375 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
376 verbose lock tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz /home/ahmad/.npm/722405a8-contrib-jshint-0-6-5-package-tgz.lock
377 silly gunzTarPerm modes [ '755', '644' ]
378 silly gunzTarPerm extractEntry package.json
379 silly gunzTarPerm extractEntry .npmignore
380 silly gunzTarPerm extractEntry README.md
381 silly gunzTarPerm extractEntry Gruntfile.js
382 silly gunzTarPerm extractEntry AUTHORS
383 silly gunzTarPerm extractEntry CHANGELOG
384 silly gunzTarPerm extractEntry CONTRIBUTING.md
385 silly gunzTarPerm extractEntry .jshintrc
386 silly gunzTarPerm extractEntry LICENSE-MIT
387 silly gunzTarPerm extractEntry .jshintignore
388 silly gunzTarPerm extractEntry docs/jshint-examples.md
389 silly gunzTarPerm extractEntry docs/jshint-options.md
390 silly gunzTarPerm extractEntry docs/jshint-overview.md
391 silly gunzTarPerm extractEntry .travis.yml
392 silly gunzTarPerm extractEntry tasks/jshint.js
393 silly gunzTarPerm extractEntry tasks/lib/jshint.js
394 silly gunzTarPerm extractEntry test/jshint_test.js
395 silly gunzTarPerm extractEntry test/fixtures/missingsemicolon.js
396 silly gunzTarPerm extractEntry test/fixtures/nodemodule.js
397 silly gunzTarPerm extractEntry test/fixtures/dontlint.txt
398 silly gunzTarPerm extractEntry test/fixtures/lint.txt
399 silly lockFile a788bfb9-unt-contrib-jshint-0-6-5-package tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package
400 silly lockFile a788bfb9-unt-contrib-jshint-0-6-5-package tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package
401 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
402 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
403 verbose chmod /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz 644
404 verbose chown /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz [ 1000, 1000 ]
405 silly lockFile cafed715-t-grunt-contrib-jshint-0-6-5-tgz https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz
406 silly lockFile cafed715-t-grunt-contrib-jshint-0-6-5-tgz https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz
407 silly lockFile d0b3f61f-grunt-contrib-jshint-0-6-5 grunt-contrib-jshint@0.6.5
408 silly lockFile d0b3f61f-grunt-contrib-jshint-0-6-5 grunt-contrib-jshint@0.6.5
409 silly lockFile 6f38214b-grunt-contrib-jshint-0-6-3 grunt-contrib-jshint@~0.6.3
410 silly lockFile 6f38214b-grunt-contrib-jshint-0-6-3 grunt-contrib-jshint@~0.6.3
411 silly resolved [ { name: 'grunt',
411 silly resolved     description: 'The JavaScript Task Runner',
411 silly resolved     version: '0.4.1',
411 silly resolved     author: { name: '"Cowboy" Ben Alman', url: 'http://benalman.com/' },
411 silly resolved     homepage: 'http://gruntjs.com/',
411 silly resolved     repository: { type: 'git', url: 'git://github.com/gruntjs/grunt.git' },
411 silly resolved     bugs: { url: 'http://github.com/gruntjs/grunt/issues' },
411 silly resolved     licenses: [ [Object] ],
411 silly resolved     main: 'lib/grunt',
411 silly resolved     scripts: { test: 'grunt test' },
411 silly resolved     engines: { node: '>= 0.8.0' },
411 silly resolved     keywords:
411 silly resolved      [ 'task',
411 silly resolved        'async',
411 silly resolved        'cli',
411 silly resolved        'minify',
411 silly resolved        'uglify',
411 silly resolved        'build',
411 silly resolved        'lodash',
411 silly resolved        'unit',
411 silly resolved        'test',
411 silly resolved        'qunit',
411 silly resolved        'nodeunit',
411 silly resolved        'server',
411 silly resolved        'init',
411 silly resolved        'scaffold',
411 silly resolved        'make',
411 silly resolved        'jake',
411 silly resolved        'tool' ],
411 silly resolved     dependencies:
411 silly resolved      { async: '~0.1.22',
411 silly resolved        'coffee-script': '~1.3.3',
411 silly resolved        colors: '~0.6.0-1',
411 silly resolved        dateformat: '1.0.2-1.2.3',
411 silly resolved        eventemitter2: '~0.4.9',
411 silly resolved        'findup-sync': '~0.1.0',
411 silly resolved        glob: '~3.1.21',
411 silly resolved        hooker: '~0.2.3',
411 silly resolved        'iconv-lite': '~0.2.5',
411 silly resolved        minimatch: '~0.2.6',
411 silly resolved        nopt: '~1.0.10',
411 silly resolved        rimraf: '~2.0.2',
411 silly resolved        lodash: '~0.9.0',
411 silly resolved        'underscore.string': '~2.2.0rc',
411 silly resolved        which: '~1.0.5',
411 silly resolved        'js-yaml': '~2.0.2' },
411 silly resolved     devDependencies:
411 silly resolved      { temporary: '~0.0.4',
411 silly resolved        'grunt-contrib-jshint': '~0.1.1',
411 silly resolved        'grunt-contrib-nodeunit': '~0.1.2',
411 silly resolved        'grunt-contrib-watch': '~0.2.0',
411 silly resolved        difflet: '~0.2.3' },
411 silly resolved     contributors: [ [Object], [Object], [Object], [Object] ],
411 silly resolved     readme: '# Grunt: The JavaScript Task Runner [![Build Status](https://secure.travis-ci.org/gruntjs/grunt.png?branch=master)](http://travis-ci.org/gruntjs/grunt)\n\n### Documentation\n\nVisit the [gruntjs.com](http://gruntjs.com/) website for all the things.\n\n### Support / Contributing\nBefore you make an issue, please read our [Contributing](http://gruntjs.com/contributing) guide.\n\nYou can find the grunt team in [#grunt on irc.freenode.net](irc://irc.freenode.net/#grunt).\n\n### Release History\nSee the [CHANGELOG](CHANGELOG).\n',
411 silly resolved     readmeFilename: 'README.md',
411 silly resolved     _id: 'grunt@0.4.1',
411 silly resolved     _from: 'grunt@~0.4.1' },
411 silly resolved   { name: 'grunt-contrib-nodeunit',
411 silly resolved     description: 'Run Nodeunit unit tests.',
411 silly resolved     version: '0.2.2',
411 silly resolved     homepage: 'https://github.com/gruntjs/grunt-contrib-nodeunit',
411 silly resolved     author: { name: 'Grunt Team', url: 'http://gruntjs.com/' },
411 silly resolved     repository:
411 silly resolved      { type: 'git',
411 silly resolved        url: 'git://github.com/gruntjs/grunt-contrib-nodeunit.git' },
411 silly resolved     bugs: { url: 'https://github.com/gruntjs/grunt-contrib-nodeunit/issues' },
411 silly resolved     licenses: [ [Object] ],
411 silly resolved     engines: { node: '>= 0.8.0' },
411 silly resolved     scripts: { test: 'grunt test' },
411 silly resolved     dependencies: { nodeunit: '~0.8.0' },
411 silly resolved     devDependencies:
411 silly resolved      { 'grunt-contrib-jshint': '~0.5.4',
411 silly resolved        'grunt-contrib-internal': '~0.4.5',
411 silly resolved        grunt: '~0.4.0' },
411 silly resolved     peerDependencies: { grunt: '~0.4.0' },
411 silly resolved     keywords: [ 'gruntplugin' ],
411 silly resolved     contributors: [ [Object], [Object] ],
411 silly resolved     readme: '# grunt-contrib-nodeunit v0.2.2 [![Build Status](https://travis-ci.org/gruntjs/grunt-contrib-nodeunit.png?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-nodeunit)\n\n> Run Nodeunit unit tests.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven\'t used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you\'re familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-nodeunit --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks(\'grunt-contrib-nodeunit\');\n```\n\n\n\n\n## Nodeunit task\n_Run this task with the `grunt nodeunit` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\nThis plugin provides server-side JavaScript unit testing via [nodeunit](https://github.com/caolan/nodeunit/). If you\'re looking to test JavaScript that uses `window` or the DOM, please use the [grunt-contrib-qunit plugin](https://github.com/gruntjs/grunt-contrib-qunit)`qunit` task.\n\n\n### Usage examples\n\n#### Wildcards\n\nIn this example, `grunt nodeunit:all` or `grunt nodeunit` will test all files ending with `_test.js` in the `test` directory.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  nodeunit: {\n    all: [\'test/*_test.js\']\n  }\n});\n```\n\nWith a slight modification, `grunt nodeunit:all` will test files matching the same pattern in the `test` directory _and all subdirectories_.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  nodeunit: {\n    all: [\'test/**/*_test.js\']\n  }\n});\n```\n\n## Release History\n\n * 2013-10-19   v0.2.2   Allow missing operators on error object.\n * 2013-09-24   v0.2.1   Fix error display.\n * 2013-05-23   v0.2.0   Bump nodeunit to v0.8.0\n * 2013-02-15   v0.1.2   First official release for Grunt 0.4.0.\n * 2013-01-18   v0.1.2rc6   Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-09   v0.1.2rc5   Updating to work with grunt v0.4.0rc5. Switching to this.filesSrc api.\n * 2012-11-13   v0.1.1   Switch to this.file api internally.\n * 2012-11-04   v0.1.0   Work in progress, not yet officially released.\n\n---\n\nTask submitted by ["Cowboy" Ben Alman](http://benalman.com)\n\n*This file was generated on Sat Oct 19 2013 14:59:01.*\n',
411 silly resolved     readmeFilename: 'README.md',
411 silly resolved     _id: 'grunt-contrib-nodeunit@0.2.2',
411 silly resolved     dist: { shasum: 'e9f71778a5c76c70c8941282c19e491107a25039' },
411 silly resolved     _from: 'grunt-contrib-nodeunit@~0.2.0',
411 silly resolved     _resolved: 'https://registry.npmjs.org/grunt-contrib-nodeunit/-/grunt-contrib-nodeunit-0.2.2.tgz' },
411 silly resolved   { name: 'grunt-contrib-uglify',
411 silly resolved     description: 'Minify files with UglifyJS.',
411 silly resolved     version: '0.2.7',
411 silly resolved     homepage: 'https://github.com/gruntjs/grunt-contrib-uglify',
411 silly resolved     author: { name: 'Grunt Team', url: 'http://gruntjs.com/' },
411 silly resolved     repository:
411 silly resolved      { type: 'git',
411 silly resolved        url: 'git://github.com/gruntjs/grunt-contrib-uglify.git' },
411 silly resolved     bugs: { url: 'https://github.com/gruntjs/grunt-contrib-uglify/issues' },
411 silly resolved     licenses: [ [Object] ],
411 silly resolved     engines: { node: '>= 0.8.0' },
411 silly resolved     scripts: { test: 'grunt test' },
411 silly resolved     dependencies: { 'uglify-js': '~2.4.0', 'grunt-lib-contrib': '~0.6.1' },
411 silly resolved     devDependencies:
411 silly resolved      { 'grunt-contrib-jshint': '~0.6.3',
411 silly resolved        'grunt-contrib-nodeunit': '~0.2.0',
411 silly resolved        'grunt-contrib-clean': '~0.5.0',
411 silly resolved        'grunt-contrib-internal': '~0.4.2',
411 silly resolved        grunt: '~0.4.0' },
411 silly resolved     peerDependencies: { grunt: '~0.4.0' },
411 silly resolved     keywords: [ 'gruntplugin' ],
411 silly resolved     contributors: [ [Object], [Object], [Object] ],
411 silly resolved     readme: '# grunt-contrib-uglify v0.2.6 [![Build Status](https://travis-ci.org/gruntjs/grunt-contrib-uglify.png?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-uglify)\n\n> Minify files with UglifyJS.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven\'t used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you\'re familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-uglify --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks(\'grunt-contrib-uglify\');\n```\n\n\n\n\n## Uglify task\n_Run this task with the `grunt uglify` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n### Options\n\nThis task primarily delegates to [UglifyJS2][], so please consider the [UglifyJS documentation][] as required reading for advanced configuration.\n\n[UglifyJS2]: https://github.com/mishoo/UglifyJS2\n[UglifyJS documentation]: http://lisperator.net/uglifyjs/\n\n#### mangle\nType: `Boolean` `Object`\nDefault: `{}`\n\nTurn on or off mangling with default options. If an `Object` is specified, it is passed directly to `ast.mangle_names()` *and* `ast.compute_char_frequency()` (mimicking command line behavior).\n\n#### compress\nType: `Boolean` `Object`\nDefault: `{}`\n\nTurn on or off source compression with default options. If an `Object` is specified, it is passed as options to `UglifyJS.Compressor()`.\n\n#### beautify\nType: `Boolean` `Object`\nDefault: `false`\n\nTurns on beautification of the generated source code. An `Object` will be merged and passed with the options sent to `UglifyJS.OutputStream()`\n\n#### report\nChoices: `false` `\'min\'` `\'gzip\'`\nDefault: `false`\n\nEither do not report anything, report only minification result, or report minification and gzip results. This is useful to see exactly how well Uglify is performing, but using `\'gzip\'` can add 5-10x runtime task execution.\n\nExample ouput using `\'gzip\'`:\n\n```\nOriginal: 198444 bytes.\nMinified: 101615 bytes.\nGzipped:  20084 bytes.\n```\n\n#### sourceMap\nType: `String`  `Function`\nDefault: `undefined`\n\nThe location to output the sourcemap. If a function is provided, the uglify destination is passed as the argument\nand the return value will be used as the sourceMap name.\n\n#### sourceMapRoot\nType: `String`\nDefault: `undefined`\n\nThe location where your source files can be found. This sets the sourceRoot field in the source map.\n\n#### sourceMapIn\nType: `String`  `Function`\nDefault: `undefined`\n\nThe location of an input source map from an earlier compilation, e.g. from CoffeeScript. If a function is provided, the\nuglify source is passed as the argument and the return value will be used as the sourceMap name. This only makes sense\nwhen there\'s one source file.\n\n#### sourceMappingURL\nType: `String`  `Function`\nDefault: `undefined`\n\nThe location of your sourcemap. Defaults to the location you use for sourceMap, override if you need finer control. Provide\na function to dynamically generate the sourceMappingURL based off the destination.\n\n#### sourceMapPrefix\nType: `Number`\nDefault: `undefined`\n\nThe number of directories to drop from the path prefix when declaring files in the source map.\n\n###### enclose\nType: `Object`\nDefault: `undefined`\n\nWrap all of the code in a closure with a configurable arguments/parameters list.\nEach key-value pair in the `enclose` object is effectively an argument-parameter pair.\n\n#### wrap\nType: `String`\nDefault: `undefined`\n\nWrap all of the code in a closure, an easy way to make sure nothing is leaking.\nFor variables that need to be public `exports` and `global` variables are made available.\nThe value of wrap is the global variable exports will be available as.\n\n#### exportAll\nType: `Boolean`\nDefault: `false`\n\nWhen using `wrap` this will make all global functions and variables available via the export variable.\n\n#### preserveComments\nType: `Boolean` `String` `Function`\nDefault: `undefined`\nOptions: `false` `\'all\'` `\'some\'`\n\nTurn on preservation of comments.\n\n- `false` will strip all comments\n- `\'all\'` will preserve all comments in code blocks that have not been squashed or dropped\n- `\'some\'` will preserve all comments that start with a bang (`!`) or include a closure compiler style directive (`@preserve` `@license` `@cc_on`)\n- `Function` specify your own comment preservation function. You will be passed the current node and the current comment and are expected to return either `true` or `false`\n\n#### banner\nType: `String`\nDefault: empty string\n\nThis string will be prepended to the beginning of the minified output. It is processed using [grunt.template.process][], using the default options.\n\n#### footer\nType: `String`\nDefault: empty string\n\nThis string will be append to the end of the minified output. It is processed using [grunt.template.process][], using the default options.\n\n_(Default processing options are explained in the [grunt.template.process][] documentation)_\n\n[grunt.template.process]: https://github.com/gruntjs/grunt/wiki/grunt.template#wiki-grunt-template-process\n\n\n### Usage examples\n\n#### Basic compression\n\nThis configuration will compress and mangle the input files using the default options.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    my_target: {\n      files: {\n        \'dest/output.min.js\': [\'src/input1.js\', \'src/input2.js\']\n      }\n    }\n  }\n});\n```\n\n#### No mangling\n\nSpecify `mangle: false` to prevent changes to your variable and function names.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    options: {\n      mangle: false\n    },\n    my_target: {\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    }\n  }\n});\n```\n\n#### Reserved identifiers\n\nYou can specify identifiers to leave untouched with an `except` array in the `mangle` options.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    options: {\n      mangle: {\n        except: [\'jQuery\', \'Backbone\']\n      }\n    },\n    my_target: {\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    }\n  }\n});\n```\n\n#### Source maps\n\nConfigure basic source map output by specifying a file path for the `sourceMap` option.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    my_target: {\n      options: {\n        sourceMap: \'path/to/source-map.js\'\n      },\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    }\n  }\n});\n```\n\n#### Advanced source maps\n\nYou can specify the parameters to pass to `UglifyJS.SourceMap()` which will\nallow you to configure advanced settings.\n\nRefer to the [UglifyJS SourceMap Documentation](http://lisperator.net/uglifyjs/codegen#source-map) for more information.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    my_target: {\n      options: {\n        sourceMap: \'path/to/source-map.js\',\n        sourceMapRoot: \'http://example.com/path/to/src/\', // the location to find your original source\n        sourceMapIn: \'example/coffeescript-sourcemap.js\', // input sourcemap from a previous compilation\n      },\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\'],\n      },\n    },\n  },\n});\n```\n\n\n#### Beautify\n\nSpecify `beautify: true` to beautify your code for debugging/troubleshooting purposes.\nPass an object to manually configure any other output options passed directly to `UglifyJS.OutputStream()`.\n\nSee [UglifyJS Codegen documentation](http://lisperator.net/uglifyjs/codegen) for more information.\n\n_Note that manual configuration will require you to explicitly set `beautify: true` if you want traditional, beautified output._\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    my_target: {\n      options: {\n        beautify: true\n      },\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    },\n    my_advanced_target: {\n      options: {\n        beautify: {\n          width: 80,\n          beautify: true\n        }\n      },\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    }\n  }\n});\n```\n\n#### Banner comments\n\nIn this example, running `grunt uglify:my_target` will prepend a banner created by interpolating the `banner` template string with the config object. Here, those properties are the values imported from the `package.json` file (which are available via the `pkg` config property) plus today\'s date.\n\n_Note: you don\'t have to use an external JSON file. It\'s also valid to create the `pkg` object inline in the config. That being said, if you already have a JSON file, you might as well reference it._\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  pkg: grunt.file.readJSON(\'package.json\'),\n  uglify: {\n    options: {\n      banner: \'/*! <%= pkg.name %> - v<%= pkg.version %> - \' +\n        \'<%= grunt.template.today("yyyy-mm-dd") %> */\'\n    },\n    my_target: {\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    }\n  }\n});\n```\n\n#### Conditional compilation\n\nYou can also enable UglifyJS conditional compilation. This is commonly used to remove debug code blocks for production builds.\n\nSee [UglifyJS global definitions documentation](http://lisperator.net/uglifyjs/compress#global-defs) for more information.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    options: {\n      compress: {\n        global_defs: {\n          "DEBUG": false\n        },\n        dead_code: true\n      }\n    },\n    my_target: {\n      files: {\n        \'dest/output.min.js\': [\'src/input.js\']\n      }\n    }\n  }\n});\n```\n#### Compiling all files in a folder dynamically\n\nThis configuration will compress and mangle the files dynamically.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  uglify: {\n    my_target: {\n      files: [{\n          expand: true,\n          cwd: \'src/js\',\n          src: \'**/*.js\',\n          dest: \'dest/js\'\n      }]\n    }\n  }\n});\n```\n\n\n## Release History\n\n * 2013-11-09   v0.2.7   prepending banner if sourceMap option not set, addresses\n * 2013-11-08   v0.2.6   merged 45, 53, 85 (105 by way of duping 53) Added support for banners in uglified files with sourcemaps Updated docs\n * 2013-10-28   v0.2.5   Added warning for banners when using sourcemaps\n * 2013-09-02   v0.2.4   updated sourcemap format via /83\n * 2013-06-10   v0.2.3   added footer option\n * 2013-05-31   v0.2.2   Reverted /56 due to /58 until [chrome/239660](https://code.google.com/p/chromium/issues/detail?id=239660&q=sourcemappingurl&colspec=ID%20Pri%20M%20Iteration%20ReleaseBlock%20Cr%20Status%20Owner%20Summary%20OS%20Modified) [firefox/870361](https://bugzilla.mozilla.org/show_bug.cgi?id=870361) drop\n * 2013-05-22   v0.2.1   Bumped uglify to ~2.3.5 /55 /40 Changed sourcemappingUrl syntax /56 Disabled sorting of names for consistent mangling /44 Updated docs for sourceMapRoot /47 /25\n * 2013-03-14   v0.2.0   No longer report gzip results by default. Support `report` option.\n * 2013-01-30   v0.1.2   Added better error reporting Support for dynamic names of multiple sourcemaps\n * 2013-02-15   v0.1.1   First official release for Grunt 0.4.0.\n * 2013-01-18   v0.1.1rc6   Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-09   v0.1.1rc5   Updating to work with grunt v0.4.0rc5. Switching back to this.files api.\n * 2012-11-28   v0.1.0   Work in progress, not yet officially released.\n\n---\n\nTask submitted by ["Cowboy" Ben Alman](http://benalman.com)\n\n*This file was generated on Sat Nov 09 2013 12:42:05.*\n',
411 silly resolved     readmeFilename: 'README.md',
411 silly resolved     _id: 'grunt-contrib-uglify@0.2.7',
411 silly resolved     dist: { shasum: 'c99c192fe487fb41d809e9268189de7438f816b2' },
411 silly resolved     _from: 'grunt-contrib-uglify@~0.2.2',
411 silly resolved     _resolved: 'https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-0.2.7.tgz' },
411 silly resolved   { name: 'grunt-contrib-jshint',
411 silly resolved     description: 'Validate files with JSHint.',
411 silly resolved     version: '0.6.5',
411 silly resolved     homepage: 'https://github.com/gruntjs/grunt-contrib-jshint',
411 silly resolved     author: { name: 'Grunt Team', url: 'http://gruntjs.com/' },
411 silly resolved     repository:
411 silly resolved      { type: 'git',
411 silly resolved        url: 'git://github.com/gruntjs/grunt-contrib-jshint.git' },
411 silly resolved     bugs: { url: 'https://github.com/gruntjs/grunt-contrib-jshint/issues' },
411 silly resolved     licenses: [ [Object] ],
411 silly resolved     engines: { node: '>= 0.8.0' },
411 silly resolved     scripts: { test: 'grunt test' },
411 silly resolved     dependencies: { jshint: '~2.1.10' },
411 silly resolved     devDependencies:
411 silly resolved      { 'grunt-contrib-nodeunit': '~0.1.2',
411 silly resolved        'grunt-contrib-internal': '~0.4.6',
411 silly resolved        grunt: '~0.4.0' },
411 silly resolved     peerDependencies: { grunt: '~0.4.0' },
411 silly resolved     keywords: [ 'gruntplugin' ],
411 silly resolved     contributors: [ [Object], [Object] ],
411 silly resolved     readme: '# grunt-contrib-jshint v0.6.5 [![Build Status](https://travis-ci.org/gruntjs/grunt-contrib-jshint.png?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-jshint)\n\n> Validate files with JSHint.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven\'t used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you\'re familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-jshint --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks(\'grunt-contrib-jshint\');\n```\n\n\n\n\n## Jshint task\n_Run this task with the `grunt jshint` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\nFor more explanations of the lint errors JSHint will throw at you please visit [jslinterrors.com](http://jslinterrors.com/).\n\n### Options\n\nAny specified option will be passed through directly to [JSHint][], thus you can specify any option that JSHint supports. See the [JSHint documentation][] for a list of supported options.\n\n[JSHint]: http://www.jshint.com/\n[JSHint documentation]: http://www.jshint.com/docs/\n\nA few additional options are supported:\n\n#### globals\nType: `Object`\nDefault value: `null`\n\nA map of global variables, with keys as names and a boolean value to determine if they are assignable. This is not a standard JSHint option, but is passed into the `JSHINT` function as its third argument. See the [JSHint documentation][] for more information.\n\n#### jshintrc\nType: `String`\nDefault value: `null`\n\nIf this filename is specified, options and globals defined therein will be used. The `jshintrc` file must be valid JSON and looks something like this:\n\n```json\n{\n  "curly": true,\n  "eqnull": true,\n  "eqeqeq": true,\n  "undef": true,\n  "globals": {\n    "jQuery": true\n  }\n}\n```\n\n*Be aware that `jshintrc` settings are not merged with your Grunt options.*\n\n#### extensions\nType: `String`\nDefault value: `\'\'`\n\nA list of non-dot-js extensions to check.\n\n#### ignores\nType: `Array`\nDefault value: `null`\n\nA list of files and dirs to ignore. This will override your `.jshintignore` file if set and does not merge.\n\n#### force\nType: `Boolean`\nDefault value: `false`\n\nSet `force` to `true` to report JSHint errors but not fail the task.\n\n#### reporter\nType: `String`\nDefault value: `null`\n\nAllows you to modify this plugins output. By default it will use a built-in Grunt reporter. Set the path to your own custom reporter or to one of the built-in JSHint reporters: `jslint` or `checkstyle`.\n\nSee also: [Writing your own JSHint reporter.](http://jshint.com/docs/reporters/)\n\n#### reporterOutput\nType: `String`\nDefault value: `null`\n\nSpecify a filepath to output the results of a reporter. If `reporterOutput` is specified then all output will be written to the given filepath instead of printed to stdout.\n\n### Usage examples\n\n#### Wildcards\nIn this example, running `grunt jshint:all` (or `grunt jshint` because `jshint` is a [multi task](http://gruntjs.com/configuring-tasks#task-configuration-and-targets)) will lint the project\'s Gruntfile as well as all JavaScript files in the `lib` and `test` directories and their subdirectores, using the default JSHint options.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  jshint: {\n    all: [\'Gruntfile.js\', \'lib/**/*.js\', \'test/**/*.js\']\n  }\n});\n```\n\n#### Linting before and after concatenating\nIn this example, running `grunt jshint` will lint both the "beforeconcat" set and "afterconcat" sets of files. This is not ideal, because `dist/output.js` may get linted before it gets created via the [grunt-contrib-concat plugin](https://github.com/gruntjs/grunt-contrib-concat) `concat` task.\n\nIn this case, you should lint the "beforeconcat" files first, then concat, then lint the "afterconcat" files, by running `grunt jshint:beforeconcat concat jshint:afterconcat`.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  concat: {\n    dist: {\n      src: [\'src/foo.js\', \'src/bar.js\'],\n      dest: \'dist/output.js\'\n    }\n  },\n  jshint: {\n    beforeconcat: [\'src/foo.js\', \'src/bar.js\'],\n    afterconcat: [\'dist/output.js\']\n  }\n});\n```\n\n#### Specifying JSHint options and globals\n\nIn this example, custom JSHint options are specified. Note that when `grunt jshint:uses_defaults` is run, those files are linted using the default options, but when `grunt jshint:with_overrides` is run, those files are linted using _merged_ task/target options.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  jshint: {\n    options: {\n      curly: true,\n      eqeqeq: true,\n      eqnull: true,\n      browser: true,\n      globals: {\n        jQuery: true\n      },\n    },\n    uses_defaults: [\'dir1/**/*.js\', \'dir2/**/*.js\'],\n    with_overrides: {\n      options: {\n        curly: false,\n        undef: true,\n      },\n      files: {\n        src: [\'dir3/**/*.js\', \'dir4/**/*.js\']\n      },\n    }\n  },\n});\n```\n\n#### Ignoring specific warnings\n\nIf you would like to ignore a specific warning:\n\n```shell\n[L24:C9] W015: Expected \'}\' to have an indentation at 11 instead at 9.\n```\n\nYou can toggle it by prepending `-` to the warning id as an option:\n\n```js\ngrunt.initConfig({\n  jshint: {\n    ignore_warning: {\n      options: {\n        \'-W015\': true,\n      },\n      src: [\'**/*.js\'],\n    },\n  },\n});\n```\n\n#### Ignoring specific files\n\nOccasionally application files and third party libraries share the same directory.  To exclude third party code, but include all current and future application files, use a glob for `files` and specifically exclude libraries using `ignores`.  In this example, the jQuery file is matched by the glob but subsequently ignored when JSHint does its analysis.\n\n```js\ngrunt.initConfig({\n    jshint: {\n        files: [\'js/*.js\'],\n        options: {\n            ignores: [\'js/jquery.js\']\n        }\n    }\n});\n```\n\n\n## Release History\n\n * 2013-10-23   v0.6.5   Fix output when maxerr is low.\n * 2013-08-29   v0.6.4   jshintrc now loaded by jshint allowing comments.\n * 2013-08-15   v0.6.3   Fix module location for jshint 2.1.10.\n * 2013-07-29   v0.6.2   Update to jshint 2.1.7.\n * 2013-07-27   v0.6.1   Peg jshint to 2.1.4 until breaking changes in 2.1.5 are fixed.\n * 2013-06-02   v0.6.0   Dont always succeed the task when using a custom reporter. Bump jshint to 2.1.3.\n * 2013-05-22   v0.5.4   Fix default reporter to show offending file.\n * 2013-05-19   v0.5.3   Performance: Execute the reporter once rather than per file.\n * 2013-05-18   v0.5.2   Fix printing too many erroneous ignored file errors.\n * 2013-05-17   v0.5.1   Fix for when only 1 file is lint free.\n * 2013-05-17   v0.5.0   Bump to jshint 2.0. Add support for .jshintignore files and ignores option Add support for extensions option. Add support for custom reporters and output report to a file.\n * 2013-04-08   v0.4.3   Fix evaluation of predef option when it\'s an object.\n * 2013-04-08   v0.4.2   Avoid wiping force option when jshintrc is used.\n * 2013-04-06   v0.4.1   Fix to allow object type for deprecated predef.\n * 2013-04-04   v0.4.0   Revert task level options to override jshintrc files.\n * 2013-03-13   v0.3.0   Bump to JSHint 1.1.0. Add force option to report JSHint errors but not fail the task. Add error/warning code to message. Allow task level options to override jshintrc file.\n * 2013-02-26   v0.2.0   Bump to JSHint 1.0\n * 2013-02-15   v0.1.1   First official release for Grunt 0.4.0.\n * 2013-01-18   v0.1.1rc6   Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-09   v0.1.1rc5   Updating to work with grunt v0.4.0rc5. Switching to this.filesSrc api.\n * 2012-10-18   v0.1.0   Work in progress, not yet officially released.\n\n---\n\nTask submitted by ["Cowboy" Ben Alman](http://benalman.com/)\n\n*This file was generated on Wed Oct 23 2013 20:33:11.*\n',
411 silly resolved     readmeFilename: 'README.md',
411 silly resolved     _id: 'grunt-contrib-jshint@0.6.5',
411 silly resolved     dist: { shasum: 'f609f67e07080db0601770abac5ccf48253612c3' },
411 silly resolved     _from: 'grunt-contrib-jshint@~0.6.3',
411 silly resolved     _resolved: 'https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-0.6.5.tgz' } ]
412 info install grunt@0.4.1 into /var/www/sites/marker/http
413 info install grunt-contrib-nodeunit@0.2.2 into /var/www/sites/marker/http
414 info install grunt-contrib-uglify@0.2.7 into /var/www/sites/marker/http
415 info install grunt-contrib-jshint@0.6.5 into /var/www/sites/marker/http
416 info installOne grunt@0.4.1
417 info installOne grunt-contrib-nodeunit@0.2.2
418 info installOne grunt-contrib-uglify@0.2.7
419 info installOne grunt-contrib-jshint@0.6.5
420 info /var/www/sites/marker/http/node_modules/grunt unbuild
421 info /var/www/sites/marker/http/node_modules/grunt-contrib-nodeunit unbuild
422 info /var/www/sites/marker/http/node_modules/grunt-contrib-uglify unbuild
423 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint unbuild
424 verbose tar unpack /home/ahmad/.npm/grunt/0.4.1/package.tgz
425 silly lockFile 8c280c2d-s-marker-http-node-modules-grunt tar:///var/www/sites/marker/http/node_modules/grunt
426 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt /home/ahmad/.npm/8c280c2d-s-marker-http-node-modules-grunt.lock
427 silly lockFile da16b501-hmad-npm-grunt-0-4-1-package-tgz tar:///home/ahmad/.npm/grunt/0.4.1/package.tgz
428 verbose lock tar:///home/ahmad/.npm/grunt/0.4.1/package.tgz /home/ahmad/.npm/da16b501-hmad-npm-grunt-0-4-1-package-tgz.lock
429 verbose tar unpack /home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
430 silly lockFile d88ee70d-e-modules-grunt-contrib-nodeunit tar:///var/www/sites/marker/http/node_modules/grunt-contrib-nodeunit
431 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-nodeunit /home/ahmad/.npm/d88ee70d-e-modules-grunt-contrib-nodeunit.lock
432 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
433 verbose lock tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz /home/ahmad/.npm/7d4264ad-ntrib-nodeunit-0-2-2-package-tgz.lock
434 verbose tar unpack /home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
435 silly lockFile 50576e43-ode-modules-grunt-contrib-uglify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify
436 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify /home/ahmad/.npm/50576e43-ode-modules-grunt-contrib-uglify.lock
437 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
438 verbose lock tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz /home/ahmad/.npm/e8383fd4-contrib-uglify-0-2-7-package-tgz.lock
439 verbose tar unpack /home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
440 silly lockFile b896b88c-ode-modules-grunt-contrib-jshint tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint
441 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint /home/ahmad/.npm/b896b88c-ode-modules-grunt-contrib-jshint.lock
442 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
443 verbose lock tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz /home/ahmad/.npm/722405a8-contrib-jshint-0-6-5-package-tgz.lock
444 silly gunzTarPerm modes [ '755', '644' ]
445 silly gunzTarPerm modes [ '755', '644' ]
446 silly gunzTarPerm modes [ '755', '644' ]
447 silly gunzTarPerm modes [ '755', '644' ]
448 silly gunzTarPerm extractEntry package.json
449 silly gunzTarPerm extractEntry package.json
450 silly gunzTarPerm extractEntry package.json
451 silly gunzTarPerm extractEntry package.json
452 silly gunzTarPerm extractEntry .npmignore
453 silly gunzTarPerm extractEntry README.md
454 silly gunzTarPerm extractEntry .npmignore
455 silly gunzTarPerm extractEntry README.md
456 silly gunzTarPerm extractEntry .npmignore
457 silly gunzTarPerm extractEntry README.md
458 silly gunzTarPerm extractEntry .npmignore
459 silly gunzTarPerm extractEntry README.md
460 silly gunzTarPerm extractEntry Gruntfile.js
461 silly gunzTarPerm extractEntry CHANGELOG
462 silly gunzTarPerm extractEntry Gruntfile.js
463 silly gunzTarPerm extractEntry custom-gruntfile.js
464 silly gunzTarPerm extractEntry Gruntfile.js
465 silly gunzTarPerm extractEntry AUTHORS
466 silly gunzTarPerm extractEntry Gruntfile.js
467 silly gunzTarPerm extractEntry CHANGELOG
468 silly gunzTarPerm extractEntry CONTRIBUTING.md
469 silly gunzTarPerm extractEntry .jshintrc
470 silly gunzTarPerm extractEntry LICENSE-MIT
471 silly gunzTarPerm extractEntry .travis.yml
472 silly gunzTarPerm extractEntry docs/uglify-examples.md
473 silly gunzTarPerm extractEntry docs/uglify-options.md
474 silly gunzTarPerm extractEntry docs/uglify-overview.md
475 silly gunzTarPerm extractEntry AUTHORS
476 silly gunzTarPerm extractEntry tasks/uglify.js
477 silly gunzTarPerm extractEntry tasks/lib/uglify.js
478 silly gunzTarPerm extractEntry test/uglify_test.js
479 silly gunzTarPerm extractEntry test/fixtures/expected/comments.js
480 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_banner.js
481 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_beautify.js
482 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_except.js
483 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapurl.js
484 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle.js
485 silly gunzTarPerm extractEntry test/fixtures/expected/exportAll.js
486 silly gunzTarPerm extractEntry test/fixtures/expected/compress.js
487 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps1.js
488 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapin.js
489 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps2.js
490 silly gunzTarPerm extractEntry test/fixtures/expected/enclose.js
491 silly gunzTarPerm extractEntry test/fixtures/expected/wrap.js
492 silly gunzTarPerm extractEntry test/fixtures/expected/multifile.js
493 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps2.map
494 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemap_prefix
495 silly gunzTarPerm extractEntry test/fixtures/expected/sourcemapin
496 silly gunzTarPerm extractEntry test/fixtures/expected/multiple_sourcemaps1.map
497 silly gunzTarPerm extractEntry test/fixtures/expected/compress_mangle_sourcemap
498 silly gunzTarPerm extractEntry test/fixtures/src/comments.js
499 silly gunzTarPerm extractEntry test/fixtures/src/simple.js
500 silly gunzTarPerm extractEntry test/fixtures/src/simple2.js
501 silly gunzTarPerm extractEntry test/fixtures/src/simple2.coffee
502 silly gunzTarPerm extractEntry test/fixtures/src/simple2.map
503 silly gunzTarPerm extractEntry CONTRIBUTING.md
504 silly gunzTarPerm extractEntry .jshintrc
505 silly gunzTarPerm extractEntry test/fixtures/a.js
506 silly gunzTarPerm extractEntry test/fixtures/b.js
507 silly gunzTarPerm extractEntry CHANGELOG
508 silly gunzTarPerm extractEntry CONTRIBUTING.md
509 silly gunzTarPerm extractEntry .jshintrc
510 silly gunzTarPerm extractEntry LICENSE-MIT
511 silly gunzTarPerm extractEntry .jshintignore
512 silly gunzTarPerm extractEntry docs/jshint-examples.md
513 silly gunzTarPerm extractEntry docs/jshint-options.md
514 silly gunzTarPerm extractEntry docs/jshint-overview.md
515 silly gunzTarPerm extractEntry .travis.yml
516 silly gunzTarPerm extractEntry tasks/jshint.js
517 silly gunzTarPerm extractEntry tasks/lib/jshint.js
518 silly gunzTarPerm extractEntry test/jshint_test.js
519 silly gunzTarPerm extractEntry test/fixtures/missingsemicolon.js
520 silly gunzTarPerm extractEntry test/fixtures/nodemodule.js
521 silly gunzTarPerm extractEntry test/fixtures/dontlint.txt
522 silly gunzTarPerm extractEntry test/fixtures/lint.txt
523 silly gunzTarPerm extractEntry test/fixtures/banner.js
524 silly gunzTarPerm extractEntry test/fixtures/banner2.js
525 silly gunzTarPerm extractEntry LICENSE-MIT
526 silly gunzTarPerm extractEntry .travis.yml
527 silly gunzTarPerm extractEntry test/fixtures/banner3.js
528 silly gunzTarPerm extractEntry test/fixtures/Gruntfile-print-text.js
529 silly gunzTarPerm extractEntry docs/nodeunit-examples.md
530 silly gunzTarPerm extractEntry docs/nodeunit-options.md
531 silly gunzTarPerm extractEntry docs/nodeunit-overview.md
532 silly gunzTarPerm extractEntry AUTHORS
533 silly gunzTarPerm extractEntry tasks/nodeunit.js
534 silly gunzTarPerm extractEntry test/nodeunit_test.js
535 silly gunzTarPerm extractEntry test/fixtures/fail.js
536 silly gunzTarPerm extractEntry test/fixtures/spawn-multibyte.js
537 silly gunzTarPerm extractEntry test/fixtures/spawn.js
538 silly gunzTarPerm extractEntry test/fixtures/iso-8859-1.json
539 silly gunzTarPerm extractEntry test/fixtures/expand/README.md
540 silly gunzTarPerm extractEntry test/fixtures/expand/css/baz.css
541 silly gunzTarPerm extractEntry test/fixtures/expand/css/qux.css
542 silly gunzTarPerm extractEntry test/fixtures/expand/deep/deep.txt
543 silly gunzTarPerm extractEntry test/fixtures/expand/deep/deeper/deeper.txt
544 silly gunzTarPerm extractEntry test/fixtures/expand/deep/deeper/deepest/deepest.txt
545 silly gunzTarPerm extractEntry test/fixtures/expand/js/bar.js
546 silly gunzTarPerm extractEntry test/fixtures/expand/js/foo.js
547 silly gunzTarPerm extractEntry test/fixtures/expand-mapping-ext/dir.ectory/file-no-extension
548 silly gunzTarPerm extractEntry test/fixtures/expand-mapping-ext/dir.ectory/sub.dir.ectory/file.ext.ension
549 silly gunzTarPerm extractEntry test/fixtures/expand-mapping-ext/file.ext.ension
550 silly gunzTarPerm extractEntry test/fixtures/files/dist/built-123-a.js
551 silly gunzTarPerm extractEntry test/fixtures/files/dist/built-123-b.js
552 silly gunzTarPerm extractEntry test/fixtures/files/dist/built-a.js
553 silly gunzTarPerm extractEntry test/fixtures/files/dist/built-b.js
554 silly gunzTarPerm extractEntry test/fixtures/files/dist/built.js
555 silly gunzTarPerm extractEntry test/fixtures/files/src/file1-123.js
556 silly gunzTarPerm extractEntry test/fixtures/files/src/file1.js
557 silly gunzTarPerm extractEntry test/fixtures/files/src/file2-123.js
558 silly gunzTarPerm extractEntry test/fixtures/files/src/file2.js
559 silly gunzTarPerm extractEntry test/fixtures/BOM.txt
560 silly gunzTarPerm extractEntry test/fixtures/iso-8859-1.txt
561 silly gunzTarPerm extractEntry test/fixtures/iso-8859-1.yaml
562 silly gunzTarPerm extractEntry test/fixtures/lint.txt
563 silly gunzTarPerm extractEntry test/fixtures/no_BOM.txt
564 silly gunzTarPerm extractEntry test/fixtures/octocat.png
565 silly gunzTarPerm extractEntry test/fixtures/exec.cmd
566 silly gunzTarPerm extractEntry test/fixtures/exec.sh
567 silly gunzTarPerm extractEntry test/fixtures/template.txt
568 silly gunzTarPerm extractEntry test/fixtures/test.json
569 silly gunzTarPerm extractEntry test/fixtures/utf8.json
570 silly gunzTarPerm extractEntry test/fixtures/utf8.txt
571 silly gunzTarPerm extractEntry test/fixtures/utf8.yaml
572 silly gunzTarPerm extractEntry test/grunt/config_test.js
573 silly gunzTarPerm extractEntry test/grunt/event_test.js
574 silly gunzTarPerm extractEntry test/grunt/file_test.js
575 silly gunzTarPerm extractEntry test/grunt/log_test.js
576 silly gunzTarPerm extractEntry test/grunt/option_test.js
577 silly gunzTarPerm extractEntry test/grunt/task_test.js
578 silly gunzTarPerm extractEntry test/grunt/template_test.js
579 silly gunzTarPerm extractEntry test/grunt/util_test.js
580 silly gunzTarPerm extractEntry test/gruntfile/multi-task-files.js
581 silly gunzTarPerm extractEntry test/util/namespace_test.js
582 silly gunzTarPerm extractEntry test/util/task_test.js
583 silly gunzTarPerm extractEntry .travis.yml
584 silly gunzTarPerm extractEntry AUTHORS
585 silly gunzTarPerm extractEntry CHANGELOG
586 silly gunzTarPerm extractEntry docs/README.md
587 silly gunzTarPerm extractEntry lib/grunt.js
588 silly gunzTarPerm extractEntry lib/grunt/cli.js
589 silly gunzTarPerm extractEntry lib/grunt/event.js
590 silly gunzTarPerm extractEntry lib/grunt/fail.js
591 silly gunzTarPerm extractEntry lib/grunt/file.js
592 silly gunzTarPerm extractEntry lib/grunt/config.js
593 silly gunzTarPerm extractEntry lib/grunt/log.js
594 silly gunzTarPerm extractEntry lib/grunt/option.js
595 silly gunzTarPerm extractEntry lib/grunt/task.js
596 silly gunzTarPerm extractEntry lib/grunt/template.js
597 silly gunzTarPerm extractEntry lib/grunt/util.js
598 silly gunzTarPerm extractEntry lib/grunt/help.js
599 silly gunzTarPerm extractEntry lib/util/exit.js
600 silly gunzTarPerm extractEntry lib/util/namespace.js
601 silly gunzTarPerm extractEntry lib/util/task.js
602 silly gunzTarPerm extractEntry CONTRIBUTING.md
603 silly gunzTarPerm extractEntry LICENSE-MIT
604 silly lockFile d88ee70d-e-modules-grunt-contrib-nodeunit tar:///var/www/sites/marker/http/node_modules/grunt-contrib-nodeunit
605 silly lockFile d88ee70d-e-modules-grunt-contrib-nodeunit tar:///var/www/sites/marker/http/node_modules/grunt-contrib-nodeunit
606 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
607 silly lockFile 7d4264ad-ntrib-nodeunit-0-2-2-package-tgz tar:///home/ahmad/.npm/grunt-contrib-nodeunit/0.2.2/package.tgz
608 info preinstall grunt-contrib-nodeunit@0.2.2
609 verbose readDependencies using package.json deps
610 verbose readDependencies using package.json deps
611 verbose cache add [ 'nodeunit@~0.8.0', null ]
612 verbose cache add name=undefined spec="nodeunit@~0.8.0" args=["nodeunit@~0.8.0",null]
613 verbose parsed url { protocol: null,
613 verbose parsed url   slashes: null,
613 verbose parsed url   auth: null,
613 verbose parsed url   host: null,
613 verbose parsed url   port: null,
613 verbose parsed url   hostname: null,
613 verbose parsed url   hash: null,
613 verbose parsed url   search: null,
613 verbose parsed url   query: null,
613 verbose parsed url   pathname: 'nodeunit@~0.8.0',
613 verbose parsed url   path: 'nodeunit@~0.8.0',
613 verbose parsed url   href: 'nodeunit@~0.8.0' }
614 verbose cache add name="nodeunit" spec="~0.8.0" args=["nodeunit","~0.8.0"]
615 verbose parsed url { protocol: null,
615 verbose parsed url   slashes: null,
615 verbose parsed url   auth: null,
615 verbose parsed url   host: null,
615 verbose parsed url   port: null,
615 verbose parsed url   hostname: null,
615 verbose parsed url   hash: null,
615 verbose parsed url   search: null,
615 verbose parsed url   query: null,
615 verbose parsed url   pathname: '~0.8.0',
615 verbose parsed url   path: '~0.8.0',
615 verbose parsed url   href: '~0.8.0' }
616 verbose addNamed [ 'nodeunit', '~0.8.0' ]
617 verbose addNamed [ null, '>=0.8.0-0 <0.9.0-0' ]
618 silly lockFile d220e1f3-nodeunit-0-8-0 nodeunit@~0.8.0
619 verbose lock nodeunit@~0.8.0 /home/ahmad/.npm/d220e1f3-nodeunit-0-8-0.lock
620 silly addNameRange { name: 'nodeunit', range: '>=0.8.0-0 <0.9.0-0', hasData: false }
621 verbose url raw nodeunit
622 verbose url resolving [ 'https://registry.npmjs.org/', './nodeunit' ]
623 verbose url resolved https://registry.npmjs.org/nodeunit
624 info trying registry request attempt 1 at 23:47:22
625 http GET https://registry.npmjs.org/nodeunit
626 silly lockFile b896b88c-ode-modules-grunt-contrib-jshint tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint
627 silly lockFile b896b88c-ode-modules-grunt-contrib-jshint tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint
628 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
629 silly lockFile 722405a8-contrib-jshint-0-6-5-package-tgz tar:///home/ahmad/.npm/grunt-contrib-jshint/0.6.5/package.tgz
630 info preinstall grunt-contrib-jshint@0.6.5
631 verbose readDependencies using package.json deps
632 verbose readDependencies using package.json deps
633 verbose cache add [ 'jshint@~2.1.10', null ]
634 verbose cache add name=undefined spec="jshint@~2.1.10" args=["jshint@~2.1.10",null]
635 verbose parsed url { protocol: null,
635 verbose parsed url   slashes: null,
635 verbose parsed url   auth: null,
635 verbose parsed url   host: null,
635 verbose parsed url   port: null,
635 verbose parsed url   hostname: null,
635 verbose parsed url   hash: null,
635 verbose parsed url   search: null,
635 verbose parsed url   query: null,
635 verbose parsed url   pathname: 'jshint@~2.1.10',
635 verbose parsed url   path: 'jshint@~2.1.10',
635 verbose parsed url   href: 'jshint@~2.1.10' }
636 verbose cache add name="jshint" spec="~2.1.10" args=["jshint","~2.1.10"]
637 verbose parsed url { protocol: null,
637 verbose parsed url   slashes: null,
637 verbose parsed url   auth: null,
637 verbose parsed url   host: null,
637 verbose parsed url   port: null,
637 verbose parsed url   hostname: null,
637 verbose parsed url   hash: null,
637 verbose parsed url   search: null,
637 verbose parsed url   query: null,
637 verbose parsed url   pathname: '~2.1.10',
637 verbose parsed url   path: '~2.1.10',
637 verbose parsed url   href: '~2.1.10' }
638 verbose addNamed [ 'jshint', '~2.1.10' ]
639 verbose addNamed [ null, '>=2.1.10-0 <2.2.0-0' ]
640 silly lockFile 7516fea4-jshint-2-1-10 jshint@~2.1.10
641 verbose lock jshint@~2.1.10 /home/ahmad/.npm/7516fea4-jshint-2-1-10.lock
642 silly addNameRange { name: 'jshint', range: '>=2.1.10-0 <2.2.0-0', hasData: false }
643 verbose url raw jshint
644 verbose url resolving [ 'https://registry.npmjs.org/', './jshint' ]
645 verbose url resolved https://registry.npmjs.org/jshint
646 info trying registry request attempt 1 at 23:47:22
647 http GET https://registry.npmjs.org/jshint
648 silly lockFile 50576e43-ode-modules-grunt-contrib-uglify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify
649 silly lockFile 50576e43-ode-modules-grunt-contrib-uglify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify
650 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
651 silly lockFile e8383fd4-contrib-uglify-0-2-7-package-tgz tar:///home/ahmad/.npm/grunt-contrib-uglify/0.2.7/package.tgz
652 info preinstall grunt-contrib-uglify@0.2.7
653 verbose readDependencies using package.json deps
654 verbose readDependencies using package.json deps
655 verbose cache add [ 'uglify-js@~2.4.0', null ]
656 verbose cache add name=undefined spec="uglify-js@~2.4.0" args=["uglify-js@~2.4.0",null]
657 verbose parsed url { protocol: null,
657 verbose parsed url   slashes: null,
657 verbose parsed url   auth: null,
657 verbose parsed url   host: null,
657 verbose parsed url   port: null,
657 verbose parsed url   hostname: null,
657 verbose parsed url   hash: null,
657 verbose parsed url   search: null,
657 verbose parsed url   query: null,
657 verbose parsed url   pathname: 'uglify-js@~2.4.0',
657 verbose parsed url   path: 'uglify-js@~2.4.0',
657 verbose parsed url   href: 'uglify-js@~2.4.0' }
658 verbose cache add name="uglify-js" spec="~2.4.0" args=["uglify-js","~2.4.0"]
659 verbose parsed url { protocol: null,
659 verbose parsed url   slashes: null,
659 verbose parsed url   auth: null,
659 verbose parsed url   host: null,
659 verbose parsed url   port: null,
659 verbose parsed url   hostname: null,
659 verbose parsed url   hash: null,
659 verbose parsed url   search: null,
659 verbose parsed url   query: null,
659 verbose parsed url   pathname: '~2.4.0',
659 verbose parsed url   path: '~2.4.0',
659 verbose parsed url   href: '~2.4.0' }
660 verbose addNamed [ 'uglify-js', '~2.4.0' ]
661 verbose addNamed [ null, '>=2.4.0-0 <2.5.0-0' ]
662 silly lockFile 1d881e0f-uglify-js-2-4-0 uglify-js@~2.4.0
663 verbose lock uglify-js@~2.4.0 /home/ahmad/.npm/1d881e0f-uglify-js-2-4-0.lock
664 verbose cache add [ 'grunt-lib-contrib@~0.6.1', null ]
665 verbose cache add name=undefined spec="grunt-lib-contrib@~0.6.1" args=["grunt-lib-contrib@~0.6.1",null]
666 verbose parsed url { protocol: null,
666 verbose parsed url   slashes: null,
666 verbose parsed url   auth: null,
666 verbose parsed url   host: null,
666 verbose parsed url   port: null,
666 verbose parsed url   hostname: null,
666 verbose parsed url   hash: null,
666 verbose parsed url   search: null,
666 verbose parsed url   query: null,
666 verbose parsed url   pathname: 'grunt-lib-contrib@~0.6.1',
666 verbose parsed url   path: 'grunt-lib-contrib@~0.6.1',
666 verbose parsed url   href: 'grunt-lib-contrib@~0.6.1' }
667 verbose cache add name="grunt-lib-contrib" spec="~0.6.1" args=["grunt-lib-contrib","~0.6.1"]
668 verbose parsed url { protocol: null,
668 verbose parsed url   slashes: null,
668 verbose parsed url   auth: null,
668 verbose parsed url   host: null,
668 verbose parsed url   port: null,
668 verbose parsed url   hostname: null,
668 verbose parsed url   hash: null,
668 verbose parsed url   search: null,
668 verbose parsed url   query: null,
668 verbose parsed url   pathname: '~0.6.1',
668 verbose parsed url   path: '~0.6.1',
668 verbose parsed url   href: '~0.6.1' }
669 verbose addNamed [ 'grunt-lib-contrib', '~0.6.1' ]
670 verbose addNamed [ null, '>=0.6.1-0 <0.7.0-0' ]
671 silly lockFile a97902f4-grunt-lib-contrib-0-6-1 grunt-lib-contrib@~0.6.1
672 verbose lock grunt-lib-contrib@~0.6.1 /home/ahmad/.npm/a97902f4-grunt-lib-contrib-0-6-1.lock
673 silly addNameRange { name: 'uglify-js',
673 silly addNameRange   range: '>=2.4.0-0 <2.5.0-0',
673 silly addNameRange   hasData: false }
674 silly addNameRange { name: 'grunt-lib-contrib',
674 silly addNameRange   range: '>=0.6.1-0 <0.7.0-0',
674 silly addNameRange   hasData: false }
675 verbose url raw uglify-js
676 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
677 verbose url resolved https://registry.npmjs.org/uglify-js
678 info trying registry request attempt 1 at 23:47:22
679 http GET https://registry.npmjs.org/uglify-js
680 verbose url raw grunt-lib-contrib
681 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-lib-contrib' ]
682 verbose url resolved https://registry.npmjs.org/grunt-lib-contrib
683 info trying registry request attempt 1 at 23:47:22
684 http GET https://registry.npmjs.org/grunt-lib-contrib
685 silly lockFile 8c280c2d-s-marker-http-node-modules-grunt tar:///var/www/sites/marker/http/node_modules/grunt
686 silly lockFile 8c280c2d-s-marker-http-node-modules-grunt tar:///var/www/sites/marker/http/node_modules/grunt
687 silly lockFile da16b501-hmad-npm-grunt-0-4-1-package-tgz tar:///home/ahmad/.npm/grunt/0.4.1/package.tgz
688 silly lockFile da16b501-hmad-npm-grunt-0-4-1-package-tgz tar:///home/ahmad/.npm/grunt/0.4.1/package.tgz
689 info preinstall grunt@0.4.1
690 verbose readDependencies using package.json deps
691 verbose readDependencies using package.json deps
692 verbose cache add [ 'async@~0.1.22', null ]
693 verbose cache add name=undefined spec="async@~0.1.22" args=["async@~0.1.22",null]
694 verbose parsed url { protocol: null,
694 verbose parsed url   slashes: null,
694 verbose parsed url   auth: null,
694 verbose parsed url   host: null,
694 verbose parsed url   port: null,
694 verbose parsed url   hostname: null,
694 verbose parsed url   hash: null,
694 verbose parsed url   search: null,
694 verbose parsed url   query: null,
694 verbose parsed url   pathname: 'async@~0.1.22',
694 verbose parsed url   path: 'async@~0.1.22',
694 verbose parsed url   href: 'async@~0.1.22' }
695 verbose cache add name="async" spec="~0.1.22" args=["async","~0.1.22"]
696 verbose parsed url { protocol: null,
696 verbose parsed url   slashes: null,
696 verbose parsed url   auth: null,
696 verbose parsed url   host: null,
696 verbose parsed url   port: null,
696 verbose parsed url   hostname: null,
696 verbose parsed url   hash: null,
696 verbose parsed url   search: null,
696 verbose parsed url   query: null,
696 verbose parsed url   pathname: '~0.1.22',
696 verbose parsed url   path: '~0.1.22',
696 verbose parsed url   href: '~0.1.22' }
697 verbose addNamed [ 'async', '~0.1.22' ]
698 verbose addNamed [ null, '>=0.1.22-0 <0.2.0-0' ]
699 silly lockFile 3af71045-async-0-1-22 async@~0.1.22
700 verbose lock async@~0.1.22 /home/ahmad/.npm/3af71045-async-0-1-22.lock
701 verbose cache add [ 'coffee-script@~1.3.3', null ]
702 verbose cache add name=undefined spec="coffee-script@~1.3.3" args=["coffee-script@~1.3.3",null]
703 verbose parsed url { protocol: null,
703 verbose parsed url   slashes: null,
703 verbose parsed url   auth: null,
703 verbose parsed url   host: null,
703 verbose parsed url   port: null,
703 verbose parsed url   hostname: null,
703 verbose parsed url   hash: null,
703 verbose parsed url   search: null,
703 verbose parsed url   query: null,
703 verbose parsed url   pathname: 'coffee-script@~1.3.3',
703 verbose parsed url   path: 'coffee-script@~1.3.3',
703 verbose parsed url   href: 'coffee-script@~1.3.3' }
704 verbose cache add name="coffee-script" spec="~1.3.3" args=["coffee-script","~1.3.3"]
705 verbose parsed url { protocol: null,
705 verbose parsed url   slashes: null,
705 verbose parsed url   auth: null,
705 verbose parsed url   host: null,
705 verbose parsed url   port: null,
705 verbose parsed url   hostname: null,
705 verbose parsed url   hash: null,
705 verbose parsed url   search: null,
705 verbose parsed url   query: null,
705 verbose parsed url   pathname: '~1.3.3',
705 verbose parsed url   path: '~1.3.3',
705 verbose parsed url   href: '~1.3.3' }
706 verbose addNamed [ 'coffee-script', '~1.3.3' ]
707 verbose addNamed [ null, '>=1.3.3-0 <1.4.0-0' ]
708 silly lockFile f72bb580-coffee-script-1-3-3 coffee-script@~1.3.3
709 verbose lock coffee-script@~1.3.3 /home/ahmad/.npm/f72bb580-coffee-script-1-3-3.lock
710 verbose cache add [ 'colors@~0.6.0-1', null ]
711 verbose cache add name=undefined spec="colors@~0.6.0-1" args=["colors@~0.6.0-1",null]
712 verbose parsed url { protocol: null,
712 verbose parsed url   slashes: null,
712 verbose parsed url   auth: null,
712 verbose parsed url   host: null,
712 verbose parsed url   port: null,
712 verbose parsed url   hostname: null,
712 verbose parsed url   hash: null,
712 verbose parsed url   search: null,
712 verbose parsed url   query: null,
712 verbose parsed url   pathname: 'colors@~0.6.0-1',
712 verbose parsed url   path: 'colors@~0.6.0-1',
712 verbose parsed url   href: 'colors@~0.6.0-1' }
713 verbose cache add name="colors" spec="~0.6.0-1" args=["colors","~0.6.0-1"]
714 verbose parsed url { protocol: null,
714 verbose parsed url   slashes: null,
714 verbose parsed url   auth: null,
714 verbose parsed url   host: null,
714 verbose parsed url   port: null,
714 verbose parsed url   hostname: null,
714 verbose parsed url   hash: null,
714 verbose parsed url   search: null,
714 verbose parsed url   query: null,
714 verbose parsed url   pathname: '~0.6.0-1',
714 verbose parsed url   path: '~0.6.0-1',
714 verbose parsed url   href: '~0.6.0-1' }
715 verbose addNamed [ 'colors', '~0.6.0-1' ]
716 verbose addNamed [ null, '>=0.6.0-1 <0.7.0-0' ]
717 silly lockFile f29bff6b-colors-0-6-0-1 colors@~0.6.0-1
718 verbose lock colors@~0.6.0-1 /home/ahmad/.npm/f29bff6b-colors-0-6-0-1.lock
719 verbose cache add [ 'dateformat@1.0.2-1.2.3', null ]
720 verbose cache add name=undefined spec="dateformat@1.0.2-1.2.3" args=["dateformat@1.0.2-1.2.3",null]
721 verbose parsed url { protocol: null,
721 verbose parsed url   slashes: null,
721 verbose parsed url   auth: null,
721 verbose parsed url   host: null,
721 verbose parsed url   port: null,
721 verbose parsed url   hostname: null,
721 verbose parsed url   hash: null,
721 verbose parsed url   search: null,
721 verbose parsed url   query: null,
721 verbose parsed url   pathname: 'dateformat@1.0.2-1.2.3',
721 verbose parsed url   path: 'dateformat@1.0.2-1.2.3',
721 verbose parsed url   href: 'dateformat@1.0.2-1.2.3' }
722 verbose cache add name="dateformat" spec="1.0.2-1.2.3" args=["dateformat","1.0.2-1.2.3"]
723 verbose parsed url { protocol: null,
723 verbose parsed url   slashes: null,
723 verbose parsed url   auth: null,
723 verbose parsed url   host: null,
723 verbose parsed url   port: null,
723 verbose parsed url   hostname: null,
723 verbose parsed url   hash: null,
723 verbose parsed url   search: null,
723 verbose parsed url   query: null,
723 verbose parsed url   pathname: '1.0.2-1.2.3',
723 verbose parsed url   path: '1.0.2-1.2.3',
723 verbose parsed url   href: '1.0.2-1.2.3' }
724 verbose addNamed [ 'dateformat', '1.0.2-1.2.3' ]
725 verbose addNamed [ '1.0.2-1.2.3', '1.0.2-1.2.3' ]
726 silly lockFile 644d6e27-dateformat-1-0-2-1-2-3 dateformat@1.0.2-1.2.3
727 verbose lock dateformat@1.0.2-1.2.3 /home/ahmad/.npm/644d6e27-dateformat-1-0-2-1-2-3.lock
728 verbose cache add [ 'eventemitter2@~0.4.9', null ]
729 verbose cache add name=undefined spec="eventemitter2@~0.4.9" args=["eventemitter2@~0.4.9",null]
730 verbose parsed url { protocol: null,
730 verbose parsed url   slashes: null,
730 verbose parsed url   auth: null,
730 verbose parsed url   host: null,
730 verbose parsed url   port: null,
730 verbose parsed url   hostname: null,
730 verbose parsed url   hash: null,
730 verbose parsed url   search: null,
730 verbose parsed url   query: null,
730 verbose parsed url   pathname: 'eventemitter2@~0.4.9',
730 verbose parsed url   path: 'eventemitter2@~0.4.9',
730 verbose parsed url   href: 'eventemitter2@~0.4.9' }
731 verbose cache add name="eventemitter2" spec="~0.4.9" args=["eventemitter2","~0.4.9"]
732 verbose parsed url { protocol: null,
732 verbose parsed url   slashes: null,
732 verbose parsed url   auth: null,
732 verbose parsed url   host: null,
732 verbose parsed url   port: null,
732 verbose parsed url   hostname: null,
732 verbose parsed url   hash: null,
732 verbose parsed url   search: null,
732 verbose parsed url   query: null,
732 verbose parsed url   pathname: '~0.4.9',
732 verbose parsed url   path: '~0.4.9',
732 verbose parsed url   href: '~0.4.9' }
733 verbose addNamed [ 'eventemitter2', '~0.4.9' ]
734 verbose addNamed [ null, '>=0.4.9-0 <0.5.0-0' ]
735 silly lockFile 70573e74-eventemitter2-0-4-9 eventemitter2@~0.4.9
736 verbose lock eventemitter2@~0.4.9 /home/ahmad/.npm/70573e74-eventemitter2-0-4-9.lock
737 verbose cache add [ 'findup-sync@~0.1.0', null ]
738 verbose cache add name=undefined spec="findup-sync@~0.1.0" args=["findup-sync@~0.1.0",null]
739 verbose parsed url { protocol: null,
739 verbose parsed url   slashes: null,
739 verbose parsed url   auth: null,
739 verbose parsed url   host: null,
739 verbose parsed url   port: null,
739 verbose parsed url   hostname: null,
739 verbose parsed url   hash: null,
739 verbose parsed url   search: null,
739 verbose parsed url   query: null,
739 verbose parsed url   pathname: 'findup-sync@~0.1.0',
739 verbose parsed url   path: 'findup-sync@~0.1.0',
739 verbose parsed url   href: 'findup-sync@~0.1.0' }
740 verbose cache add name="findup-sync" spec="~0.1.0" args=["findup-sync","~0.1.0"]
741 verbose parsed url { protocol: null,
741 verbose parsed url   slashes: null,
741 verbose parsed url   auth: null,
741 verbose parsed url   host: null,
741 verbose parsed url   port: null,
741 verbose parsed url   hostname: null,
741 verbose parsed url   hash: null,
741 verbose parsed url   search: null,
741 verbose parsed url   query: null,
741 verbose parsed url   pathname: '~0.1.0',
741 verbose parsed url   path: '~0.1.0',
741 verbose parsed url   href: '~0.1.0' }
742 verbose addNamed [ 'findup-sync', '~0.1.0' ]
743 verbose addNamed [ null, '>=0.1.0-0 <0.2.0-0' ]
744 silly lockFile 625605b9-findup-sync-0-1-0 findup-sync@~0.1.0
745 verbose lock findup-sync@~0.1.0 /home/ahmad/.npm/625605b9-findup-sync-0-1-0.lock
746 silly addNameRange { name: 'async', range: '>=0.1.22-0 <0.2.0-0', hasData: false }
747 verbose cache add [ 'glob@~3.1.21', null ]
748 verbose cache add name=undefined spec="glob@~3.1.21" args=["glob@~3.1.21",null]
749 verbose parsed url { protocol: null,
749 verbose parsed url   slashes: null,
749 verbose parsed url   auth: null,
749 verbose parsed url   host: null,
749 verbose parsed url   port: null,
749 verbose parsed url   hostname: null,
749 verbose parsed url   hash: null,
749 verbose parsed url   search: null,
749 verbose parsed url   query: null,
749 verbose parsed url   pathname: 'glob@~3.1.21',
749 verbose parsed url   path: 'glob@~3.1.21',
749 verbose parsed url   href: 'glob@~3.1.21' }
750 verbose cache add name="glob" spec="~3.1.21" args=["glob","~3.1.21"]
751 verbose parsed url { protocol: null,
751 verbose parsed url   slashes: null,
751 verbose parsed url   auth: null,
751 verbose parsed url   host: null,
751 verbose parsed url   port: null,
751 verbose parsed url   hostname: null,
751 verbose parsed url   hash: null,
751 verbose parsed url   search: null,
751 verbose parsed url   query: null,
751 verbose parsed url   pathname: '~3.1.21',
751 verbose parsed url   path: '~3.1.21',
751 verbose parsed url   href: '~3.1.21' }
752 verbose addNamed [ 'glob', '~3.1.21' ]
753 verbose addNamed [ null, '>=3.1.21-0 <3.2.0-0' ]
754 silly lockFile b5074ddc-glob-3-1-21 glob@~3.1.21
755 verbose lock glob@~3.1.21 /home/ahmad/.npm/b5074ddc-glob-3-1-21.lock
756 verbose cache add [ 'hooker@~0.2.3', null ]
757 verbose cache add name=undefined spec="hooker@~0.2.3" args=["hooker@~0.2.3",null]
758 verbose parsed url { protocol: null,
758 verbose parsed url   slashes: null,
758 verbose parsed url   auth: null,
758 verbose parsed url   host: null,
758 verbose parsed url   port: null,
758 verbose parsed url   hostname: null,
758 verbose parsed url   hash: null,
758 verbose parsed url   search: null,
758 verbose parsed url   query: null,
758 verbose parsed url   pathname: 'hooker@~0.2.3',
758 verbose parsed url   path: 'hooker@~0.2.3',
758 verbose parsed url   href: 'hooker@~0.2.3' }
759 verbose cache add name="hooker" spec="~0.2.3" args=["hooker","~0.2.3"]
760 verbose parsed url { protocol: null,
760 verbose parsed url   slashes: null,
760 verbose parsed url   auth: null,
760 verbose parsed url   host: null,
760 verbose parsed url   port: null,
760 verbose parsed url   hostname: null,
760 verbose parsed url   hash: null,
760 verbose parsed url   search: null,
760 verbose parsed url   query: null,
760 verbose parsed url   pathname: '~0.2.3',
760 verbose parsed url   path: '~0.2.3',
760 verbose parsed url   href: '~0.2.3' }
761 verbose addNamed [ 'hooker', '~0.2.3' ]
762 verbose addNamed [ null, '>=0.2.3-0 <0.3.0-0' ]
763 silly lockFile 2bcd1457-hooker-0-2-3 hooker@~0.2.3
764 verbose lock hooker@~0.2.3 /home/ahmad/.npm/2bcd1457-hooker-0-2-3.lock
765 verbose cache add [ 'iconv-lite@~0.2.5', null ]
766 verbose cache add name=undefined spec="iconv-lite@~0.2.5" args=["iconv-lite@~0.2.5",null]
767 verbose parsed url { protocol: null,
767 verbose parsed url   slashes: null,
767 verbose parsed url   auth: null,
767 verbose parsed url   host: null,
767 verbose parsed url   port: null,
767 verbose parsed url   hostname: null,
767 verbose parsed url   hash: null,
767 verbose parsed url   search: null,
767 verbose parsed url   query: null,
767 verbose parsed url   pathname: 'iconv-lite@~0.2.5',
767 verbose parsed url   path: 'iconv-lite@~0.2.5',
767 verbose parsed url   href: 'iconv-lite@~0.2.5' }
768 verbose cache add name="iconv-lite" spec="~0.2.5" args=["iconv-lite","~0.2.5"]
769 verbose parsed url { protocol: null,
769 verbose parsed url   slashes: null,
769 verbose parsed url   auth: null,
769 verbose parsed url   host: null,
769 verbose parsed url   port: null,
769 verbose parsed url   hostname: null,
769 verbose parsed url   hash: null,
769 verbose parsed url   search: null,
769 verbose parsed url   query: null,
769 verbose parsed url   pathname: '~0.2.5',
769 verbose parsed url   path: '~0.2.5',
769 verbose parsed url   href: '~0.2.5' }
770 verbose addNamed [ 'iconv-lite', '~0.2.5' ]
771 verbose addNamed [ null, '>=0.2.5-0 <0.3.0-0' ]
772 silly lockFile ca9efaa1-iconv-lite-0-2-5 iconv-lite@~0.2.5
773 verbose lock iconv-lite@~0.2.5 /home/ahmad/.npm/ca9efaa1-iconv-lite-0-2-5.lock
774 verbose cache add [ 'minimatch@~0.2.6', null ]
775 verbose cache add name=undefined spec="minimatch@~0.2.6" args=["minimatch@~0.2.6",null]
776 verbose parsed url { protocol: null,
776 verbose parsed url   slashes: null,
776 verbose parsed url   auth: null,
776 verbose parsed url   host: null,
776 verbose parsed url   port: null,
776 verbose parsed url   hostname: null,
776 verbose parsed url   hash: null,
776 verbose parsed url   search: null,
776 verbose parsed url   query: null,
776 verbose parsed url   pathname: 'minimatch@~0.2.6',
776 verbose parsed url   path: 'minimatch@~0.2.6',
776 verbose parsed url   href: 'minimatch@~0.2.6' }
777 verbose cache add name="minimatch" spec="~0.2.6" args=["minimatch","~0.2.6"]
778 verbose parsed url { protocol: null,
778 verbose parsed url   slashes: null,
778 verbose parsed url   auth: null,
778 verbose parsed url   host: null,
778 verbose parsed url   port: null,
778 verbose parsed url   hostname: null,
778 verbose parsed url   hash: null,
778 verbose parsed url   search: null,
778 verbose parsed url   query: null,
778 verbose parsed url   pathname: '~0.2.6',
778 verbose parsed url   path: '~0.2.6',
778 verbose parsed url   href: '~0.2.6' }
779 verbose addNamed [ 'minimatch', '~0.2.6' ]
780 verbose addNamed [ null, '>=0.2.6-0 <0.3.0-0' ]
781 silly lockFile 5922ee11-minimatch-0-2-6 minimatch@~0.2.6
782 verbose lock minimatch@~0.2.6 /home/ahmad/.npm/5922ee11-minimatch-0-2-6.lock
783 verbose cache add [ 'nopt@~1.0.10', null ]
784 verbose cache add name=undefined spec="nopt@~1.0.10" args=["nopt@~1.0.10",null]
785 verbose parsed url { protocol: null,
785 verbose parsed url   slashes: null,
785 verbose parsed url   auth: null,
785 verbose parsed url   host: null,
785 verbose parsed url   port: null,
785 verbose parsed url   hostname: null,
785 verbose parsed url   hash: null,
785 verbose parsed url   search: null,
785 verbose parsed url   query: null,
785 verbose parsed url   pathname: 'nopt@~1.0.10',
785 verbose parsed url   path: 'nopt@~1.0.10',
785 verbose parsed url   href: 'nopt@~1.0.10' }
786 verbose cache add name="nopt" spec="~1.0.10" args=["nopt","~1.0.10"]
787 verbose parsed url { protocol: null,
787 verbose parsed url   slashes: null,
787 verbose parsed url   auth: null,
787 verbose parsed url   host: null,
787 verbose parsed url   port: null,
787 verbose parsed url   hostname: null,
787 verbose parsed url   hash: null,
787 verbose parsed url   search: null,
787 verbose parsed url   query: null,
787 verbose parsed url   pathname: '~1.0.10',
787 verbose parsed url   path: '~1.0.10',
787 verbose parsed url   href: '~1.0.10' }
788 verbose addNamed [ 'nopt', '~1.0.10' ]
789 verbose addNamed [ null, '>=1.0.10-0 <1.1.0-0' ]
790 silly lockFile 79f78dba-nopt-1-0-10 nopt@~1.0.10
791 verbose lock nopt@~1.0.10 /home/ahmad/.npm/79f78dba-nopt-1-0-10.lock
792 verbose cache add [ 'rimraf@~2.0.2', null ]
793 verbose cache add name=undefined spec="rimraf@~2.0.2" args=["rimraf@~2.0.2",null]
794 verbose parsed url { protocol: null,
794 verbose parsed url   slashes: null,
794 verbose parsed url   auth: null,
794 verbose parsed url   host: null,
794 verbose parsed url   port: null,
794 verbose parsed url   hostname: null,
794 verbose parsed url   hash: null,
794 verbose parsed url   search: null,
794 verbose parsed url   query: null,
794 verbose parsed url   pathname: 'rimraf@~2.0.2',
794 verbose parsed url   path: 'rimraf@~2.0.2',
794 verbose parsed url   href: 'rimraf@~2.0.2' }
795 verbose cache add name="rimraf" spec="~2.0.2" args=["rimraf","~2.0.2"]
796 verbose parsed url { protocol: null,
796 verbose parsed url   slashes: null,
796 verbose parsed url   auth: null,
796 verbose parsed url   host: null,
796 verbose parsed url   port: null,
796 verbose parsed url   hostname: null,
796 verbose parsed url   hash: null,
796 verbose parsed url   search: null,
796 verbose parsed url   query: null,
796 verbose parsed url   pathname: '~2.0.2',
796 verbose parsed url   path: '~2.0.2',
796 verbose parsed url   href: '~2.0.2' }
797 verbose addNamed [ 'rimraf', '~2.0.2' ]
798 verbose addNamed [ null, '>=2.0.2-0 <2.1.0-0' ]
799 silly lockFile 723423b4-rimraf-2-0-2 rimraf@~2.0.2
800 verbose lock rimraf@~2.0.2 /home/ahmad/.npm/723423b4-rimraf-2-0-2.lock
801 verbose cache add [ 'lodash@~0.9.0', null ]
802 verbose cache add name=undefined spec="lodash@~0.9.0" args=["lodash@~0.9.0",null]
803 verbose parsed url { protocol: null,
803 verbose parsed url   slashes: null,
803 verbose parsed url   auth: null,
803 verbose parsed url   host: null,
803 verbose parsed url   port: null,
803 verbose parsed url   hostname: null,
803 verbose parsed url   hash: null,
803 verbose parsed url   search: null,
803 verbose parsed url   query: null,
803 verbose parsed url   pathname: 'lodash@~0.9.0',
803 verbose parsed url   path: 'lodash@~0.9.0',
803 verbose parsed url   href: 'lodash@~0.9.0' }
804 verbose cache add name="lodash" spec="~0.9.0" args=["lodash","~0.9.0"]
805 verbose parsed url { protocol: null,
805 verbose parsed url   slashes: null,
805 verbose parsed url   auth: null,
805 verbose parsed url   host: null,
805 verbose parsed url   port: null,
805 verbose parsed url   hostname: null,
805 verbose parsed url   hash: null,
805 verbose parsed url   search: null,
805 verbose parsed url   query: null,
805 verbose parsed url   pathname: '~0.9.0',
805 verbose parsed url   path: '~0.9.0',
805 verbose parsed url   href: '~0.9.0' }
806 verbose addNamed [ 'lodash', '~0.9.0' ]
807 verbose addNamed [ null, '>=0.9.0-0 <0.10.0-0' ]
808 silly lockFile 429879b8-lodash-0-9-0 lodash@~0.9.0
809 verbose lock lodash@~0.9.0 /home/ahmad/.npm/429879b8-lodash-0-9-0.lock
810 silly addNameRange { name: 'coffee-script',
810 silly addNameRange   range: '>=1.3.3-0 <1.4.0-0',
810 silly addNameRange   hasData: false }
811 silly addNameRange { name: 'colors', range: '>=0.6.0-1 <0.7.0-0', hasData: false }
812 silly addNameRange { name: 'eventemitter2',
812 silly addNameRange   range: '>=0.4.9-0 <0.5.0-0',
812 silly addNameRange   hasData: false }
813 verbose cache add [ 'underscore.string@~2.2.0rc', null ]
814 verbose cache add name=undefined spec="underscore.string@~2.2.0rc" args=["underscore.string@~2.2.0rc",null]
815 verbose parsed url { protocol: null,
815 verbose parsed url   slashes: null,
815 verbose parsed url   auth: null,
815 verbose parsed url   host: null,
815 verbose parsed url   port: null,
815 verbose parsed url   hostname: null,
815 verbose parsed url   hash: null,
815 verbose parsed url   search: null,
815 verbose parsed url   query: null,
815 verbose parsed url   pathname: 'underscore.string@~2.2.0rc',
815 verbose parsed url   path: 'underscore.string@~2.2.0rc',
815 verbose parsed url   href: 'underscore.string@~2.2.0rc' }
816 verbose cache add name="underscore.string" spec="~2.2.0rc" args=["underscore.string","~2.2.0rc"]
817 verbose parsed url { protocol: null,
817 verbose parsed url   slashes: null,
817 verbose parsed url   auth: null,
817 verbose parsed url   host: null,
817 verbose parsed url   port: null,
817 verbose parsed url   hostname: null,
817 verbose parsed url   hash: null,
817 verbose parsed url   search: null,
817 verbose parsed url   query: null,
817 verbose parsed url   pathname: '~2.2.0rc',
817 verbose parsed url   path: '~2.2.0rc',
817 verbose parsed url   href: '~2.2.0rc' }
818 verbose addNamed [ 'underscore.string', '~2.2.0rc' ]
819 verbose addNamed [ null, null ]
820 silly lockFile d5a5a3c6-underscore-string-2-2-0rc underscore.string@~2.2.0rc
821 verbose lock underscore.string@~2.2.0rc /home/ahmad/.npm/d5a5a3c6-underscore-string-2-2-0rc.lock
822 verbose cache add [ 'which@~1.0.5', null ]
823 verbose cache add name=undefined spec="which@~1.0.5" args=["which@~1.0.5",null]
824 verbose parsed url { protocol: null,
824 verbose parsed url   slashes: null,
824 verbose parsed url   auth: null,
824 verbose parsed url   host: null,
824 verbose parsed url   port: null,
824 verbose parsed url   hostname: null,
824 verbose parsed url   hash: null,
824 verbose parsed url   search: null,
824 verbose parsed url   query: null,
824 verbose parsed url   pathname: 'which@~1.0.5',
824 verbose parsed url   path: 'which@~1.0.5',
824 verbose parsed url   href: 'which@~1.0.5' }
825 verbose cache add name="which" spec="~1.0.5" args=["which","~1.0.5"]
826 verbose parsed url { protocol: null,
826 verbose parsed url   slashes: null,
826 verbose parsed url   auth: null,
826 verbose parsed url   host: null,
826 verbose parsed url   port: null,
826 verbose parsed url   hostname: null,
826 verbose parsed url   hash: null,
826 verbose parsed url   search: null,
826 verbose parsed url   query: null,
826 verbose parsed url   pathname: '~1.0.5',
826 verbose parsed url   path: '~1.0.5',
826 verbose parsed url   href: '~1.0.5' }
827 verbose addNamed [ 'which', '~1.0.5' ]
828 verbose addNamed [ null, '>=1.0.5-0 <1.1.0-0' ]
829 silly lockFile d158d65e-which-1-0-5 which@~1.0.5
830 verbose lock which@~1.0.5 /home/ahmad/.npm/d158d65e-which-1-0-5.lock
831 verbose cache add [ 'js-yaml@~2.0.2', null ]
832 verbose cache add name=undefined spec="js-yaml@~2.0.2" args=["js-yaml@~2.0.2",null]
833 verbose parsed url { protocol: null,
833 verbose parsed url   slashes: null,
833 verbose parsed url   auth: null,
833 verbose parsed url   host: null,
833 verbose parsed url   port: null,
833 verbose parsed url   hostname: null,
833 verbose parsed url   hash: null,
833 verbose parsed url   search: null,
833 verbose parsed url   query: null,
833 verbose parsed url   pathname: 'js-yaml@~2.0.2',
833 verbose parsed url   path: 'js-yaml@~2.0.2',
833 verbose parsed url   href: 'js-yaml@~2.0.2' }
834 verbose cache add name="js-yaml" spec="~2.0.2" args=["js-yaml","~2.0.2"]
835 verbose parsed url { protocol: null,
835 verbose parsed url   slashes: null,
835 verbose parsed url   auth: null,
835 verbose parsed url   host: null,
835 verbose parsed url   port: null,
835 verbose parsed url   hostname: null,
835 verbose parsed url   hash: null,
835 verbose parsed url   search: null,
835 verbose parsed url   query: null,
835 verbose parsed url   pathname: '~2.0.2',
835 verbose parsed url   path: '~2.0.2',
835 verbose parsed url   href: '~2.0.2' }
836 verbose addNamed [ 'js-yaml', '~2.0.2' ]
837 verbose addNamed [ null, '>=2.0.2-0 <2.1.0-0' ]
838 silly lockFile 0dc3e23f-js-yaml-2-0-2 js-yaml@~2.0.2
839 verbose lock js-yaml@~2.0.2 /home/ahmad/.npm/0dc3e23f-js-yaml-2-0-2.lock
840 silly addNameRange { name: 'findup-sync',
840 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
840 silly addNameRange   hasData: false }
841 silly addNameRange { name: 'glob', range: '>=3.1.21-0 <3.2.0-0', hasData: false }
842 silly addNameRange { name: 'hooker', range: '>=0.2.3-0 <0.3.0-0', hasData: false }
843 silly addNameRange { name: 'iconv-lite',
843 silly addNameRange   range: '>=0.2.5-0 <0.3.0-0',
843 silly addNameRange   hasData: false }
844 silly addNameRange { name: 'minimatch',
844 silly addNameRange   range: '>=0.2.6-0 <0.3.0-0',
844 silly addNameRange   hasData: false }
845 silly addNameRange { name: 'nopt', range: '>=1.0.10-0 <1.1.0-0', hasData: false }
846 silly addNameRange { name: 'rimraf', range: '>=2.0.2-0 <2.1.0-0', hasData: false }
847 silly addNameRange { name: 'lodash', range: '>=0.9.0-0 <0.10.0-0', hasData: false }
848 silly addNameRange { name: 'underscore.string',
848 silly addNameRange   range: '>=2.2.0-rc <2.3.0-0',
848 silly addNameRange   hasData: false }
849 silly addNameRange { name: 'which', range: '>=1.0.5-0 <1.1.0-0', hasData: false }
850 silly addNameRange { name: 'js-yaml', range: '>=2.0.2-0 <2.1.0-0', hasData: false }
851 verbose url raw async
852 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
853 verbose url resolved https://registry.npmjs.org/async
854 info trying registry request attempt 1 at 23:47:22
855 verbose etag "2B1Y1C2HQ67I3WVSBVWN4MMV1"
856 http GET https://registry.npmjs.org/async
857 verbose url raw colors
858 verbose url resolving [ 'https://registry.npmjs.org/', './colors' ]
859 verbose url resolved https://registry.npmjs.org/colors
860 info trying registry request attempt 1 at 23:47:22
861 verbose etag "B9D8N8DMNF7PPXGIBQQ74H802"
862 http GET https://registry.npmjs.org/colors
863 verbose url raw coffee-script
864 verbose url resolving [ 'https://registry.npmjs.org/', './coffee-script' ]
865 verbose url resolved https://registry.npmjs.org/coffee-script
866 info trying registry request attempt 1 at 23:47:22
867 verbose etag "D6W2D9MC80MJAFWCFZ2W18E18"
868 http GET https://registry.npmjs.org/coffee-script
869 verbose url raw dateformat/1.0.2-1.2.3
870 verbose url resolving [ 'https://registry.npmjs.org/', './dateformat/1.0.2-1.2.3' ]
871 verbose url resolved https://registry.npmjs.org/dateformat/1.0.2-1.2.3
872 info trying registry request attempt 1 at 23:47:22
873 verbose etag "53MGS4758SFBP4J0VMOWHAVRB"
874 http GET https://registry.npmjs.org/dateformat/1.0.2-1.2.3
875 verbose url raw eventemitter2
876 verbose url resolving [ 'https://registry.npmjs.org/', './eventemitter2' ]
877 verbose url resolved https://registry.npmjs.org/eventemitter2
878 info trying registry request attempt 1 at 23:47:22
879 verbose etag "3X5QUGJ2DP05IHP358LX937LG"
880 http GET https://registry.npmjs.org/eventemitter2
881 verbose url raw findup-sync
882 verbose url resolving [ 'https://registry.npmjs.org/', './findup-sync' ]
883 verbose url resolved https://registry.npmjs.org/findup-sync
884 info trying registry request attempt 1 at 23:47:22
885 verbose etag "BFALDACBDE84KEJ1UFRKML8CD"
886 http GET https://registry.npmjs.org/findup-sync
887 verbose url raw hooker
888 verbose url resolving [ 'https://registry.npmjs.org/', './hooker' ]
889 verbose url resolved https://registry.npmjs.org/hooker
890 info trying registry request attempt 1 at 23:47:22
891 verbose etag "4NS4EOCQXZ0NB6PG3PIW1TD6M"
892 http GET https://registry.npmjs.org/hooker
893 verbose url raw iconv-lite
894 verbose url resolving [ 'https://registry.npmjs.org/', './iconv-lite' ]
895 verbose url resolved https://registry.npmjs.org/iconv-lite
896 info trying registry request attempt 1 at 23:47:22
897 verbose etag "A2T3FVHI8039SNILC54LU3Y3S"
898 http GET https://registry.npmjs.org/iconv-lite
899 verbose url raw glob
900 verbose url resolving [ 'https://registry.npmjs.org/', './glob' ]
901 verbose url resolved https://registry.npmjs.org/glob
902 info trying registry request attempt 1 at 23:47:22
903 verbose etag "9F27NP1F72HEQ13T6LA8E16E8"
904 http GET https://registry.npmjs.org/glob
905 verbose url raw minimatch
906 verbose url resolving [ 'https://registry.npmjs.org/', './minimatch' ]
907 verbose url resolved https://registry.npmjs.org/minimatch
908 info trying registry request attempt 1 at 23:47:22
909 verbose etag "433GUXE31BY78MEUH5M7CIXOG"
910 http GET https://registry.npmjs.org/minimatch
911 verbose url raw nopt
912 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
913 verbose url resolved https://registry.npmjs.org/nopt
914 info trying registry request attempt 1 at 23:47:22
915 verbose etag "3XYNN1DM5K7F9CX72UU5XRP7T"
916 http GET https://registry.npmjs.org/nopt
917 verbose url raw rimraf
918 verbose url resolving [ 'https://registry.npmjs.org/', './rimraf' ]
919 verbose url resolved https://registry.npmjs.org/rimraf
920 info trying registry request attempt 1 at 23:47:22
921 verbose etag "BO8JLBC2TKAXGJCA5T3URAII3"
922 http GET https://registry.npmjs.org/rimraf
923 verbose url raw lodash
924 verbose url resolving [ 'https://registry.npmjs.org/', './lodash' ]
925 verbose url resolved https://registry.npmjs.org/lodash
926 info trying registry request attempt 1 at 23:47:22
927 verbose etag "CQTOCA6AQ5MGWX2C93TR1B54I"
928 http GET https://registry.npmjs.org/lodash
929 verbose url raw underscore.string
930 verbose url resolving [ 'https://registry.npmjs.org/', './underscore.string' ]
931 verbose url resolved https://registry.npmjs.org/underscore.string
932 info trying registry request attempt 1 at 23:47:22
933 verbose etag "82KONBUKGVFGLKPUIJ91QHEA4"
934 http GET https://registry.npmjs.org/underscore.string
935 verbose url raw which
936 verbose url resolving [ 'https://registry.npmjs.org/', './which' ]
937 verbose url resolved https://registry.npmjs.org/which
938 info trying registry request attempt 1 at 23:47:22
939 verbose etag "43PJVZ0U2IY5DUOK5LXY2JGYD"
940 http GET https://registry.npmjs.org/which
941 verbose url raw js-yaml
942 verbose url resolving [ 'https://registry.npmjs.org/', './js-yaml' ]
943 verbose url resolved https://registry.npmjs.org/js-yaml
944 info trying registry request attempt 1 at 23:47:22
945 verbose etag "6AVIVKL9QGGBSOAWI2NX1010Q"
946 http GET https://registry.npmjs.org/js-yaml
947 http 304 https://registry.npmjs.org/async
948 silly registry.get cb [ 304,
948 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
948 silly registry.get     etag: '"2B1Y1C2HQ67I3WVSBVWN4MMV1"',
948 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:28 GMT',
948 silly registry.get     'content-length': '0' } ]
949 verbose etag async from cache
950 silly addNameRange number 2 { name: 'async', range: '>=0.1.22-0 <0.2.0-0', hasData: true }
951 silly addNameRange versions [ 'async',
951 silly addNameRange   [ '0.1.0',
951 silly addNameRange     '0.1.1',
951 silly addNameRange     '0.1.2',
951 silly addNameRange     '0.1.3',
951 silly addNameRange     '0.1.4',
951 silly addNameRange     '0.1.5',
951 silly addNameRange     '0.1.6',
951 silly addNameRange     '0.1.7',
951 silly addNameRange     '0.1.8',
951 silly addNameRange     '0.1.9',
951 silly addNameRange     '0.1.10',
951 silly addNameRange     '0.1.11',
951 silly addNameRange     '0.1.12',
951 silly addNameRange     '0.1.13',
951 silly addNameRange     '0.1.14',
951 silly addNameRange     '0.1.15',
951 silly addNameRange     '0.1.16',
951 silly addNameRange     '0.1.17',
951 silly addNameRange     '0.1.18',
951 silly addNameRange     '0.1.19',
951 silly addNameRange     '0.1.20',
951 silly addNameRange     '0.1.21',
951 silly addNameRange     '0.1.22',
951 silly addNameRange     '0.2.0',
951 silly addNameRange     '0.2.1',
951 silly addNameRange     '0.2.2',
951 silly addNameRange     '0.2.3',
951 silly addNameRange     '0.2.4',
951 silly addNameRange     '0.2.5',
951 silly addNameRange     '0.2.6',
951 silly addNameRange     '0.2.7',
951 silly addNameRange     '0.2.8',
951 silly addNameRange     '0.2.9' ] ]
952 verbose addNamed [ 'async', '0.1.22' ]
953 verbose addNamed [ '0.1.22', '0.1.22' ]
954 silly lockFile 09d21715-async-0-1-22 async@0.1.22
955 verbose lock async@0.1.22 /home/ahmad/.npm/09d21715-async-0-1-22.lock
956 silly lockFile 09d21715-async-0-1-22 async@0.1.22
957 silly lockFile 09d21715-async-0-1-22 async@0.1.22
958 silly lockFile 3af71045-async-0-1-22 async@~0.1.22
959 silly lockFile 3af71045-async-0-1-22 async@~0.1.22
960 http 304 https://registry.npmjs.org/colors
961 silly registry.get cb [ 304,
961 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
961 silly registry.get     etag: '"B9D8N8DMNF7PPXGIBQQ74H802"',
961 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:29 GMT',
961 silly registry.get     'content-length': '0' } ]
962 verbose etag colors from cache
963 silly addNameRange number 2 { name: 'colors', range: '>=0.6.0-1 <0.7.0-0', hasData: true }
964 silly addNameRange versions [ 'colors',
964 silly addNameRange   [ '0.3.0', '0.5.0', '0.5.1', '0.6.0', '0.6.0-1', '0.6.1', '0.6.2' ] ]
965 verbose addNamed [ 'colors', '0.6.2' ]
966 verbose addNamed [ '0.6.2', '0.6.2' ]
967 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
968 verbose lock colors@0.6.2 /home/ahmad/.npm/1ce149d5-colors-0-6-2.lock
969 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
970 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
971 silly lockFile f29bff6b-colors-0-6-0-1 colors@~0.6.0-1
972 silly lockFile f29bff6b-colors-0-6-0-1 colors@~0.6.0-1
973 http 200 https://registry.npmjs.org/grunt-lib-contrib
974 silly registry.get cb [ 200,
974 silly registry.get   { vary: 'Accept',
974 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
974 silly registry.get     etag: '"9VJL87TGGH9MXQIAY6JIZL7Z4"',
974 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:28 GMT',
974 silly registry.get     'content-type': 'application/json',
974 silly registry.get     'content-length': '31639' } ]
975 silly addNameRange number 2 { name: 'grunt-lib-contrib',
975 silly addNameRange   range: '>=0.6.1-0 <0.7.0-0',
975 silly addNameRange   hasData: true }
976 silly addNameRange versions [ 'grunt-lib-contrib',
976 silly addNameRange   [ '0.3.0',
976 silly addNameRange     '0.3.1',
976 silly addNameRange     '0.4.0',
976 silly addNameRange     '0.5.1',
976 silly addNameRange     '0.5.2',
976 silly addNameRange     '0.5.3',
976 silly addNameRange     '0.6.0',
976 silly addNameRange     '0.6.1' ] ]
977 verbose addNamed [ 'grunt-lib-contrib', '0.6.1' ]
978 verbose addNamed [ '0.6.1', '0.6.1' ]
979 silly lockFile 0ef65a81-grunt-lib-contrib-0-6-1 grunt-lib-contrib@0.6.1
980 verbose lock grunt-lib-contrib@0.6.1 /home/ahmad/.npm/0ef65a81-grunt-lib-contrib-0-6-1.lock
981 silly lockFile 53fc1c4c-trib-grunt-lib-contrib-0-6-1-tgz https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz
982 verbose lock https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz /home/ahmad/.npm/53fc1c4c-trib-grunt-lib-contrib-0-6-1-tgz.lock
983 verbose addRemoteTarball [ 'https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz',
983 verbose addRemoteTarball   '3f56adb7da06e814795ee2415b0ebe5fb8903ebb' ]
984 info retry fetch attempt 1 at 23:47:32
985 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/tmp.tgz
986 http GET https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz
987 http 304 https://registry.npmjs.org/coffee-script
988 silly registry.get cb [ 304,
988 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
988 silly registry.get     etag: '"D6W2D9MC80MJAFWCFZ2W18E18"',
988 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:31 GMT',
988 silly registry.get     'content-length': '0' } ]
989 verbose etag coffee-script from cache
990 silly addNameRange number 2 { name: 'coffee-script',
990 silly addNameRange   range: '>=1.3.3-0 <1.4.0-0',
990 silly addNameRange   hasData: true }
991 silly addNameRange versions [ 'coffee-script',
991 silly addNameRange   [ '0.7.0',
991 silly addNameRange     '0.7.1',
991 silly addNameRange     '0.7.2',
991 silly addNameRange     '0.9.0',
991 silly addNameRange     '0.9.1',
991 silly addNameRange     '0.9.2',
991 silly addNameRange     '0.9.3',
991 silly addNameRange     '0.9.4',
991 silly addNameRange     '0.9.5',
991 silly addNameRange     '0.9.6',
991 silly addNameRange     '1.0.0',
991 silly addNameRange     '1.0.1',
991 silly addNameRange     '1.1.0',
991 silly addNameRange     '1.1.1',
991 silly addNameRange     '1.1.2',
991 silly addNameRange     '1.1.3',
991 silly addNameRange     '1.2.0',
991 silly addNameRange     '1.3.0',
991 silly addNameRange     '1.3.1',
991 silly addNameRange     '1.3.2',
991 silly addNameRange     '1.3.3',
991 silly addNameRange     '1.4.0',
991 silly addNameRange     '1.5.0',
991 silly addNameRange     '1.6.0',
991 silly addNameRange     '1.6.1',
991 silly addNameRange     '1.6.2',
991 silly addNameRange     '1.6.3' ] ]
992 verbose addNamed [ 'coffee-script', '1.3.3' ]
993 verbose addNamed [ '1.3.3', '1.3.3' ]
994 silly lockFile 022c8436-coffee-script-1-3-3 coffee-script@1.3.3
995 verbose lock coffee-script@1.3.3 /home/ahmad/.npm/022c8436-coffee-script-1-3-3.lock
996 silly lockFile 022c8436-coffee-script-1-3-3 coffee-script@1.3.3
997 silly lockFile 022c8436-coffee-script-1-3-3 coffee-script@1.3.3
998 silly lockFile f72bb580-coffee-script-1-3-3 coffee-script@~1.3.3
999 silly lockFile f72bb580-coffee-script-1-3-3 coffee-script@~1.3.3
1000 http 304 https://registry.npmjs.org/dateformat/1.0.2-1.2.3
1001 silly registry.get cb [ 304,
1001 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1001 silly registry.get     etag: '"53MGS4758SFBP4J0VMOWHAVRB"',
1001 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:32 GMT',
1001 silly registry.get     'content-length': '0' } ]
1002 verbose etag dateformat/1.0.2-1.2.3 from cache
1003 silly lockFile 644d6e27-dateformat-1-0-2-1-2-3 dateformat@1.0.2-1.2.3
1004 silly lockFile 644d6e27-dateformat-1-0-2-1-2-3 dateformat@1.0.2-1.2.3
1005 http 304 https://registry.npmjs.org/eventemitter2
1006 silly registry.get cb [ 304,
1006 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
1006 silly registry.get     etag: '"3X5QUGJ2DP05IHP358LX937LG"',
1006 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:32 GMT',
1006 silly registry.get     'content-length': '0' } ]
1007 verbose etag eventemitter2 from cache
1008 silly addNameRange number 2 { name: 'eventemitter2',
1008 silly addNameRange   range: '>=0.4.9-0 <0.5.0-0',
1008 silly addNameRange   hasData: true }
1009 silly addNameRange versions [ 'eventemitter2',
1009 silly addNameRange   [ '0.0.1',
1009 silly addNameRange     '0.1.0',
1009 silly addNameRange     '0.1.1',
1009 silly addNameRange     '0.1.3',
1009 silly addNameRange     '0.2.5',
1009 silly addNameRange     '0.2.6',
1009 silly addNameRange     '0.2.7',
1009 silly addNameRange     '0.3.5',
1009 silly addNameRange     '0.3.6',
1009 silly addNameRange     '0.3.7',
1009 silly addNameRange     '0.4.0',
1009 silly addNameRange     '0.4.1',
1009 silly addNameRange     '0.4.3',
1009 silly addNameRange     '0.4.6',
1009 silly addNameRange     '0.4.7',
1009 silly addNameRange     '0.4.8',
1009 silly addNameRange     '0.4.9',
1009 silly addNameRange     '0.4.10',
1009 silly addNameRange     '0.4.11',
1009 silly addNameRange     '0.4.12',
1009 silly addNameRange     '0.4.13' ] ]
1010 verbose addNamed [ 'eventemitter2', '0.4.13' ]
1011 verbose addNamed [ '0.4.13', '0.4.13' ]
1012 silly lockFile 2bed8da6-eventemitter2-0-4-13 eventemitter2@0.4.13
1013 verbose lock eventemitter2@0.4.13 /home/ahmad/.npm/2bed8da6-eventemitter2-0-4-13.lock
1014 silly lockFile 2bed8da6-eventemitter2-0-4-13 eventemitter2@0.4.13
1015 silly lockFile 2bed8da6-eventemitter2-0-4-13 eventemitter2@0.4.13
1016 silly lockFile 70573e74-eventemitter2-0-4-9 eventemitter2@~0.4.9
1017 silly lockFile 70573e74-eventemitter2-0-4-9 eventemitter2@~0.4.9
1018 http 304 https://registry.npmjs.org/findup-sync
1019 silly registry.get cb [ 304,
1019 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1019 silly registry.get     etag: '"BFALDACBDE84KEJ1UFRKML8CD"',
1019 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:33 GMT',
1019 silly registry.get     'content-length': '0' } ]
1020 verbose etag findup-sync from cache
1021 silly addNameRange number 2 { name: 'findup-sync',
1021 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
1021 silly addNameRange   hasData: true }
1022 silly addNameRange versions [ 'findup-sync', [ '0.1.0', '0.1.1', '0.1.2' ] ]
1023 verbose addNamed [ 'findup-sync', '0.1.2' ]
1024 verbose addNamed [ '0.1.2', '0.1.2' ]
1025 silly lockFile d7184b2b-findup-sync-0-1-2 findup-sync@0.1.2
1026 verbose lock findup-sync@0.1.2 /home/ahmad/.npm/d7184b2b-findup-sync-0-1-2.lock
1027 silly lockFile d7184b2b-findup-sync-0-1-2 findup-sync@0.1.2
1028 silly lockFile d7184b2b-findup-sync-0-1-2 findup-sync@0.1.2
1029 silly lockFile 625605b9-findup-sync-0-1-0 findup-sync@~0.1.0
1030 silly lockFile 625605b9-findup-sync-0-1-0 findup-sync@~0.1.0
1031 http 304 https://registry.npmjs.org/hooker
1032 silly registry.get cb [ 304,
1032 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
1032 silly registry.get     etag: '"4NS4EOCQXZ0NB6PG3PIW1TD6M"',
1032 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:33 GMT',
1032 silly registry.get     'content-length': '0' } ]
1033 verbose etag hooker from cache
1034 silly addNameRange number 2 { name: 'hooker', range: '>=0.2.3-0 <0.3.0-0', hasData: true }
1035 silly addNameRange versions [ 'hooker', [ '0.2.3' ] ]
1036 verbose addNamed [ 'hooker', '0.2.3' ]
1037 verbose addNamed [ '0.2.3', '0.2.3' ]
1038 silly lockFile 97e6505f-hooker-0-2-3 hooker@0.2.3
1039 verbose lock hooker@0.2.3 /home/ahmad/.npm/97e6505f-hooker-0-2-3.lock
1040 silly lockFile 97e6505f-hooker-0-2-3 hooker@0.2.3
1041 silly lockFile 97e6505f-hooker-0-2-3 hooker@0.2.3
1042 silly lockFile 2bcd1457-hooker-0-2-3 hooker@~0.2.3
1043 silly lockFile 2bcd1457-hooker-0-2-3 hooker@~0.2.3
1044 http 304 https://registry.npmjs.org/iconv-lite
1045 silly registry.get cb [ 304,
1045 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1045 silly registry.get     etag: '"A2T3FVHI8039SNILC54LU3Y3S"',
1045 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:34 GMT',
1045 silly registry.get     'content-length': '0' } ]
1046 verbose etag iconv-lite from cache
1047 silly addNameRange number 2 { name: 'iconv-lite',
1047 silly addNameRange   range: '>=0.2.5-0 <0.3.0-0',
1047 silly addNameRange   hasData: true }
1048 silly addNameRange versions [ 'iconv-lite',
1048 silly addNameRange   [ '0.1.0',
1048 silly addNameRange     '0.1.1',
1048 silly addNameRange     '0.1.2',
1048 silly addNameRange     '0.1.3',
1048 silly addNameRange     '0.1.4',
1048 silly addNameRange     '0.2.0',
1048 silly addNameRange     '0.2.1',
1048 silly addNameRange     '0.2.3',
1048 silly addNameRange     '0.2.4',
1048 silly addNameRange     '0.2.5',
1048 silly addNameRange     '0.2.6',
1048 silly addNameRange     '0.2.7',
1048 silly addNameRange     '0.2.8',
1048 silly addNameRange     '0.2.9',
1048 silly addNameRange     '0.2.10',
1048 silly addNameRange     '0.2.11' ] ]
1049 verbose addNamed [ 'iconv-lite', '0.2.11' ]
1050 verbose addNamed [ '0.2.11', '0.2.11' ]
1051 silly lockFile 5d877021-iconv-lite-0-2-11 iconv-lite@0.2.11
1052 verbose lock iconv-lite@0.2.11 /home/ahmad/.npm/5d877021-iconv-lite-0-2-11.lock
1053 silly lockFile 5d877021-iconv-lite-0-2-11 iconv-lite@0.2.11
1054 silly lockFile 5d877021-iconv-lite-0-2-11 iconv-lite@0.2.11
1055 silly lockFile ca9efaa1-iconv-lite-0-2-5 iconv-lite@~0.2.5
1056 silly lockFile ca9efaa1-iconv-lite-0-2-5 iconv-lite@~0.2.5
1057 http 304 https://registry.npmjs.org/glob
1058 silly registry.get cb [ 304,
1058 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
1058 silly registry.get     etag: '"9F27NP1F72HEQ13T6LA8E16E8"',
1058 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:34 GMT',
1058 silly registry.get     'content-length': '0' } ]
1059 verbose etag glob from cache
1060 silly addNameRange number 2 { name: 'glob', range: '>=3.1.21-0 <3.2.0-0', hasData: true }
1061 silly addNameRange versions [ 'glob',
1061 silly addNameRange   [ '1.1.0',
1061 silly addNameRange     '2.0.9',
1061 silly addNameRange     '2.0.8',
1061 silly addNameRange     '2.0.7',
1061 silly addNameRange     '2.1.0',
1061 silly addNameRange     '3.0.0',
1061 silly addNameRange     '3.0.1',
1061 silly addNameRange     '3.1.0',
1061 silly addNameRange     '3.1.1',
1061 silly addNameRange     '3.1.2',
1061 silly addNameRange     '3.1.3',
1061 silly addNameRange     '3.1.4',
1061 silly addNameRange     '3.1.5',
1061 silly addNameRange     '3.1.6',
1061 silly addNameRange     '3.1.7',
1061 silly addNameRange     '3.1.9',
1061 silly addNameRange     '3.1.10',
1061 silly addNameRange     '3.1.11',
1061 silly addNameRange     '3.1.12',
1061 silly addNameRange     '3.1.13',
1061 silly addNameRange     '3.1.14',
1061 silly addNameRange     '3.1.15',
1061 silly addNameRange     '3.1.16',
1061 silly addNameRange     '3.1.17',
1061 silly addNameRange     '3.1.18',
1061 silly addNameRange     '3.1.19',
1061 silly addNameRange     '3.1.20',
1061 silly addNameRange     '3.1.21',
1061 silly addNameRange     '3.2.0',
1061 silly addNameRange     '3.2.1',
1061 silly addNameRange     '3.2.3',
1061 silly addNameRange     '3.2.4',
1061 silly addNameRange     '3.2.5',
1061 silly addNameRange     '3.2.6',
1061 silly addNameRange     '3.2.7' ] ]
1062 verbose addNamed [ 'glob', '3.1.21' ]
1063 verbose addNamed [ '3.1.21', '3.1.21' ]
1064 silly lockFile ab465912-glob-3-1-21 glob@3.1.21
1065 verbose lock glob@3.1.21 /home/ahmad/.npm/ab465912-glob-3-1-21.lock
1066 silly lockFile ab465912-glob-3-1-21 glob@3.1.21
1067 silly lockFile ab465912-glob-3-1-21 glob@3.1.21
1068 silly lockFile b5074ddc-glob-3-1-21 glob@~3.1.21
1069 silly lockFile b5074ddc-glob-3-1-21 glob@~3.1.21
1070 http 304 https://registry.npmjs.org/minimatch
1071 silly registry.get cb [ 304,
1071 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1071 silly registry.get     etag: '"433GUXE31BY78MEUH5M7CIXOG"',
1071 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:35 GMT',
1071 silly registry.get     'content-length': '0' } ]
1072 verbose etag minimatch from cache
1073 http 304 https://registry.npmjs.org/nopt
1074 silly registry.get cb [ 304,
1074 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
1074 silly registry.get     etag: '"3XYNN1DM5K7F9CX72UU5XRP7T"',
1074 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:36 GMT',
1074 silly registry.get     'content-length': '0' } ]
1075 verbose etag nopt from cache
1076 silly addNameRange number 2 { name: 'minimatch', range: '>=0.2.6-0 <0.3.0-0', hasData: true }
1077 silly addNameRange versions [ 'minimatch',
1077 silly addNameRange   [ '0.0.1',
1077 silly addNameRange     '0.0.2',
1077 silly addNameRange     '0.0.4',
1077 silly addNameRange     '0.0.5',
1077 silly addNameRange     '0.1.1',
1077 silly addNameRange     '0.1.2',
1077 silly addNameRange     '0.1.3',
1077 silly addNameRange     '0.1.4',
1077 silly addNameRange     '0.1.5',
1077 silly addNameRange     '0.2.0',
1077 silly addNameRange     '0.2.2',
1077 silly addNameRange     '0.2.3',
1077 silly addNameRange     '0.2.4',
1077 silly addNameRange     '0.2.5',
1077 silly addNameRange     '0.2.6',
1077 silly addNameRange     '0.2.7',
1077 silly addNameRange     '0.2.8',
1077 silly addNameRange     '0.2.9',
1077 silly addNameRange     '0.2.10',
1077 silly addNameRange     '0.2.11',
1077 silly addNameRange     '0.2.12' ] ]
1078 verbose addNamed [ 'minimatch', '0.2.12' ]
1079 verbose addNamed [ '0.2.12', '0.2.12' ]
1080 silly lockFile 16b89810-minimatch-0-2-12 minimatch@0.2.12
1081 verbose lock minimatch@0.2.12 /home/ahmad/.npm/16b89810-minimatch-0-2-12.lock
1082 silly addNameRange number 2 { name: 'nopt', range: '>=1.0.10-0 <1.1.0-0', hasData: true }
1083 silly addNameRange versions [ 'nopt',
1083 silly addNameRange   [ '1.0.0',
1083 silly addNameRange     '1.0.1',
1083 silly addNameRange     '1.0.2',
1083 silly addNameRange     '1.0.3',
1083 silly addNameRange     '1.0.4',
1083 silly addNameRange     '1.0.5',
1083 silly addNameRange     '1.0.6',
1083 silly addNameRange     '1.0.7',
1083 silly addNameRange     '1.0.8',
1083 silly addNameRange     '1.0.9',
1083 silly addNameRange     '1.0.10',
1083 silly addNameRange     '2.0.0',
1083 silly addNameRange     '2.1.0',
1083 silly addNameRange     '2.1.1',
1083 silly addNameRange     '2.1.2' ] ]
1084 verbose addNamed [ 'nopt', '1.0.10' ]
1085 verbose addNamed [ '1.0.10', '1.0.10' ]
1086 silly lockFile 1be903a1-nopt-1-0-10 nopt@1.0.10
1087 verbose lock nopt@1.0.10 /home/ahmad/.npm/1be903a1-nopt-1-0-10.lock
1088 silly lockFile 16b89810-minimatch-0-2-12 minimatch@0.2.12
1089 silly lockFile 16b89810-minimatch-0-2-12 minimatch@0.2.12
1090 silly lockFile 5922ee11-minimatch-0-2-6 minimatch@~0.2.6
1091 silly lockFile 5922ee11-minimatch-0-2-6 minimatch@~0.2.6
1092 silly lockFile 1be903a1-nopt-1-0-10 nopt@1.0.10
1093 silly lockFile 1be903a1-nopt-1-0-10 nopt@1.0.10
1094 silly lockFile 79f78dba-nopt-1-0-10 nopt@~1.0.10
1095 silly lockFile 79f78dba-nopt-1-0-10 nopt@~1.0.10
1096 http 304 https://registry.npmjs.org/lodash
1097 silly registry.get cb [ 304,
1097 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
1097 silly registry.get     etag: '"CQTOCA6AQ5MGWX2C93TR1B54I"',
1097 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:37 GMT',
1097 silly registry.get     'content-length': '0' } ]
1098 verbose etag lodash from cache
1099 http 304 https://registry.npmjs.org/rimraf
1100 silly registry.get cb [ 304,
1100 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1100 silly registry.get     etag: '"BO8JLBC2TKAXGJCA5T3URAII3"',
1100 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:38 GMT',
1100 silly registry.get     'content-length': '0' } ]
1101 verbose etag rimraf from cache
1102 silly addNameRange number 2 { name: 'rimraf', range: '>=2.0.2-0 <2.1.0-0', hasData: true }
1103 silly addNameRange versions [ 'rimraf',
1103 silly addNameRange   [ '1.0.0',
1103 silly addNameRange     '1.0.1',
1103 silly addNameRange     '1.0.2',
1103 silly addNameRange     '1.0.4',
1103 silly addNameRange     '1.0.5',
1103 silly addNameRange     '1.0.6',
1103 silly addNameRange     '1.0.7',
1103 silly addNameRange     '1.0.8',
1103 silly addNameRange     '1.0.9',
1103 silly addNameRange     '2.0.0',
1103 silly addNameRange     '2.0.1',
1103 silly addNameRange     '2.0.2',
1103 silly addNameRange     '2.0.3',
1103 silly addNameRange     '2.1.0',
1103 silly addNameRange     '2.1.1',
1103 silly addNameRange     '2.1.2',
1103 silly addNameRange     '2.1.3',
1103 silly addNameRange     '2.1.4',
1103 silly addNameRange     '2.2.0',
1103 silly addNameRange     '2.2.1',
1103 silly addNameRange     '2.2.2' ] ]
1104 verbose addNamed [ 'rimraf', '2.0.3' ]
1105 verbose addNamed [ '2.0.3', '2.0.3' ]
1106 silly lockFile 166fc4dd-rimraf-2-0-3 rimraf@2.0.3
1107 verbose lock rimraf@2.0.3 /home/ahmad/.npm/166fc4dd-rimraf-2-0-3.lock
1108 silly addNameRange number 2 { name: 'lodash', range: '>=0.9.0-0 <0.10.0-0', hasData: true }
1109 silly addNameRange versions [ 'lodash',
1109 silly addNameRange   [ '0.1.0',
1109 silly addNameRange     '0.2.0',
1109 silly addNameRange     '0.2.1',
1109 silly addNameRange     '0.2.2',
1109 silly addNameRange     '0.3.0',
1109 silly addNameRange     '0.3.1',
1109 silly addNameRange     '0.3.2',
1109 silly addNameRange     '0.4.0',
1109 silly addNameRange     '0.4.1',
1109 silly addNameRange     '0.4.2',
1109 silly addNameRange     '0.5.0-rc.1',
1109 silly addNameRange     '0.5.0',
1109 silly addNameRange     '0.5.1',
1109 silly addNameRange     '0.5.2',
1109 silly addNameRange     '0.6.0',
1109 silly addNameRange     '0.6.1',
1109 silly addNameRange     '0.7.0',
1109 silly addNameRange     '0.8.0',
1109 silly addNameRange     '0.8.1',
1109 silly addNameRange     '0.8.2',
1109 silly addNameRange     '0.9.0',
1109 silly addNameRange     '0.9.1',
1109 silly addNameRange     '0.9.2',
1109 silly addNameRange     '0.10.0',
1109 silly addNameRange     '1.0.0-rc.1',
1109 silly addNameRange     '1.0.0-rc.2',
1109 silly addNameRange     '1.0.0-rc.3',
1109 silly addNameRange     '1.0.0',
1109 silly addNameRange     '1.0.1',
1109 silly addNameRange     '1.1.0',
1109 silly addNameRange     '1.1.1',
1109 silly addNameRange     '1.2.0',
1109 silly addNameRange     '1.2.1',
1109 silly addNameRange     '1.3.0',
1109 silly addNameRange     '1.3.1',
1109 silly addNameRange     '2.0.0',
1109 silly addNameRange     '2.1.0',
1109 silly addNameRange     '2.2.0',
1109 silly addNameRange     '2.2.1',
1109 silly addNameRange     '2.3.0' ] ]
1110 verbose addNamed [ 'lodash', '0.9.2' ]
1111 verbose addNamed [ '0.9.2', '0.9.2' ]
1112 silly lockFile 9802d919-lodash-0-9-2 lodash@0.9.2
1113 verbose lock lodash@0.9.2 /home/ahmad/.npm/9802d919-lodash-0-9-2.lock
1114 silly lockFile 166fc4dd-rimraf-2-0-3 rimraf@2.0.3
1115 silly lockFile 166fc4dd-rimraf-2-0-3 rimraf@2.0.3
1116 silly lockFile 723423b4-rimraf-2-0-2 rimraf@~2.0.2
1117 silly lockFile 723423b4-rimraf-2-0-2 rimraf@~2.0.2
1118 silly lockFile 9802d919-lodash-0-9-2 lodash@0.9.2
1119 silly lockFile 9802d919-lodash-0-9-2 lodash@0.9.2
1120 silly lockFile 429879b8-lodash-0-9-0 lodash@~0.9.0
1121 silly lockFile 429879b8-lodash-0-9-0 lodash@~0.9.0
1122 http 200 https://registry.npmjs.org/jshint
1123 silly registry.get cb [ 200,
1123 silly registry.get   { vary: 'Accept',
1123 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1123 silly registry.get     etag: '"CLMJUM1PLE8NR6DZ0GCQ4Y407"',
1123 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:28 GMT',
1123 silly registry.get     'content-type': 'application/json',
1123 silly registry.get     'content-length': '176377' } ]
1124 http 200 https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz
1125 http 304 https://registry.npmjs.org/underscore.string
1126 silly registry.get cb [ 304,
1126 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
1126 silly registry.get     etag: '"82KONBUKGVFGLKPUIJ91QHEA4"',
1126 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:39 GMT',
1126 silly registry.get     'content-length': '0' } ]
1127 verbose etag underscore.string from cache
1128 http 304 https://registry.npmjs.org/which
1129 silly registry.get cb [ 304,
1129 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1129 silly registry.get     etag: '"43PJVZ0U2IY5DUOK5LXY2JGYD"',
1129 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:40 GMT',
1129 silly registry.get     'content-length': '0' } ]
1130 verbose etag which from cache
1131 silly addNameRange number 2 { name: 'which', range: '>=1.0.5-0 <1.1.0-0', hasData: true }
1132 silly addNameRange versions [ 'which', [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.5' ] ]
1133 verbose addNamed [ 'which', '1.0.5' ]
1134 verbose addNamed [ '1.0.5', '1.0.5' ]
1135 silly lockFile 4aed4494-which-1-0-5 which@1.0.5
1136 verbose lock which@1.0.5 /home/ahmad/.npm/4aed4494-which-1-0-5.lock
1137 silly addNameRange number 2 { name: 'underscore.string',
1137 silly addNameRange   range: '>=2.2.0-rc <2.3.0-0',
1137 silly addNameRange   hasData: true }
1138 silly addNameRange versions [ 'underscore.string',
1138 silly addNameRange   [ '0.9.2',
1138 silly addNameRange     '1.0.0',
1138 silly addNameRange     '1.1.3',
1138 silly addNameRange     '1.1.4',
1138 silly addNameRange     '1.1.5',
1138 silly addNameRange     '1.1.6',
1138 silly addNameRange     '2.0.0',
1138 silly addNameRange     '2.1.0',
1138 silly addNameRange     '2.1.1',
1138 silly addNameRange     '2.3.0',
1138 silly addNameRange     '2.3.1',
1138 silly addNameRange     '2.3.2',
1138 silly addNameRange     '2.2.1',
1138 silly addNameRange     '2.2.0-rc',
1138 silly addNameRange     '2.3.3' ] ]
1139 verbose addNamed [ 'underscore.string', '2.2.1' ]
1140 verbose addNamed [ '2.2.1', '2.2.1' ]
1141 silly lockFile 5c083954-underscore-string-2-2-1 underscore.string@2.2.1
1142 verbose lock underscore.string@2.2.1 /home/ahmad/.npm/5c083954-underscore-string-2-2-1.lock
1143 silly addNameRange number 2 { name: 'jshint', range: '>=2.1.10-0 <2.2.0-0', hasData: true }
1144 silly addNameRange versions [ 'jshint',
1144 silly addNameRange   [ '0.1.8',
1144 silly addNameRange     '0.1.9',
1144 silly addNameRange     '0.2.0',
1144 silly addNameRange     '0.2.1',
1144 silly addNameRange     '0.2.2',
1144 silly addNameRange     '0.2.3',
1144 silly addNameRange     '0.3.0',
1144 silly addNameRange     '0.3.1',
1144 silly addNameRange     '0.4.0',
1144 silly addNameRange     '0.5.0',
1144 silly addNameRange     '0.5.1',
1144 silly addNameRange     '0.5.2',
1144 silly addNameRange     '0.5.3',
1144 silly addNameRange     '0.5.4',
1144 silly addNameRange     '0.5.5',
1144 silly addNameRange     '0.5.6',
1144 silly addNameRange     '0.5.7',
1144 silly addNameRange     '0.5.8',
1144 silly addNameRange     '0.5.9',
1144 silly addNameRange     '0.6.0',
1144 silly addNameRange     '0.6.1',
1144 silly addNameRange     '0.6.2',
1144 silly addNameRange     '0.6.3',
1144 silly addNameRange     '0.7.0',
1144 silly addNameRange     '0.7.1',
1144 silly addNameRange     '0.7.2',
1144 silly addNameRange     '0.7.3',
1144 silly addNameRange     '0.8.0',
1144 silly addNameRange     '0.8.1',
1144 silly addNameRange     '0.8.2',
1144 silly addNameRange     '0.9.0',
1144 silly addNameRange     '0.9.1',
1144 silly addNameRange     '1.0.0',
1144 silly addNameRange     '1.1.0',
1144 silly addNameRange     '2.0.0',
1144 silly addNameRange     '2.0.1',
1144 silly addNameRange     '2.1.0',
1144 silly addNameRange     '2.1.1',
1144 silly addNameRange     '2.1.2',
1144 silly addNameRange     '2.1.3',
1144 silly addNameRange     '2.1.4',
1144 silly addNameRange     '2.1.5',
1144 silly addNameRange     '2.1.6',
1144 silly addNameRange     '2.1.7',
1144 silly addNameRange     '2.1.8',
1144 silly addNameRange     '2.1.9',
1144 silly addNameRange     '2.1.10',
1144 silly addNameRange     '2.1.11',
1144 silly addNameRange     '2.2.0',
1144 silly addNameRange     '2.3.0' ] ]
1145 verbose addNamed [ 'jshint', '2.1.11' ]
1146 verbose addNamed [ '2.1.11', '2.1.11' ]
1147 silly lockFile a928d2e0-jshint-2-1-11 jshint@2.1.11
1148 verbose lock jshint@2.1.11 /home/ahmad/.npm/a928d2e0-jshint-2-1-11.lock
1149 silly lockFile 4854f5ca-mjs-org-jshint-jshint-2-1-11-tgz https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz
1150 verbose lock https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz /home/ahmad/.npm/4854f5ca-mjs-org-jshint-jshint-2-1-11-tgz.lock
1151 verbose addRemoteTarball [ 'https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz',
1151 verbose addRemoteTarball   'eb5108fef9ba5ddebb830983f572d242e49e3f96' ]
1152 info retry fetch attempt 1 at 23:47:41
1153 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/tmp.tgz
1154 http GET https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz
1155 silly lockFile 4aed4494-which-1-0-5 which@1.0.5
1156 silly lockFile 4aed4494-which-1-0-5 which@1.0.5
1157 silly lockFile 5c083954-underscore-string-2-2-1 underscore.string@2.2.1
1158 silly lockFile 5c083954-underscore-string-2-2-1 underscore.string@2.2.1
1159 silly lockFile d158d65e-which-1-0-5 which@~1.0.5
1160 silly lockFile d158d65e-which-1-0-5 which@~1.0.5
1161 silly lockFile d5a5a3c6-underscore-string-2-2-0rc underscore.string@~2.2.0rc
1162 silly lockFile d5a5a3c6-underscore-string-2-2-0rc underscore.string@~2.2.0rc
1163 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/tmp.tgz
1164 silly lockFile 045b1ded-2008-0-27322769188322127-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1165 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package /home/ahmad/.npm/045b1ded-2008-0-27322769188322127-package.lock
1166 silly lockFile 9e730c8c-2008-0-27322769188322127-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/tmp.tgz
1167 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/tmp.tgz /home/ahmad/.npm/9e730c8c-2008-0-27322769188322127-tmp-tgz.lock
1168 silly gunzTarPerm modes [ '755', '644' ]
1169 http 304 https://registry.npmjs.org/js-yaml
1170 silly registry.get cb [ 304,
1170 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
1170 silly registry.get     etag: '"6AVIVKL9QGGBSOAWI2NX1010Q"',
1170 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:42 GMT',
1170 silly registry.get     'content-length': '0' } ]
1171 verbose etag js-yaml from cache
1172 silly gunzTarPerm extractEntry package.json
1173 silly gunzTarPerm extractEntry .npmignore
1174 silly gunzTarPerm extractEntry README.md
1175 silly addNameRange number 2 { name: 'js-yaml', range: '>=2.0.2-0 <2.1.0-0', hasData: true }
1176 silly addNameRange versions [ 'js-yaml',
1176 silly addNameRange   [ '0.2.0',
1176 silly addNameRange     '0.2.1',
1176 silly addNameRange     '0.2.2',
1176 silly addNameRange     '0.3.0',
1176 silly addNameRange     '0.3.1',
1176 silly addNameRange     '0.3.2',
1176 silly addNameRange     '0.3.3',
1176 silly addNameRange     '0.3.4',
1176 silly addNameRange     '0.3.5',
1176 silly addNameRange     '0.3.6',
1176 silly addNameRange     '0.3.7',
1176 silly addNameRange     '1.0.0',
1176 silly addNameRange     '1.0.1',
1176 silly addNameRange     '1.0.2',
1176 silly addNameRange     '1.0.3',
1176 silly addNameRange     '2.0.0',
1176 silly addNameRange     '2.0.1',
1176 silly addNameRange     '2.0.2',
1176 silly addNameRange     '2.0.3',
1176 silly addNameRange     '2.0.4',
1176 silly addNameRange     '2.0.5',
1176 silly addNameRange     '2.1.0',
1176 silly addNameRange     '2.1.1',
1176 silly addNameRange     '2.1.2',
1176 silly addNameRange     '2.1.3' ] ]
1177 verbose addNamed [ 'js-yaml', '2.0.5' ]
1178 verbose addNamed [ '2.0.5', '2.0.5' ]
1179 silly lockFile 0aecb717-js-yaml-2-0-5 js-yaml@2.0.5
1180 verbose lock js-yaml@2.0.5 /home/ahmad/.npm/0aecb717-js-yaml-2-0-5.lock
1181 silly gunzTarPerm extractEntry Gruntfile.js
1182 silly gunzTarPerm extractEntry AUTHORS
1183 silly gunzTarPerm extractEntry CHANGELOG
1184 silly gunzTarPerm extractEntry .jshintrc
1185 silly lockFile 0aecb717-js-yaml-2-0-5 js-yaml@2.0.5
1186 silly lockFile 0aecb717-js-yaml-2-0-5 js-yaml@2.0.5
1187 silly lockFile 0dc3e23f-js-yaml-2-0-2 js-yaml@~2.0.2
1188 silly lockFile 0dc3e23f-js-yaml-2-0-2 js-yaml@~2.0.2
1189 silly resolved [ { name: 'async',
1189 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1189 silly resolved     main: './index',
1189 silly resolved     author: { name: 'Caolan McMahon' },
1189 silly resolved     version: '0.1.22',
1189 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
1189 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
1189 silly resolved     licenses: [ [Object] ],
1189 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1189 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n    async.parallel([\n        function(){ ... },\n        function(){ ... }\n    ], callback);\n\n    async.series([\n        function(){ ... },\n        function(){ ... }\n    ]);\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n    <script type="text/javascript" src="async.js"></script>\n    <script type="text/javascript">\n\n        async.map(data, asyncProcess, function(err, results){\n            alert(results);\n        });\n\n    </script>\n\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [until](#until)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // assuming openFiles is an array of file names and saveFile is a function\n    // to save the modified contents of that file:\n\n    async.forEach(openFiles, saveFile, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // Assume documents is an array of JSON objects and requestApi is a\n    // function that interacts with a rate-limited REST api.\n\n    async.forEachLimit(documents, 20, requestApi, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as filter, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n    async.reduce([1,2,3], 0, function(memo, item, callback){\n        // pointless async:\n        process.nextTick(function(){\n            callback(null, memo + item)\n        });\n    }, function(err, result){\n        // result is now equal to the last value of memo, which is 6\n    });\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n    async.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // result now equals the first file in the list that exists\n    });\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n    async.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n        fs.stat(file, function(err, stats){\n            callback(err, stats.mtime);\n        });\n    }, function(err, results){\n        // results is now the original array of files sorted by\n        // modified date\n    });\n\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n    async.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then at least one of the files exists\n    });\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n    async.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then every file exists\n    });\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n    async.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n        // files is now a list of filenames that exist in the 3 directories\n    });\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.series([\n        function(callback){\n            // do some stuff ...\n            callback(null, \'one\');\n        },\n        function(callback){\n            // do some more stuff ...\n            callback(null, \'two\');\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // results is now equal to [\'one\', \'two\']\n    });\n\n\n    // an example using an object instead of an array\n    async.series({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equal to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.parallel([\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'one\');\n            }, 200);\n        },\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'two\');\n            }, 100);\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // the results array will equal [\'one\',\'two\'] even though\n        // the second function had a shorter timeout.\n    });\n\n\n    // an example using an object instead of an array\n    async.parallel({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equals to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n    var count = 0;\n\n    async.whilst(\n        function () { return count < 5; },\n        function (callback) {\n            count++;\n            setTimeout(callback, 1000);\n        },\n        function (err) {\n            // 5 seconds have passed\n        }\n    );\n\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n    async.waterfall([\n        function(callback){\n            callback(null, \'one\', \'two\');\n        },\n        function(arg1, arg2, callback){\n            callback(null, \'three\');\n        },\n        function(arg1, callback){\n            // arg1 now equals \'three\'\n            callback(null, \'done\');\n        }\n    ], function (err, result) {\n       // result now equals \'done\'    \n    });\n\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n    // create a queue object with concurrency 2\n\n    var q = async.queue(function (task, callback) {\n        console.log(\'hello \' + task.name);\n        callback();\n    }, 2);\n\n\n    // assign a callback\n    q.drain = function() {\n        console.log(\'all items have been processed\');\n    }\n\n    // add some items to the queue\n\n    q.push({name: \'foo\'}, function (err) {\n        console.log(\'finished processing foo\');\n    });\n    q.push({name: \'bar\'}, function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n    // add some items to the queue (batch-wise)\n\n    q.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n    async.auto({\n        get_data: function(callback){\n            // async code to get some data\n        },\n        make_folder: function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        },\n        write_file: [\'get_data\', \'make_folder\', function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            callback(null, filename);\n        }],\n        email_link: [\'write_file\', function(callback, results){\n            // once the file is written let\'s email a link to it...\n            // results.write_file contains the filename returned by write_file.\n        }]\n    });\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n    async.parallel([\n        function(callback){\n            // async code to get some data\n        },\n        function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        }\n    ],\n    function(results){\n        async.series([\n            function(callback){\n                // once there is some data and the directory exists,\n                // write the data to a file in the directory\n            },\n            email_link: function(callback){\n                // once the file is written let\'s email a link to it...\n            }\n        ]);\n    });\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n    var iterator = async.iterator([\n        function(){ sys.p(\'one\'); },\n        function(){ sys.p(\'two\'); },\n        function(){ sys.p(\'three\'); }\n    ]);\n\n    node> var iterator2 = iterator();\n    \'one\'\n    node> var iterator3 = iterator2();\n    \'two\'\n    node> iterator3();\n    \'three\'\n    node> var nextfn = iterator2.next();\n    node> nextfn();\n    \'three\'\n\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n    // using apply\n\n    async.parallel([\n        async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n        async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n    ]);\n\n\n    // the same process without using apply\n\n    async.parallel([\n        function(callback){\n            fs.writeFile(\'testfile1\', \'test1\', callback);\n        },\n        function(callback){\n            fs.writeFile(\'testfile2\', \'test2\', callback);\n        },\n    ]);\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n    node> var fn = async.apply(sys.puts, \'one\');\n    node> fn(\'two\', \'three\');\n    one\n    two\n    three\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\nwhich means other higher priority events may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n    var call_order = [];\n    async.nextTick(function(){\n        call_order.push(\'two\');\n        // call_order now equals [\'one\',\'two]\n    });\n    call_order.push(\'one\')\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n    var slow_fn = function (name, callback) {\n        // do something\n        callback(null, result);\n    };\n    var fn = async.memoize(slow_fn);\n\n    // fn can now be used as if it were slow_fn\n    fn(\'some name\', function () {\n        // callback\n    });\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, \'hello \' + name);\n        }, 1000);\n    };\n\n    node> async.log(hello, \'world\');\n    \'hello world\'\n\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, {hello: name});\n        }, 1000);\n    };\n\n    node> async.dir(hello, \'world\');\n    {hello: \'world\'}\n\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     homepage: 'https://github.com/caolan/async',
1189 silly resolved     _id: 'async@0.1.22',
1189 silly resolved     _from: 'async@~0.1.22' },
1189 silly resolved   { name: 'colors',
1189 silly resolved     description: 'get colors in your node.js console like what',
1189 silly resolved     version: '0.6.2',
1189 silly resolved     author: { name: 'Marak Squires' },
1189 silly resolved     homepage: 'https://github.com/Marak/colors.js',
1189 silly resolved     bugs: { url: 'https://github.com/Marak/colors.js/issues' },
1189 silly resolved     keywords: [ 'ansi', 'terminal', 'colors' ],
1189 silly resolved     repository: { type: 'git', url: 'http://github.com/Marak/colors.js.git' },
1189 silly resolved     engines: { node: '>=0.1.90' },
1189 silly resolved     main: 'colors',
1189 silly resolved     readme: '# colors.js - get color and style in your node.js console ( and browser ) like what\n\n<img src="http://i.imgur.com/goJdO.png" border = "0"/>\n\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n- bold\n- italic\n- underline\n- inverse\n- yellow\n- cyan\n- white\n- magenta\n- green\n- red\n- grey\n- blue\n- rainbow\n- zebra\n- random\n\n## Usage\n\n``` js\nvar colors = require(\'./colors\');\n\nconsole.log(\'hello\'.green); // outputs green text\nconsole.log(\'i like cake and pies\'.underline.red) // outputs red underlined text\nconsole.log(\'inverse the color\'.inverse); // inverses the color\nconsole.log(\'OMG Rainbows!\'.rainbow); // rainbow (ignores spaces)\n```\n\n# Creating Custom themes\n\n```js\n\nvar colors = require(\'colors\');\n\ncolors.setTheme({\n  silly: \'rainbow\',\n  input: \'grey\',\n  verbose: \'cyan\',\n  prompt: \'grey\',\n  info: \'green\',\n  data: \'grey\',\n  help: \'cyan\',\n  warn: \'yellow\',\n  debug: \'blue\',\n  error: \'red\'\n});\n\n// outputs red text\nconsole.log("this is an error".error);\n\n// outputs yellow text\nconsole.log("this is a warning".warn);\n```\n\n\n### Contributors \n\nMarak (Marak Squires)\nAlexis Sellier (cloudhead)\nmmalecki (Maciej Małecki)\nnicoreed (Nico Reed)\nmorganrallen (Morgan Allen)\nJustinCampbell (Justin Campbell)\nded (Dustin Diaz)\n\n\n####  , Marak Squires , Justin Campbell, Dustin Diaz (@ded)\n',
1189 silly resolved     readmeFilename: 'ReadMe.md',
1189 silly resolved     _id: 'colors@0.6.2',
1189 silly resolved     _from: 'colors@~0.6.0-1' },
1189 silly resolved   { name: 'coffee-script',
1189 silly resolved     description: 'Unfancy JavaScript',
1189 silly resolved     keywords: [ 'javascript', 'language', 'coffeescript', 'compiler' ],
1189 silly resolved     author: { name: 'Jeremy Ashkenas' },
1189 silly resolved     version: '1.3.3',
1189 silly resolved     licenses: [ [Object] ],
1189 silly resolved     engines: { node: '>=0.4.0' },
1189 silly resolved     directories: { lib: './lib/coffee-script' },
1189 silly resolved     main: './lib/coffee-script/coffee-script',
1189 silly resolved     bin: { coffee: './bin/coffee', cake: './bin/cake' },
1189 silly resolved     homepage: 'http://coffeescript.org',
1189 silly resolved     bugs: { url: 'https://github.com/jashkenas/coffee-script/issues' },
1189 silly resolved     repository:
1189 silly resolved      { type: 'git',
1189 silly resolved        url: 'git://github.com/jashkenas/coffee-script.git' },
1189 silly resolved     devDependencies: { 'uglify-js': '>=1.0.0', jison: '>=0.2.0' },
1189 silly resolved     readme: '\n            {\n         }   }   {\n        {   {  }  }\n         }   }{  {\n        {  }{  }  }                    _____       __  __\n       ( }{ }{  { )                   / ____|     / _|/ _|\n     .- { { }  { }} -.               | |     ___ | |_| |_ ___  ___\n    (  ( } { } { } }  )              | |    / _ \\|  _|  _/ _ \\/ _ \\\n    |`-..________ ..-\'|              | |___| (_) | | | ||  __/  __/\n    |                 |               \\_____\\___/|_| |_| \\___|\\___|\n    |                 ;--.\n    |                (__  \\            _____           _       _\n    |                 | )  )          / ____|         (_)     | |\n    |                 |/  /          | (___   ___ _ __ _ _ __ | |_\n    |                 (  /            \\___ \\ / __| \'__| | \'_ \\| __|\n    |                 |/              ____) | (__| |  | | |_) | |_\n    |                 |              |_____/ \\___|_|  |_| .__/ \\__|\n     `-.._________..-\'                                  | |\n                                                        |_|\n\n\n  CoffeeScript is a little language that compiles into JavaScript.\n\n  Install Node.js, and then the CoffeeScript compiler:\n  sudo bin/cake install\n\n  Or, if you have the Node Package Manager installed:\n  npm install -g coffee-script\n  (Leave off the -g if you don\'t wish to install globally.)\n\n  Execute a script:\n  coffee /path/to/script.coffee\n\n  Compile a script:\n  coffee -c /path/to/script.coffee\n\n  For documentation, usage, and examples, see:\n  http://coffeescript.org/\n\n  To suggest a feature, report a bug, or general discussion:\n  http://github.com/jashkenas/coffee-script/issues/\n\n  If you\'d like to chat, drop by #coffeescript on Freenode IRC,\n  or on webchat.freenode.net.\n\n  The source repository:\n  git://github.com/jashkenas/coffee-script.git\n\n  All contributors are listed here:\n  http://github.com/jashkenas/coffee-script/contributors\n',
1189 silly resolved     readmeFilename: 'README',
1189 silly resolved     _id: 'coffee-script@1.3.3',
1189 silly resolved     _from: 'coffee-script@~1.3.3' },
1189 silly resolved   { name: 'dateformat',
1189 silly resolved     description: 'A node.js package for Steven Levithan\'s excellent dateFormat() function.',
1189 silly resolved     maintainers: 'Felix Geisendörfer <felix@debuggable.com>',
1189 silly resolved     homepage: 'https://github.com/felixge/node-dateformat',
1189 silly resolved     author: { name: 'Steven Levithan' },
1189 silly resolved     version: '1.0.2-1.2.3',
1189 silly resolved     main: './lib/dateformat',
1189 silly resolved     dependencies: {},
1189 silly resolved     devDependencies: {},
1189 silly resolved     engines: { node: '*' },
1189 silly resolved     readme: '# node-dateformat\n\nA node.js package for Steven Levithan\'s excellent [dateFormat()][dateformat] function.\n\n## Modifications\n\n* Removed the `Date.prototype.format` method. Sorry folks, but extending native prototypes is for suckers.\n* Added a `module.exports = dateFormat;` statement at the bottom\n\n## Usage\n\nAs taken from Steven\'s post, modified to match the Modifications listed above:\n\n    var dateFormat = require(\'dateformat\');\n    var now = new Date();\n\n    // Basic usage\n    dateFormat(now, "dddd, mmmm dS, yyyy, h:MM:ss TT");\n    // Saturday, June 9th, 2007, 5:46:21 PM\n\n    // You can use one of several named masks\n    dateFormat(now, "isoDateTime");\n    // 2007-06-09T17:46:21\n\n    // ...Or add your own\n    dateFormat.masks.hammerTime = \'HH:MM! "Can\\\'t touch this!"\';\n    dateFormat(now, "hammerTime");\n    // 17:46! Can\'t touch this!\n\n    // When using the standalone dateFormat function,\n    // you can also provide the date as a string\n    dateFormat("Jun 9 2007", "fullDate");\n    // Saturday, June 9, 2007\n\n    // Note that if you don\'t include the mask argument,\n    // dateFormat.masks.default is used\n    dateFormat(now);\n    // Sat Jun 09 2007 17:46:21\n\n    // And if you don\'t include the date argument,\n    // the current date and time is used\n    dateFormat();\n    // Sat Jun 09 2007 17:46:22\n\n    // You can also skip the date argument (as long as your mask doesn\'t\n    // contain any numbers), in which case the current date/time is used\n    dateFormat("longTime");\n    // 5:46:22 PM EST\n\n    // And finally, you can convert local time to UTC time. Simply pass in\n    // true as an additional argument (no argument skipping allowed in this case):\n    dateFormat(now, "longTime", true);\n    // 10:46:21 PM UTC\n\n    // ...Or add the prefix "UTC:" to your mask.\n    dateFormat(now, "UTC:h:MM:ss TT Z");\n    // 10:46:21 PM UTC\n\n    // You can also get the ISO 8601 week of the year:\n    dateFormat(now, "W");\n    // 42\n## License\n\n(c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\n\n[dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\n[stevenlevithan]: http://stevenlevithan.com/\n',
1189 silly resolved     readmeFilename: 'Readme.md',
1189 silly resolved     _id: 'dateformat@1.0.2-1.2.3',
1189 silly resolved     _from: 'dateformat@1.0.2-1.2.3' },
1189 silly resolved   { name: 'eventemitter2',
1189 silly resolved     version: '0.4.13',
1189 silly resolved     description: 'A Node.js event emitter implementation with namespaces, wildcards, TTL and browser support.',
1189 silly resolved     keywords: [ 'event', 'events', 'emitter', 'eventemitter' ],
1189 silly resolved     author: { name: 'hij1nx', email: 'paolo@async.ly' },
1189 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
1189 silly resolved     license: 'MIT',
1189 silly resolved     repository:
1189 silly resolved      { type: 'git',
1189 silly resolved        url: 'git://github.com/hij1nx/EventEmitter2.git' },
1189 silly resolved     devDependencies: { nodeunit: '*', benchmark: '>= 0.2.2' },
1189 silly resolved     main: './lib/eventemitter2.js',
1189 silly resolved     scripts:
1189 silly resolved      { test: 'nodeunit test/simple/ && nodeunit test/wildcardEvents/',
1189 silly resolved        benchmark: 'node test/perf/benchmark.js' },
1189 silly resolved     files: [ 'lib/eventemitter2.js', 'index.js' ],
1189 silly resolved     readme: '# EventEmitter2\n\nEventEmitter2 is an implementation of the EventEmitter found in Node.js\n\n## Features\n\n - Namespaces/Wildcards.\n - Times To Listen (TTL), extends the `once` concept with `many`.\n - Browser environment compatibility.\n - Demonstrates good performance in benchmarks\n\n```\nEventEmitterHeatUp x 3,728,965 ops/sec \\302\\2610.68% (60 runs sampled)\nEventEmitter x 2,822,904 ops/sec \\302\\2610.74% (63 runs sampled)\nEventEmitter2 x 7,251,227 ops/sec \\302\\2610.55% (58 runs sampled)\nEventEmitter2 (wild) x 3,220,268 ops/sec \\302\\2610.44% (65 runs sampled)\nFastest is EventEmitter2\n```\n\n## Differences (Non breaking, compatible with existing EventEmitter)\n\n - The constructor takes a configuration object.\n \n```javascript\n    var EventEmitter2 = require(\'eventemitter2\').EventEmitter2;\n    var server = new EventEmitter2({\n      wildcard: true, // should the event emitter use wildcards.\n      delimiter: \'::\', // the delimiter used to segment namespaces, defaults to `.`.\n      newListener: false, // if you want to emit the newListener event set to true.\n      maxListeners: 20, // the max number of listeners that can be assigned to an event, defaults to 10.\n    });\n```\n\n - Getting the actual event that fired.\n\n```javascript\n    server.on(\'foo.*\', function(value1, value2) {\n      console.log(this.event, value1, value2);\n    });\n```\n\n - Fire an event N times and then remove it, an extension of the `once` concept.\n\n```javascript\n    server.many(\'foo\', 4, function() {\n      console.log(\'hello\');\n    });\n```\n\n - Pass in a namespaced event as an array rather than a delimited string.\n\n```javascript\n    server.many([\'foo\', \'bar\', \'bazz\'], function() {\n      console.log(\'hello\');\n    });\n```\n\n\n## API\n\nWhen an `EventEmitter` instance experiences an error, the typical action is\nto emit an `error` event. Error events are treated as a special case.\nIf there is no listener for it, then the default action is to print a stack\ntrace and exit the program.\n\nAll EventEmitters emit the event `newListener` when new listeners are\nadded.\n\n\n**Namespaces** with **Wildcards**\nTo use namespaces/wildcards, pass the `wildcard` option into the EventEmitter constructor.\nWhen namespaces/wildcards are enabled, events can either be strings (`foo.bar`) separated\nby a delimiter or arrays (`[\'foo\', \'bar\']`). The delimiter is also configurable as a \nconstructor option.\n\nAn event name passed to any event emitter method can contain a wild card (the `*` character).\nIf the event name is a string, a wildcard may appear as `foo.*`. If the event name is an array, \nthe wildcard may appear as `[\'foo\', \'*\']`.\n\nIf either of the above described events were passed to the `on` method, subsequent emits such \nas the following would be observed...\n\n```javascript\n   emitter.emit(\'foo.bazz\');\n   emitter.emit([\'foo\', \'bar\']);\n```\n\n\n#### emitter.addListener(event, listener)\n#### emitter.on(event, listener)\n\nAdds a listener to the end of the listeners array for the specified event.\n\n```javascript\n    server.on(\'data\', function(value1, value2, value3 /* accepts any number of expected values... */) {\n      console.log(\'The event was raised!\');\n    });\n```\n\n```javascript\n    server.on(\'data\', function(value) {\n      console.log(\'The event was raised!\');\n    });\n```\n\n#### emitter.onAny(listener)\n\nAdds a listener that will be fired when any event is emitted.\n\n```javascript\n    server.onAny(function(value) {\n      console.log(\'All events trigger this.\');\n    });\n```\n\n#### emitter.offAny(listener)\n\nRemoves the listener that will be fired when any event is emitted.\n\n```javascript\n    server.offAny(function(value) {\n      console.log(\'The event was raised!\');\n    });\n```\n\n#### emitter.once(event, listener)\n\nAdds a **one time** listener for the event. The listener is invoked only the first time the event is fired, after which it is removed.\n\n```javascript\n    server.once(\'get\', function (value) {\n      console.log(\'Ah, we have our first value!\');\n    });\n```\n\n#### emitter.many(event, timesToListen, listener)\n\nAdds a listener that will execute **n times** for the event before being removed. The listener is invoked only the first time the event is fired, after which it is removed.\n\n```javascript\n    server.many(\'get\', 4, function (value) {\n      console.log(\'This event will be listened to exactly four times.\');\n    });\n```\n\n\n#### emitter.removeListener(event, listener)\n#### emitter.off(event, listener)\n\nRemove a listener from the listener array for the specified event. **Caution**: changes array indices in the listener array behind the listener.\n\n```javascript\n    var callback = function(value) {\n      console.log(\'someone connected!\');\n    };\n    server.on(\'get\', callback);\n    // ...\n    server.removeListener(\'get\', callback);\n```\n\n\n#### emitter.removeAllListeners([event])\n\nRemoves all listeners, or those of the specified event.\n\n\n#### emitter.setMaxListeners(n)\n\nBy default EventEmitters will print a warning if more than 10 listeners are added to it. This is a useful default which helps finding memory leaks. Obviously not all Emitters should be limited to 10. This function allows that to be increased. Set to zero for unlimited.\n\n\n#### emitter.listeners(event)\n\nReturns an array of listeners for the specified event. This array can be manipulated, e.g. to remove listeners.\n\n```javascript\n    server.on(\'get\', function(value) {\n      console.log(\'someone connected!\');\n    });\n    console.log(console.log(server.listeners(\'get\')); // [ [Function] ]\n```\n\n#### emitter.listenersAny()\n\nReturns an array of listeners that are listening for any event that is specified. This array can be manipulated, e.g. to remove listeners.\n\n```javascript\n    server.onAny(function(value) {\n      console.log(\'someone connected!\');\n    });\n    console.log(console.log(server.listenersAny()[0]); // [ [Function] ] // someone connected!\n```\n\n#### emitter.emit(event, [arg1], [arg2], [...])\n\nExecute each of the listeners that may be listening for the specified event name in order with the list of arguments.\n\n## Test coverage\n\nThere is a test suite that tries to cover each use case, it can be found <a href="https://github.com/hij1nx/EventEmitter2/tree/master/test">here</a>.\n\n## Licence\n\n(The MIT License)\n\nCopyright (c) 2011 hij1nx <http://www.twitter.com/hij1nx>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \'Software\'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/hij1nx/EventEmitter2/issues' },
1189 silly resolved     homepage: 'https://github.com/hij1nx/EventEmitter2',
1189 silly resolved     _id: 'eventemitter2@0.4.13',
1189 silly resolved     _from: 'eventemitter2@~0.4.9' },
1189 silly resolved   { name: 'findup-sync',
1189 silly resolved     description: 'Find the first file matching a given pattern in the current directory or the nearest ancestor directory.',
1189 silly resolved     version: '0.1.2',
1189 silly resolved     homepage: 'https://github.com/cowboy/node-findup-sync',
1189 silly resolved     author: { name: '"Cowboy" Ben Alman', url: 'http://benalman.com/' },
1189 silly resolved     repository:
1189 silly resolved      { type: 'git',
1189 silly resolved        url: 'git://github.com/cowboy/node-findup-sync.git' },
1189 silly resolved     bugs: { url: 'https://github.com/cowboy/node-findup-sync/issues' },
1189 silly resolved     licenses: [ [Object] ],
1189 silly resolved     main: 'lib/findup-sync',
1189 silly resolved     engines: { node: '>= 0.6.0' },
1189 silly resolved     scripts: { test: 'grunt nodeunit' },
1189 silly resolved     dependencies: { glob: '~3.1.21', lodash: '~1.0.1' },
1189 silly resolved     devDependencies:
1189 silly resolved      { grunt: '~0.4.0',
1189 silly resolved        'grunt-contrib-jshint': '~0.2.0',
1189 silly resolved        'grunt-contrib-nodeunit': '~0.1.2' },
1189 silly resolved     keywords: [ 'find', 'glob', 'file' ],
1189 silly resolved     readme: '# findup-sync\n\nFind the first file matching a given pattern in the current directory or the nearest ancestor directory.\n\n## Getting Started\nInstall the module with: `npm install findup-sync`\n\n```js\nvar findup = require(\'findup-sync\');\n\n// Start looking in the CWD.\nvar filepath1 = findup(\'{a,b}*.txt\');\n\n// Start looking somewhere else, and ignore case (probably a good idea).\nvar filepath2 = findup(\'{a,b}*.txt\', {cwd: \'/some/path\', nocase: true});\n```\n\n## Usage\n\n```js\nfindup(patternOrPatterns [, minimatchOptions])\n```\n\n### patternOrPatterns\nType: `String` or `Array`  \nDefault: none\n\nOne or more wildcard glob patterns. Or just filenames.\n\n### minimatchOptions\nType: `Object`  \nDefault: `{}`\n\nOptions to be passed to [minimatch](https://github.com/isaacs/minimatch).\n\nNote that if you want to start in a different directory than the current working directory, specify a `cwd` property here.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n2013-03-08 - v0.1.2 - Updated dependencies. Fixed a Node 0.9.x bug. Updated unit tests to work cross-platform.  \n2012-11-15 - v0.1.1 - Now works without an options object.  \n2012-11-01 - v0.1.0 - Initial release.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     _id: 'findup-sync@0.1.2',
1189 silly resolved     _from: 'findup-sync@~0.1.0' },
1189 silly resolved   { name: 'hooker',
1189 silly resolved     description: 'Monkey-patch (hook) functions for debugging and stuff.',
1189 silly resolved     version: '0.2.3',
1189 silly resolved     homepage: 'http://github.com/cowboy/javascript-hooker',
1189 silly resolved     author: { name: '"Cowboy" Ben Alman', url: 'http://benalman.com/' },
1189 silly resolved     repository:
1189 silly resolved      { type: 'git',
1189 silly resolved        url: 'git://github.com/cowboy/javascript-hooker.git' },
1189 silly resolved     bugs: { url: 'https://github.com/cowboy/javascript-hooker/issues' },
1189 silly resolved     licenses: [ [Object] ],
1189 silly resolved     dependencies: {},
1189 silly resolved     devDependencies: { grunt: '~0.2.1' },
1189 silly resolved     keywords: [ 'patch', 'hook', 'function', 'debug', 'aop' ],
1189 silly resolved     engines: { node: '*' },
1189 silly resolved     main: 'lib/hooker',
1189 silly resolved     scripts: { test: 'grunt test' },
1189 silly resolved     readme: '# JavaScript Hooker\n\nMonkey-patch (hook) functions for debugging and stuff.\n\n## Getting Started\n\nThis code should work just fine in Node.js:\n\nFirst, install the module with: `npm install hooker`\n\n```javascript\nvar hooker = require(\'hooker\');\nhooker.hook(Math, "max", function() {\n  console.log(arguments.length + " arguments passed");\n});\nMath.max(5, 6, 7) // logs: "3 arguments passed", returns 7\n```\n\nOr in the browser:\n\n```html\n<script src="dist/ba-hooker.min.js"></script>\n<script>\nhook(Math, "max", function() {\n  console.log(arguments.length + " arguments passed");\n});\nMath.max(5, 6, 7) // logs: "3 arguments passed", returns 7\n</script>\n```\n\nIn the browser, you can attach Hooker\'s methods to any object.\n\n```html\n<script>\nthis.exports = Bocoup.utils;\n</script>\n<script src="dist/ba-hooker.min.js"></script>\n<script>\nBocoup.utils.hook(Math, "max", function() {\n  console.log(arguments.length + " arguments passed");\n});\nMath.max(5, 6, 7) // logs: "3 arguments passed", returns 7\n</script>\n```\n\n## Documentation\n\n### hooker.hook\nMonkey-patch (hook) one or more methods of an object.\n#### Signature:\n`hooker.hook(object, [ props, ] [options | prehookFunction])`\n#### `props`\nThe optional `props` argument can be a method name, array of method names or null. If null (or omitted), all enumerable methods of `object` will be hooked.\n#### `options`\n* `pre` - (Function) a pre-hook function to be executed before the original function. Arguments passed into the method will be passed into the pre-hook function as well.\n* `post` - (Function) a post-hook function to be executed after the original function. The original function\'s result is passed into the post-hook function as its first argument, followed by the method arguments.\n* `once` - (Boolean) if true, auto-unhook the function after the first execution.\n* `passName` - (Boolean) if true, pass the name of the method into the pre-hook function as its first arg (preceding all other arguments), and into the post-hook function as the second arg (after result but preceding all other arguments).\n\n#### Returns:\nAn array of hooked method names.\n\n### hooker.unhook\nUn-monkey-patch (unhook) one or more methods of an object.\n#### Signature:\n`hooker.unhook(object [, props ])`\n#### `props`\nThe optional `props` argument can be a method name, array of method names or null. If null (or omitted), all methods of `object` will be unhooked.\n#### Returns:\nAn array of unhooked method names.\n\n### hooker.orig\nGet a reference to the original method from a hooked function.\n#### Signature:\n`hooker.orig(object, props)`\n\n### hooker.override\nWhen a pre- or post-hook returns the result of this function, the value\npassed will be used in place of the original function\'s return value. Any\npost-hook override value will take precedence over a pre-hook override value.\n#### Signature:\n`hooker.override(value)`\n\n### hooker.preempt\nWhen a pre-hook returns the result of this function, the value passed will\nbe used in place of the original function\'s return value, and the original\nfunction will NOT be executed.\n#### Signature:\n`hooker.preempt(value)`\n\n### hooker.filter\nWhen a pre-hook returns the result of this function, the context and\narguments passed will be applied into the original function.\n#### Signature:\n`hooker.filter(context, arguments)`\n\n\n## Examples\nSee the unit tests for more examples.\n\n```javascript\nvar hooker = require(\'hooker\');\n// Simple logging.\nhooker.hook(Math, "max", function() {\n  console.log(arguments.length + " arguments passed");\n});\nMath.max(5, 6, 7) // logs: "3 arguments passed", returns 7\n\nhooker.unhook(Math, "max"); // (This is assumed between all further examples)\nMath.max(5, 6, 7) // 7\n\n// Returning hooker.override(value) overrides the original value.\nhooker.hook(Math, "max", function() {\n  if (arguments.length === 0) {\n    return hooker.override(9000);\n  }\n});\nMath.max(5, 6, 7) // 7\nMath.max() // 9000\n\n// Auto-unhook after one execution.\nhooker.hook(Math, "max", {\n  once: true,\n  pre: function() {\n    console.log("Init something here");\n  }\n});\nMath.max(5, 6, 7) // logs: "Init something here", returns 7\nMath.max(5, 6, 7) // 7\n\n// Filter `this` and arguments through a pre-hook function.\nhooker.hook(Math, "max", {\n  pre: function() {\n    var args = [].map.call(arguments, function(num) {\n      return num * 2;\n    });\n    return hooker.filter(this, args); // thisValue, arguments\n  }\n});\nMath.max(5, 6, 7) // 14\n\n// Modify the original function\'s result with a post-hook function.\nhooker.hook(Math, "max", {\n  post: function(result) {\n    return hooker.override(result * 100);\n  }\n});\nMath.max(5, 6, 7) // 700\n\n// Hook every Math method. Note: if Math\'s methods were enumerable, the second\n// argument could be omitted. Since they aren\'t, an array of properties to hook\n// must be explicitly passed. Non-method properties will be skipped.\n// See a more generic example here: http://bit.ly/vvJlrS\nhooker.hook(Math, Object.getOwnPropertyNames(Math), {\n  passName: true,\n  pre: function(name) {\n    console.log("=> Math." + name, [].slice.call(arguments, 1));\n  },\n  post: function(result, name) {\n    console.log("<= Math." + name, result);\n  }\n});\n\nvar result = Math.max(5, 6, 7);\n// => Math.max [ 5, 6, 7 ]\n// <= Math.max 7\nresult // 7\n\nresult = Math.ceil(3.456);\n// => Math.ceil [ 3.456 ]\n// <= Math.ceil 4\nresult // 4\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\n\n_Also, please don\'t edit files in the "dist" subdirectory as they are generated via grunt. You\'ll find source code in the "lib" subdirectory!_\n\n## Release History\n2012/01/09 - v0.2.3 - First official release.\n\n## License\nCopyright (c) 2012 "Cowboy" Ben Alman  \nLicensed under the MIT license.  \n<http://benalman.com/about/license/>\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     _id: 'hooker@0.2.3',
1189 silly resolved     _from: 'hooker@~0.2.3' },
1189 silly resolved   { name: 'iconv-lite',
1189 silly resolved     description: 'Convert character encodings in pure javascript.',
1189 silly resolved     version: '0.2.11',
1189 silly resolved     license: 'MIT',
1189 silly resolved     keywords: [ 'iconv', 'convert', 'charset' ],
1189 silly resolved     author: { name: 'Alexander Shtuchkin', email: 'ashtuchkin@gmail.com' },
1189 silly resolved     contributors:
1189 silly resolved      [ [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object] ],
1189 silly resolved     main: 'index.js',
1189 silly resolved     homepage: 'https://github.com/ashtuchkin/iconv-lite',
1189 silly resolved     repository:
1189 silly resolved      { type: 'git',
1189 silly resolved        url: 'git://github.com/ashtuchkin/iconv-lite.git' },
1189 silly resolved     engines: { node: '>=0.4.0' },
1189 silly resolved     scripts: { test: 'vows --spec' },
1189 silly resolved     devDependencies: { vows: '', iconv: '>=1.1' },
1189 silly resolved     readme: 'iconv-lite - pure javascript character encoding conversion\n======================================================================\n\n[![Build Status](https://secure.travis-ci.org/ashtuchkin/iconv-lite.png?branch=master)](http://travis-ci.org/ashtuchkin/iconv-lite)\n\n## Features\n\n*   Pure javascript. Doesn\'t need native code compilation.\n*   Easy API.\n*   Works on Windows and in sandboxed environments like [Cloud9](http://c9.io).\n*   Encoding is much faster than node-iconv (see below for performance comparison).\n\n## Usage\n\n    var iconv = require(\'iconv-lite\');\n    \n    // Convert from an encoded buffer to string.\n    str = iconv.decode(buf, \'win1251\');\n    \n    // Convert from string to an encoded buffer.\n    buf = iconv.encode("Sample input string", \'win1251\');\n\n    // Check if encoding is supported\n    iconv.encodingExists("us-ascii")\n\n\n## Supported encodings\n\n*   All node.js native encodings: \'utf8\', \'ucs2\', \'ascii\', \'binary\', \'base64\'\n*   All widespread single byte encodings: Windows 125x family, ISO-8859 family, \n    IBM/DOS codepages, Macintosh family, KOI8 family. \n    Aliases like \'latin1\', \'us-ascii\' also supported.\n*   Multibyte encodings: \'gbk\', \'gb2313\', \'Big5\', \'cp950\'.\n\nOthers are easy to add, see the source. Please, participate.\nMost encodings are generated from node-iconv. Thank you Ben Noordhuis and iconv authors!\n\nNot supported yet: EUC family, Shift_JIS.\n\n\n## Encoding/decoding speed\n\nComparison with node-iconv module (1000x256kb, on Ubuntu 12.04, Core i5/2.5 GHz, Node v0.8.7). \nNote: your results may vary, so please always check on your hardware.\n\n    operation             iconv@1.2.4   iconv-lite@0.2.4 \n    ----------------------------------------------------------\n    encode(\'win1251\')     ~115 Mb/s     ~230 Mb/s\n    decode(\'win1251\')     ~95 Mb/s      ~130 Mb/s\n\n\n## Notes\n\nWhen decoding, a \'binary\'-encoded string can be used as a source buffer.  \nUntranslatable characters are set to � or ?. No transliteration is currently supported, pull requests are welcome.\n\n## Testing\n\n    git clone git@github.com:ashtuchkin/iconv-lite.git\n    cd iconv-lite\n    npm install\n    npm test\n    \n    # To view performance:\n    node test/performance.js\n\n## TODO\n\n*   Support streaming character conversion, something like util.pipe(req, iconv.fromEncodingStream(\'latin1\')).\n*   Add more encodings.\n*   Add transliteration (best fit char).\n*   Add tests and correct support of variable-byte encodings (currently work is delegated to node).\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/ashtuchkin/iconv-lite/issues' },
1189 silly resolved     _id: 'iconv-lite@0.2.11',
1189 silly resolved     _from: 'iconv-lite@~0.2.5' },
1189 silly resolved   { author:
1189 silly resolved      { name: 'Isaac Z. Schlueter',
1189 silly resolved        email: 'i@izs.me',
1189 silly resolved        url: 'http://blog.izs.me/' },
1189 silly resolved     name: 'glob',
1189 silly resolved     description: 'a little globber',
1189 silly resolved     version: '3.1.21',
1189 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/node-glob.git' },
1189 silly resolved     main: 'glob.js',
1189 silly resolved     engines: { node: '*' },
1189 silly resolved     dependencies: { minimatch: '~0.2.11', 'graceful-fs': '~1.2.0', inherits: '1' },
1189 silly resolved     devDependencies: { tap: '~0.4.0', mkdirp: '0', rimraf: '1' },
1189 silly resolved     scripts: { test: 'tap test/*.js' },
1189 silly resolved     license: 'BSD',
1189 silly resolved     readme: '# Glob\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n## Attention: node-glob users!\n\nThe API has changed dramatically between 2.x and 3.x. This library is\nnow 100% JavaScript, and the integer flags have been replaced with an\noptions object.\n\nAlso, there\'s an event emitter class, proper tests, and all the other\nthings you\'ve come to expect from node modules.\n\nAnd best of all, no compilation!\n\n## Usage\n\n```javascript\nvar glob = require("glob")\n\n// options is optional\nglob("**/*.js", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is ["**/*.js"]\n  // er is an error object or null.\n})\n```\n\n## Features\n\nPlease see the [minimatch\ndocumentation](https://github.com/isaacs/minimatch) for more details.\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* "Globstar" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob(pattern, [options], cb)\n\n* `pattern` {String} Pattern to be matched\n* `options` {Object}\n* `cb` {Function}\n  * `err` {Error | null}\n  * `matches` {Array<String>} filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options]\n\n* `pattern` {String} Pattern to be matched\n* `options` {Object}\n* return: {Array<String>} filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instanting the `glob.Glob` class.\n\n```javascript\nvar Glob = require("glob").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt\'s an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` {String} pattern to search for\n* `options` {Object}\n* `cb` {Function} Called when an error occurs, or matches are found\n  * `err` {Error | null}\n  * `matches` {Array<String>} filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `error` The error encountered.  When an error is encountered, the\n  glob object is in an undefined state, and should be discarded.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the matched.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `abort` Stop the search.\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the glob object, as well.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, "/")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `nomount` By default, a pattern starting with a forward-slash will be\n  "mounted" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don\'t sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.  It will cause\n  ELOOP to be triggered one level sooner in the case of cyclical\n  symbolic links.\n* `silent` When an unusual error is encountered\n  when attempting to read a directory, a warning will be printed to\n  stderr.  Set the `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered\n  when attempting to read a directory, the process will just continue on\n  in search of other matches.  Set the `strict` option to raise an error\n  in these cases.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary to\n  set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See "Race Conditions" below.)\n* `sync` Perform a synchronous glob search.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.\n  Set this flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `nocase` Perform a case-insensitive match.  Note that case-insensitive\n  filesystems will sometimes result in glob returning results that are\n  case-insensitively matched anyway, since readdir and stat will not\n  raise an error.\n* `debug` Set to enable debug logging in minimatch and glob.\n* `globDebug` Set to enable debug logging in glob, but not minimatch.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.  **Note that this is different from the way that `**` is\nhandled by ruby\'s `Dir` class.**\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], "\\\\*a\\\\?")` will return `"\\\\*a\\\\?"` rather than\n`"*a?"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the statCache object is reused between glob calls.\n\nUsers are thus advised not to use a glob result as a\nguarantee of filesystem state in the face of rapid changes.\nFor the vast majority of operations, this is never a problem.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/isaacs/node-glob/issues' },
1189 silly resolved     homepage: 'https://github.com/isaacs/node-glob',
1189 silly resolved     _id: 'glob@3.1.21',
1189 silly resolved     _from: 'glob@~3.1.21' },
1189 silly resolved   { author:
1189 silly resolved      { name: 'Isaac Z. Schlueter',
1189 silly resolved        email: 'i@izs.me',
1189 silly resolved        url: 'http://blog.izs.me' },
1189 silly resolved     name: 'minimatch',
1189 silly resolved     description: 'a glob matcher in javascript',
1189 silly resolved     version: '0.2.12',
1189 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/minimatch.git' },
1189 silly resolved     main: 'minimatch.js',
1189 silly resolved     scripts: { test: 'tap test' },
1189 silly resolved     engines: { node: '*' },
1189 silly resolved     dependencies: { 'lru-cache': '2', sigmund: '~1.0.0' },
1189 silly resolved     devDependencies: { tap: '' },
1189 silly resolved     license:
1189 silly resolved      { type: 'MIT',
1189 silly resolved        url: 'http://github.com/isaacs/minimatch/raw/master/LICENSE' },
1189 silly resolved     readme: '# minimatch\n\nA minimal matching utility.\n\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\n\n\nThis is the matching library used internally by npm.\n\nEventually, it will replace the C binding in node-glob.\n\nIt works by converting glob expressions into JavaScript `RegExp`\nobjects.\n\n## Usage\n\n```javascript\nvar minimatch = require("minimatch")\n\nminimatch("bar.foo", "*.foo") // true!\nminimatch("bar.foo", "*.bar") // false!\n```\n\n## Features\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* "Globstar" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n\n### Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between minimatch and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.  **Note that this is different from the way that `**` is\nhandled by ruby\'s `Dir` class.**\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen minimatch.match returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`minimatch.match([], "\\\\*a\\\\?")` will return `"\\\\*a\\\\?"` rather than\n`"*a?"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n\n## Minimatch Class\n\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\n\n```javascript\nvar Minimatch = require("minimatch").Minimatch\nvar mm = new Minimatch(pattern, options)\n```\n\n### Properties\n\n* `pattern` The original pattern the minimatch object represents.\n* `options` The options supplied to the constructor.\n* `set` A 2-dimensional array of regexp or string expressions.\n  Each row in the\n  array corresponds to a brace-expanded pattern.  Each item in the row\n  corresponds to a single path-part.  For example, the pattern\n  `{a,b/c}/d` would expand to a set of patterns like:\n\n        [ [ a, d ]\n        , [ b, c, d ] ]\n\n    If a portion of the pattern doesn\'t have any "magic" in it\n    (that is, it\'s something like `"foo"` rather than `fo*o?`), then it\n    will be left as a string rather than converted to a regular\n    expression.\n\n* `regexp` Created by the `makeRe` method.  A single regular expression\n  expressing the entire pattern.  This is useful in cases where you wish\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\n* `negate` True if the pattern is negated.\n* `comment` True if the pattern is a comment.\n* `empty` True if the pattern is `""`.\n\n### Methods\n\n* `makeRe` Generate the `regexp` member if necessary, and return it.\n  Will return `false` if the pattern is invalid.\n* `match(fname)` Return true if the filename matches the pattern, or\n  false otherwise.\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n  filename, and match it against a single row in the `regExpSet`.  This\n  method is mainly for internal use, but is exposed so that it can be\n  used by a glob-walker that needs to avoid excessive filesystem calls.\n\nAll other methods are internal, and will be called as necessary.\n\n## Functions\n\nThe top-level exported function has a `cache` property, which is an LRU\ncache set to store 100 items.  So, calling these methods repeatedly\nwith the same pattern and options will use the same Minimatch object,\nsaving the cost of parsing it multiple times.\n\n### minimatch(path, pattern, options)\n\nMain export.  Tests a path against the pattern using the options.\n\n```javascript\nvar isJS = minimatch(file, "*.js", { matchBase: true })\n```\n\n### minimatch.filter(pattern, options)\n\nReturns a function that tests its\nsupplied argument, suitable for use with `Array.filter`.  Example:\n\n```javascript\nvar javascripts = fileList.filter(minimatch.filter("*.js", {matchBase: true}))\n```\n\n### minimatch.match(list, pattern, options)\n\nMatch against the list of\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.\n\n```javascript\nvar javascripts = minimatch.match(fileList, "*.js", {matchBase: true}))\n```\n\n### minimatch.makeRe(pattern, options)\n\nMake a regular expression object from the pattern.\n\n## Options\n\nAll options are `false` by default.\n\n### debug\n\nDump a ton of stuff to stderr.\n\n### nobrace\n\nDo not expand `{a,b}` and `{1..3}` brace sets.\n\n### noglobstar\n\nDisable `**` matching against multiple folder names.\n\n### dot\n\nAllow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.\n\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\nis set.\n\n### noext\n\nDisable "extglob" style patterns like `+(a|b)`.\n\n### nocase\n\nPerform a case-insensitive match.\n\n### nonull\n\nWhen a match is not found by `minimatch.match`, return a list containing\nthe pattern itself.  When set, an empty list is returned if there are\nno matches.\n\n### matchBase\n\nIf set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes.  For example,\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n### nocomment\n\nSuppress the behavior of treating `#` at the start of a pattern as a\ncomment.\n\n### nonegate\n\nSuppress the behavior of treating a leading `!` character as negation.\n\n### flipNegate\n\nReturns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/isaacs/minimatch/issues' },
1189 silly resolved     homepage: 'https://github.com/isaacs/minimatch',
1189 silly resolved     _id: 'minimatch@0.2.12',
1189 silly resolved     _from: 'minimatch@~0.2.6' },
1189 silly resolved   { name: 'nopt',
1189 silly resolved     version: '1.0.10',
1189 silly resolved     description: 'Option parsing for Node, supporting types, shorthands, etc. Used by npm.',
1189 silly resolved     author:
1189 silly resolved      { name: 'Isaac Z. Schlueter',
1189 silly resolved        email: 'i@izs.me',
1189 silly resolved        url: 'http://blog.izs.me/' },
1189 silly resolved     main: 'lib/nopt.js',
1189 silly resolved     scripts: { test: 'node lib/nopt.js' },
1189 silly resolved     repository: { type: 'git', url: 'http://github.com/isaacs/nopt' },
1189 silly resolved     bin: { nopt: './bin/nopt.js' },
1189 silly resolved     license:
1189 silly resolved      { type: 'MIT',
1189 silly resolved        url: 'https://github.com/isaacs/nopt/raw/master/LICENSE' },
1189 silly resolved     dependencies: { abbrev: '1' },
1189 silly resolved     readme: 'If you want to write an option parser, and have it be good, there are\ntwo ways to do it.  The Right Way, and the Wrong Way.\n\nThe Wrong Way is to sit down and write an option parser.  We\'ve all done\nthat.\n\nThe Right Way is to write some complex configurable program with so many\noptions that you go half-insane just trying to manage them all, and put\nit off with duct-tape solutions until you see exactly to the core of the\nproblem, and finally snap and write an awesome option parser.\n\nIf you want to write an option parser, don\'t write an option parser.\nWrite a package manager, or a source control system, or a service\nrestarter, or an operating system.  You probably won\'t end up with a\ngood one of those, but if you don\'t give up, and you are relentless and\ndiligent enough in your procrastination, you may just end up with a very\nnice option parser.\n\n## USAGE\n\n    // my-program.js\n    var nopt = require("nopt")\n      , Stream = require("stream").Stream\n      , path = require("path")\n      , knownOpts = { "foo" : [String, null]\n                    , "bar" : [Stream, Number]\n                    , "baz" : path\n                    , "bloo" : [ "big", "medium", "small" ]\n                    , "flag" : Boolean\n                    , "pick" : Boolean\n                    , "many" : [String, Array]\n                    }\n      , shortHands = { "foofoo" : ["--foo", "Mr. Foo"]\n                     , "b7" : ["--bar", "7"]\n                     , "m" : ["--bloo", "medium"]\n                     , "p" : ["--pick"]\n                     , "f" : ["--flag"]\n                     }\n                 // everything is optional.\n                 // knownOpts and shorthands default to {}\n                 // arg list defaults to process.argv\n                 // slice defaults to 2\n      , parsed = nopt(knownOpts, shortHands, process.argv, 2)\n    console.log(parsed)\n\nThis would give you support for any of the following:\n\n```bash\n$ node my-program.js --foo "blerp" --no-flag\n{ "foo" : "blerp", "flag" : false }\n\n$ node my-program.js ---bar 7 --foo "Mr. Hand" --flag\n{ bar: 7, foo: "Mr. Hand", flag: true }\n\n$ node my-program.js --foo "blerp" -f -----p\n{ foo: "blerp", flag: true, pick: true }\n\n$ node my-program.js -fp --foofoo\n{ foo: "Mr. Foo", flag: true, pick: true }\n\n$ node my-program.js --foofoo -- -fp  # -- stops the flag parsing.\n{ foo: "Mr. Foo", argv: { remain: ["-fp"] } }\n\n$ node my-program.js --blatzk 1000 -fp # unknown opts are ok.\n{ blatzk: 1000, flag: true, pick: true }\n\n$ node my-program.js --blatzk true -fp # but they need a value\n{ blatzk: true, flag: true, pick: true }\n\n$ node my-program.js --no-blatzk -fp # unless they start with "no-"\n{ blatzk: false, flag: true, pick: true }\n\n$ node my-program.js --baz b/a/z # known paths are resolved.\n{ baz: "/Users/isaacs/b/a/z" }\n\n# if Array is one of the types, then it can take many\n# values, and will always be an array.  The other types provided\n# specify what types are allowed in the list.\n\n$ node my-program.js --many 1 --many null --many foo\n{ many: ["1", "null", "foo"] }\n\n$ node my-program.js --many foo\n{ many: ["foo"] }\n```\n\nRead the tests at the bottom of `lib/nopt.js` for more examples of\nwhat this puppy can do.\n\n## Types\n\nThe following types are supported, and defined on `nopt.typeDefs`\n\n* String: A normal string.  No parsing is done.\n* path: A file system path.  Gets resolved against cwd if not absolute.\n* url: A url.  If it doesn\'t parse, it isn\'t accepted.\n* Number: Must be numeric.\n* Date: Must parse as a date. If it does, and `Date` is one of the options,\n  then it will return a Date object, not a string.\n* Boolean: Must be either `true` or `false`.  If an option is a boolean,\n  then it does not need a value, and its presence will imply `true` as\n  the value.  To negate boolean flags, do `--no-whatever` or `--whatever\n  false`\n* NaN: Means that the option is strictly not allowed.  Any value will\n  fail.\n* Stream: An object matching the "Stream" class in node.  Valuable\n  for use when validating programmatically.  (npm uses this to let you\n  supply any WriteStream on the `outfd` and `logfd` config options.)\n* Array: If `Array` is specified as one of the types, then the value\n  will be parsed as a list of options.  This means that multiple values\n  can be specified, and that the value will always be an array.\n\nIf a type is an array of values not on this list, then those are\nconsidered valid values.  For instance, in the example above, the\n`--bloo` option can only be one of `"big"`, `"medium"`, or `"small"`,\nand any other value will be rejected.\n\nWhen parsing unknown fields, `"true"`, `"false"`, and `"null"` will be\ninterpreted as their JavaScript equivalents, and numeric values will be\ninterpreted as a number.\n\nYou can also mix types and values, or multiple types, in a list.  For\ninstance `{ blah: [Number, null] }` would allow a value to be set to\neither a Number or null.\n\nTo define a new type, add it to `nopt.typeDefs`.  Each item in that\nhash is an object with a `type` member and a `validate` method.  The\n`type` member is an object that matches what goes in the type list.  The\n`validate` method is a function that gets called with `validate(data,\nkey, val)`.  Validate methods should assign `data[key]` to the valid\nvalue of `val` if it can be handled properly, or return boolean\n`false` if it cannot.\n\nYou can also call `nopt.clean(data, types, typeDefs)` to clean up a\nconfig object and remove its invalid properties.\n\n## Error Handling\n\nBy default, nopt outputs a warning to standard error when invalid\noptions are found.  You can change this behavior by assigning a method\nto `nopt.invalidHandler`.  This method will be called with\nthe offending `nopt.invalidHandler(key, val, types)`.\n\nIf no `nopt.invalidHandler` is assigned, then it will console.error\nits whining.  If it is assigned to boolean `false` then the warning is\nsuppressed.\n\n## Abbreviations\n\nYes, they are supported.  If you define options like this:\n\n```javascript\n{ "foolhardyelephants" : Boolean\n, "pileofmonkeys" : Boolean }\n```\n\nThen this will work:\n\n```bash\nnode program.js --foolhar --pil\nnode program.js --no-f --pileofmon\n# etc.\n```\n\n## Shorthands\n\nShorthands are a hash of shorter option names to a snippet of args that\nthey expand to.\n\nIf multiple one-character shorthands are all combined, and the\ncombination does not unambiguously match any other option or shorthand,\nthen they will be broken up into their constituent parts.  For example:\n\n```json\n{ "s" : ["--loglevel", "silent"]\n, "g" : "--global"\n, "f" : "--force"\n, "p" : "--parseable"\n, "l" : "--long"\n}\n```\n\n```bash\nnpm ls -sgflp\n# just like doing this:\nnpm ls --loglevel silent --global --force --long --parseable\n```\n\n## The Rest of the args\n\nThe config object returned by nopt is given a special member called\n`argv`, which is an object with the following fields:\n\n* `remain`: The remaining args after all the parsing has occurred.\n* `original`: The args as they originally appeared.\n* `cooked`: The args after flags and shorthands are expanded.\n\n## Slicing\n\nNode programs are called with more or less the exact argv as it appears\nin C land, after the v8 and node-specific options have been plucked off.\nAs such, `argv[0]` is always `node` and `argv[1]` is always the\nJavaScript program being run.\n\nThat\'s usually not very useful to you.  So they\'re sliced off by\ndefault.  If you want them, then you can pass in `0` as the last\nargument, or any other number that you\'d like to slice off the start of\nthe list.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/isaacs/nopt/issues' },
1189 silly resolved     homepage: 'https://github.com/isaacs/nopt',
1189 silly resolved     _id: 'nopt@1.0.10',
1189 silly resolved     _from: 'nopt@~1.0.10' },
1189 silly resolved   { name: 'rimraf',
1189 silly resolved     version: '2.0.3',
1189 silly resolved     main: 'rimraf.js',
1189 silly resolved     description: 'A deep deletion module for node (like `rm -rf`)',
1189 silly resolved     author:
1189 silly resolved      { name: 'Isaac Z. Schlueter',
1189 silly resolved        email: 'i@izs.me',
1189 silly resolved        url: 'http://blog.izs.me/' },
1189 silly resolved     license:
1189 silly resolved      { type: 'MIT',
1189 silly resolved        url: 'https://github.com/isaacs/rimraf/raw/master/LICENSE' },
1189 silly resolved     optionalDependencies: { 'graceful-fs': '~1.1' },
1189 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/rimraf.git' },
1189 silly resolved     scripts: { test: 'cd test && bash run.sh' },
1189 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
1189 silly resolved     readme: 'A `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, callback)`\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* `EBUSY` -  rimraf will back off a maximum of opts.maxBusyTries times\n  before giving up.\n* `EMFILE` - If too many file descriptors get opened, rimraf will\n  patiently wait until more become available.\n\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that\'s not so good.  Use\nthe async API.  It\'s better.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/isaacs/rimraf/issues' },
1189 silly resolved     homepage: 'https://github.com/isaacs/rimraf',
1189 silly resolved     dependencies: { 'graceful-fs': '~1.1' },
1189 silly resolved     _id: 'rimraf@2.0.3',
1189 silly resolved     _from: 'rimraf@~2.0.2' },
1189 silly resolved   { name: 'lodash',
1189 silly resolved     version: '0.9.2',
1189 silly resolved     description: 'A utility library delivering consistency, customization, performance, and extras.',
1189 silly resolved     homepage: 'http://lodash.com',
1189 silly resolved     license: 'MIT',
1189 silly resolved     main: './lodash.js',
1189 silly resolved     keywords:
1189 silly resolved      [ 'browser',
1189 silly resolved        'client',
1189 silly resolved        'functional',
1189 silly resolved        'performance',
1189 silly resolved        'server',
1189 silly resolved        'speed',
1189 silly resolved        'util' ],
1189 silly resolved     author:
1189 silly resolved      { name: 'John-David Dalton',
1189 silly resolved        email: 'john.david.dalton@gmail.com',
1189 silly resolved        url: 'http://allyoucanleet.com/' },
1189 silly resolved     contributors: [ [Object], [Object], [Object], [Object] ],
1189 silly resolved     bugs: { url: 'https://github.com/lodash/lodash/issues' },
1189 silly resolved     repository: { type: 'git', url: 'https://github.com/lodash/lodash.git' },
1189 silly resolved     engines: [ 'node', 'rhino' ],
1189 silly resolved     jam: { main: './lodash.js' },
1189 silly resolved     readme: '# Lo-Dash v0.9.2\n\nA utility library delivering consistency, [customization](http://lodash.com/custom-builds), [performance](http://lodash.com/benchmarks), & [extras](http://lodash.com/#features).\n\n## Download\n\n * [Development build](https://raw.github.com/lodash/lodash/0.9.2/lodash.js)\n * [Production build](https://raw.github.com/lodash/lodash/0.9.2/lodash.min.js)\n * [Underscore build](https://raw.github.com/lodash/lodash/0.9.2/lodash.underscore.min.js) tailored for projects already using Underscore\n * CDN copies of ≤ v0.9.2’s [Production](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/0.9.2/lodash.min.js), [Underscore](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/0.9.2/lodash.underscore.min.js), and [Development](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/0.9.2/lodash.js) builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/)\n * For optimal file size, [create a custom build](http://lodash.com/custom-builds) with only the features you need\n\n## Dive in\n\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\n\nCreate your own benchmarks at [jsPerf](http://jsperf.com), or [search](http://jsperf.com/search?q=lodash) for existing ones.\n\nFor a list of upcoming features, check out our [roadmap](https://github.com/lodash/lodash/wiki/Roadmap).\n\n## Screencasts\n\nFor more information check out these screencasts over Lo-Dash:\n\n * [Introducing Lo-Dash](https://vimeo.com/44154599)\n * [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\n * [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\n * [Unit testing in Lo-Dash](https://vimeo.com/45865290)\n * [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\n\n## Features\n\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\n * [_.clone](http://lodash.com/docs#clone) supports *“deep”* cloning\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\n * [_.lateBind](http://lodash.com/docs#lateBind) for late binding\n * [_.merge](http://lodash.com/docs#merge) for a *“deep”* [_.extend](http://lodash.com/docs#extend)\n * [_.partial](http://lodash.com/docs#partial) for partial application without `this` binding\n * [_.pick](http://lodash.com/docs#pick) and [_.omit](http://lodash.com/docs#omit) accepts `callback` and `thisArg` arguments\n * [_.template](http://lodash.com/docs#template) supports [ES6 delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6) and utilizes [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl) for easier debugging\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\n   [and more…](http://lodash.com/docs "_.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where") accept strings\n\n## Support\n\nLo-Dash has been tested in at least Chrome 5~23, Firefox 1~16, IE 6-10, Opera 9.25-12, Safari 3-6, Node.js 0.4.8-0.8.14, Narwhal 0.3.2, RingoJS 0.8, and Rhino 1.7RC5.\n\n## Installation and usage\n\nIn browsers:\n\n```html\n<script src="lodash.js"></script>\n```\n\nUsing [npm](http://npmjs.org/):\n\n```bash\nnpm install lodash\n\nnpm install -g lodash\nnpm link lodash\n```\n\nIn [Node.js](http://nodejs.org/) and [RingoJS v0.8.0+](http://ringojs.org/):\n\n```js\nvar _ = require(\'lodash\');\n```\n\n**Note:** If Lo-Dash is installed globally, [run `npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n\nIn [RingoJS v0.7.0-](http://ringojs.org/):\n\n```js\nvar _ = require(\'lodash\')._;\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload(\'lodash.js\');\n```\n\nIn an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire({\n  \'paths\': {\n    \'underscore\': \'path/to/lodash\'\n  }\n},\n[\'underscore\'], function(_) {\n  console.log(_.VERSION);\n});\n```\n\n## Resolved Underscore.js issues\n\n * Allow iteration of objects with a `length` property [[#799](https://github.com/documentcloud/underscore/pull/799), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L545-551)]\n * Fix cross-browser object iteration bugs [[#60](https://github.com/documentcloud/underscore/issues/60), [#376](https://github.com/documentcloud/underscore/issues/376), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L558-582)]\n * Methods should work on pages with incorrectly shimmed native methods [[#7](https://github.com/documentcloud/underscore/issues/7), [#742](https://github.com/documentcloud/underscore/issues/742), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L140-146)]\n * `_.isEmpty` should support jQuery/MooTools DOM query collections [[#690](https://github.com/documentcloud/underscore/pull/690), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L747-752)]\n * `_.isObject` should avoid V8 bug [#2291](http://code.google.com/p/8/issues/detail?id=2291) [[#605](https://github.com/documentcloud/underscore/issues/605), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L828-840)]\n * `_.keys` should work with `arguments` objects cross-browser [[#396](https://github.com/documentcloud/underscore/issues/396), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L921-923)]\n * `_.range` should coerce arguments to numbers [[#634](https://github.com/documentcloud/underscore/issues/634), [#683](https://github.com/documentcloud/underscore/issues/683), [test](https://github.com/lodash/lodash/blob/0.9.2/test/test.js#L1337-1340)]\n\n## Release Notes\n\n### <sup>v0.9.2</sup>\n\n * Added `fromIndex` argument to `_.contains`\n * Added `moduleId` build option\n * Added Closure Compiler *“simple”* optimizations to the build process\n * Added support for strings in `_.max` and `_.min`\n * Added support for ES6 template delimiters to `_.template`\n * Ensured re-minification of Lo-Dash by third parties avoids Closure Compiler bugs\n * Optimized `_.every`, `_.find`, `_.some`, and `_.uniq`\n\nThe full changelog is available [here](https://github.com/lodash/lodash/wiki/Changelog).\n\n## BestieJS\n\nLo-Dash is part of the [BestieJS](https://github.com/bestiejs)  *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5 precedents, unit testing, and plenty of documentation.\n\n## Author\n\n| [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](http://twitter.com/jdalton "Follow @jdalton on Twitter") |\n|---|\n| [John-David Dalton](http://allyoucanleet.com/) |\n\n## Contributors\n\n| [![twitter/blainebublitz](http://gravatar.com/avatar/ac1c67fd906c9fecd823ce302283b4c1?s=70)](http://twitter.com/blainebublitz "Follow @BlaineBublitz on Twitter") | [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge "Follow @kitcambridge on Twitter") | [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias "Follow @mathias on Twitter") |\n|---|---|---|\n| [Blaine Bublitz](http://iceddev.com/) | [Kit Cambridge](http://kitcambridge.github.io/) | [Mathias Bynens](http://mathiasbynens.be/) |\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     _id: 'lodash@0.9.2',
1189 silly resolved     _from: 'lodash@~0.9.0' },
1189 silly resolved   { author:
1189 silly resolved      { name: 'Isaac Z. Schlueter',
1189 silly resolved        email: 'i@izs.me',
1189 silly resolved        url: 'http://blog.izs.me' },
1189 silly resolved     name: 'which',
1189 silly resolved     description: 'Like which(1) unix command. Find the first instance of an executable in the PATH.',
1189 silly resolved     version: '1.0.5',
1189 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/node-which.git' },
1189 silly resolved     main: 'which.js',
1189 silly resolved     bin: { which: './bin/which' },
1189 silly resolved     engines: { node: '*' },
1189 silly resolved     dependencies: {},
1189 silly resolved     devDependencies: {},
1189 silly resolved     readme: 'The "which" util from npm\'s guts.\n\nFinds the first instance of a specified executable in the PATH\nenvironment variable.  Does not cache the results, so `hash -r` is not\nneeded when the PATH changes.\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     bugs: { url: 'https://github.com/isaacs/node-which/issues' },
1189 silly resolved     homepage: 'https://github.com/isaacs/node-which',
1189 silly resolved     _id: 'which@1.0.5',
1189 silly resolved     _from: 'which@~1.0.5' },
1189 silly resolved   { name: 'underscore.string',
1189 silly resolved     version: '2.2.1',
1189 silly resolved     description: 'String manipulation extensions for Underscore.js javascript library.',
1189 silly resolved     homepage: 'http://epeli.github.com/underscore.string/',
1189 silly resolved     contributors:
1189 silly resolved      [ [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object],
1189 silly resolved        [Object] ],
1189 silly resolved     keywords: [ 'underscore', 'string' ],
1189 silly resolved     main: './lib/underscore.string',
1189 silly resolved     directories: { lib: './lib' },
1189 silly resolved     engines: { node: '*' },
1189 silly resolved     repository:
1189 silly resolved      { type: 'git',
1189 silly resolved        url: 'https://github.com/epeli/underscore.string.git' },
1189 silly resolved     bugs: { url: 'https://github.com/epeli/underscore.string/issues' },
1189 silly resolved     licenses: [ [Object] ],
1189 silly resolved     readme: '# Underscore.string [![Build Status](https://secure.travis-ci.org/epeli/underscore.string.png?branch=master)](http://travis-ci.org/epeli/underscore.string) #\n\n\n\nJavascript lacks complete string manipulation operations.\nThis an attempt to fill that gap. List of build-in methods can be found\nfor example from [Dive Into JavaScript][d].\n\n[d]: http://www.diveintojavascript.com/core-javascript-reference/the-string-object\n\n\nAs name states this an extension for [Underscore.js][u], but it can be used\nindependently from **_s**-global variable. But with Underscore.js you can\nuse Object-Oriented style and chaining:\n\n[u]: http://documentcloud.github.com/underscore/\n\n```javascript\n_("   epeli  ").chain().trim().capitalize().value()\n=> "Epeli"\n```\n\n## Download ##\n\n  * [Development version](https://raw.github.com/epeli/underscore.string/master/lib/underscore.string.js) *Uncompressed with Comments 18kb*\n  * [Production version](https://github.com/epeli/underscore.string/raw/master/dist/underscore.string.min.js) *Minified 7kb*\n\n\n## Node.js installation ##\n\n**npm package**\n\n    npm install underscore.string\n\n**Standalone usage**:\n\n```javascript\nvar _s = require(\'underscore.string\');\n```\n\n**Integrate with Underscore.js**:\n\n```javascript\nvar _  = require(\'underscore\');\n\n// Import Underscore.string to separate object, because there are conflict functions (include, reverse, contains)\n_.str = require(\'underscore.string\');\n\n// Mix in non-conflict functions to Underscore namespace if you want\n_.mixin(_.str.exports());\n\n// All functions, include conflict, will be available through _.str object\n_.str.include(\'Underscore.string\', \'string\'); // => true\n```\n\n## String Functions ##\n\nFor availability of functions in this way you need to mix in Underscore.string functions:\n\n```javascript\n_.mixin(_.string.exports());\n```\n\notherwise functions from examples will be available through _.string or _.str objects:\n\n```javascript\n_.str.capitalize(\'epeli\')\n=> "Epeli"\n```\n\n**capitalize** _.capitalize(string)\n\nConverts first letter of the string to uppercase.\n\n```javascript\n_.capitalize("foo Bar")\n=> "Foo Bar"\n```\n\n**chop** _.chop(string, step)\n\n```javascript\n_.chop(\'whitespace\', 3)\n=> [\'whi\',\'tes\',\'pac\',\'e\']\n```\n\n**clean** _.clean(str)\n\nCompress some whitespaces to one.\n\n```javascript\n_.clean(" foo    bar   ")\n=> \'foo bar\'\n```\n\n**chars** _.chars(str)\n\n```javascript\n_.chars(\'Hello\')\n=> [\'H\',\'e\',\'l\',\'l\',\'o\']\n```\n\n**includes** _.includes(string, substring)\n\nTests if string contains a substring.\n\n```javascript\n_.includes("foobar", "ob")\n=> true\n```\n\n**include** available only through _.str object, because Underscore has function with the same name.\n\n```javascript\n_.str.include("foobar", "ob")\n=> true\n```\n\n**includes** function was removed\n\nBut you can create it in this way, for compatibility with previous versions:\n\n```javascript\n_.includes = _.str.include\n```\n\n**count** _.count(string, substring)\n\n```javascript\n_(\'Hello world\').count(\'l\')\n=> 3\n```\n\n**escapeHTML** _.escapeHTML(string)\n\nConverts HTML special characters to their entity equivalents.\n\n```javascript\n_(\'<div>Blah blah blah</div>\').escapeHTML();\n=> \'&lt;div&gt;Blah blah blah&lt;/div&gt;\'\n```\n\n**unescapeHTML** _.unescapeHTML(string)\n\nConverts entity characters to HTML equivalents.\n\n```javascript\n_(\'&lt;div&gt;Blah blah blah&lt;/div&gt;\').unescapeHTML();\n=> \'<div>Blah blah blah</div>\'\n```\n\n**insert** _.insert(string, index, substing)\n\n```javascript\n_(\'Hello \').insert(6, \'world\')\n=> \'Hello world\'\n```\n\n**isBlank** _.isBlank(string)\n\n```javascript\n_(\'\').isBlank(); // => true\n_(\'\\n\').isBlank(); // => true\n_(\' \').isBlank(); // => true\n_(\'a\').isBlank(); // => false\n```\n\n**join** _.join(separator, *strings)\n\nJoins strings together with given separator\n\n```javascript\n_.join(" ", "foo", "bar")\n=> "foo bar"\n```\n\n**lines** _.lines(str)\n\n```javascript\n_.lines("Hello\\nWorld")\n=> ["Hello", "World"]\n```\n\n**reverse** available only through _.str object, because Underscore has function with the same name.\n\nReturn reversed string:\n\n```javascript\n_.str.reverse("foobar")\n=> \'raboof\'\n```\n\n**splice**  _.splice(string, index, howmany, substring)\n\nLike a array splice.\n\n```javascript\n_(\'https://edtsech@bitbucket.org/edtsech/underscore.strings\').splice(30, 7, \'epeli\')\n=> \'https://edtsech@bitbucket.org/epeli/underscore.strings\'\n```\n\n**startsWith** _.startsWith(string, starts)\n\nThis method checks whether string starts with starts.\n\n```javascript\n_("image.gif").startsWith("image")\n=> true\n```\n\n**endsWith** _.endsWith(string, ends)\n\nThis method checks whether string ends with ends.\n\n```javascript\n_("image.gif").endsWith("gif")\n=> true\n```\n\n**succ**  _.succ(str)\n\nReturns the successor to str.\n\n```javascript\n_(\'a\').succ()\n=> \'b\'\n\n_(\'A\').succ()\n=> \'B\'\n```\n\n**supplant**\n\nSupplant function was removed, use Underscore.js [template function][p].\n\n[p]: http://documentcloud.github.com/underscore/#template\n\n**strip** alias for *trim*\n\n**lstrip** alias for *ltrim*\n\n**rstrip** alias for *rtrim*\n\n**titleize** _.titleize(string)\n\n```javascript\n_(\'my name is epeli\').titleize()\n=> \'My Name Is Epeli\'\n```\n\n**camelize** _.camelize(string)\n\nConverts underscored or dasherized string to a camelized one\n\n```javascript\n_(\'-moz-transform\').camelize()\n=> \'MozTransform\'\n```\n\n**classify** _.classify(string)\n\nConverts string to camelized class name\n\n```javascript\n_(\'some_class_name\').classify()\n=> \'SomeClassName\'\n```\n\n**underscored** _.underscored(string)\n\nConverts a camelized or dasherized string into an underscored one\n\n```javascript\n_(\'MozTransform\').underscored()\n=> \'moz_transform\'\n```\n\n**dasherize** _.dasherize(string)\n\nConverts a underscored or camelized string into an dasherized one\n\n```javascript\n_(\'MozTransform\').dasherize()\n=> \'-moz-transform\'\n```\n\n**humanize** _.humanize(string)\n\nConverts an underscored, camelized, or dasherized string into a humanized one.\nAlso removes beginning and ending whitespace, and removes the postfix \'_id\'.\n\n```javascript\n_(\'  capitalize dash-CamelCase_underscore trim  \').humanize()\n=> \'Capitalize dash camel case underscore trim\'\n```\n\n**trim** _.trim(string, [characters])\n\ntrims defined characters from begining and ending of the string.\nDefaults to whitespace characters.\n\n```javascript\n_.trim("  foobar   ")\n=> "foobar"\n\n_.trim("_-foobar-_", "_-")\n=> "foobar"\n```\n\n\n**ltrim** _.ltrim(string, [characters])\n\nLeft trim. Similar to trim, but only for left side.\n\n\n**rtrim** _.rtrim(string, [characters])\n\nRight trim. Similar to trim, but only for right side.\n\n**truncate** _.truncate(string, length, truncateString)\n\n```javascript\n_(\'Hello world\').truncate(5)\n=> \'Hello...\'\n\n_(\'Hello\').truncate(10)\n=> \'Hello\'\n```\n\n**prune** _.prune(string, length, pruneString)\n\nElegant version of truncate.\nMakes sure the pruned string does not exceed the original length.\nAvoid half-chopped words when truncating.\n\n```javascript\n_(\'Hello, world\').prune(5)\n=> \'Hello...\'\n\n_(\'Hello, world\').prune(8)\n=> \'Hello...\'\n\n_(\'Hello, world\').prune(5, \' (read a lot more)\')\n=> \'Hello, world\' (as adding "(read a lot more)" would be longer than the original string)\n\n_(\'Hello, cruel world\').prune(15)\n=> \'Hello, cruel...\'\n\n_(\'Hello\').prune(10)\n=> \'Hello\'\n```\n\n**words** _.words(str, delimiter=" ")\n\nSplit string by delimiter (String or RegExp), \' \' by default.\n\n```javascript\n_.words("I love you")\n=> ["I","love","you"]\n\n_.words("I_love_you", "_")\n=> ["I","love","you"]\n\n_.words("I-love-you", /-/)\n=> ["I","love","you"]\n```\n\n**sprintf** _.sprintf(string format, *arguments)\n\nC like string formatting.\nCredits goes to [Alexandru Marasteanu][o].\nFor more detailed documentation, see the [original page][o].\n\n[o]: http://www.diveintojavascript.com/projects/sprintf-for-javascript\n\n```javascript\n_.sprintf("%.1f", 1.17)\n"1.2"\n```\n\n**pad** _.pad(str, length, [padStr, type])\n\npads the `str` with characters until the total string length is equal to the passed `length` parameter. By default, pads on the **left** with the space char (`" "`). `padStr` is truncated to a single character if necessary.\n\n```javascript\n_.pad("1", 8)\n-> "       1";\n\n_.pad("1", 8, \'0\')\n-> "00000001";\n\n_.pad("1", 8, \'0\', \'right\')\n-> "10000000";\n\n_.pad("1", 8, \'0\', \'both\')\n-> "00001000";\n\n_.pad("1", 8, \'bleepblorp\', \'both\')\n-> "bbbb1bbb";\n```\n\n**lpad** _.lpad(str, length, [padStr])\n\nleft-pad a string. Alias for `pad(str, length, padStr, \'left\')`\n\n```javascript\n_.lpad("1", 8, \'0\')\n-> "00000001";\n```\n\n**rpad** _.rpad(str, length, [padStr])\n\nright-pad a string. Alias for `pad(str, length, padStr, \'right\')`\n\n```javascript\n_.rpad("1", 8, \'0\')\n-> "10000000";\n```\n\n**lrpad** _.lrpad(str, length, [padStr])\n\nleft/right-pad a string. Alias for `pad(str, length, padStr, \'both\')`\n\n```javascript\n_.lrpad("1", 8, \'0\')\n-> "00001000";\n```\n\n**center** alias for **lrpad**\n\n**ljust** alias for *rpad*\n\n**rjust** alias for *lpad*\n\n**toNumber**  _.toNumber(string, [decimals])\n\nParse string to number. Returns NaN if string can\'t be parsed to number.\n\n```javascript\n_(\'2.556\').toNumber()\n=> 3\n\n_(\'2.556\').toNumber(1)\n=> 2.6\n```\n\n**strRight**  _.strRight(string, pattern)\n\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strRight(\'_\')\n=> "is_a_test_string";\n```\n\n**strRightBack**  _.strRightBack(string, pattern)\n\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strRightBack(\'_\')\n=> "string";\n```\n\n**strLeft**  _.strLeft(string, pattern)\n\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strLeft(\'_\')\n=> "This";\n```\n\n**strLeftBack**  _.strLeftBack(string, pattern)\n\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strLeftBack(\'_\')\n=> "This_is_a_test";\n```\n\n**stripTags**\n\nRemoves all html tags from string.\n\n```javascript\n_(\'a <a href="#">link</a>\').stripTags()\n=> \'a link\'\n\n_(\'a <a href="#">link</a><script>alert("hello world!")</script>\').stripTags()\n=> \'a linkalert("hello world!")\'\n```\n\n**toSentence**  _.toSentence(array, [delimiter, lastDelimiter])\n\nJoin an array into a human readable sentence.\n\n```javascript\n_.toSentence([\'jQuery\', \'Mootools\', \'Prototype\'])\n=> \'jQuery, Mootools and Prototype\';\n\n_.toSentence([\'jQuery\', \'Mootools\', \'Prototype\'], \', \', \' unt \')\n=> \'jQuery, Mootools unt Prototype\';\n```\n\n**repeat** _.repeat(string, count, [separator])\n\nRepeats a string count times.\n\n```javascript\n_.repeat("foo", 3)\n=> \'foofoofoo\';\n\n_.repeat("foo", 3, "bar")\n=> \'foobarfoobarfoo\'\n```\n\n**slugify** _.slugify(string)\n\nTransform text into a URL slug. Replaces whitespaces, accentuated, and special characters with a dash.\n\n```javascript\n_.slugify("Un éléphant à l\'orée du bois")\n=> \'un-elephant-a-loree-du-bois\';\n```\n\n***Caution: this function is charset dependent***\n\n## Roadmap ##\n\nAny suggestions or bug reports are welcome. Just email me or more preferably open an issue.\n\n## Changelog ##\n\n### 2.0.0 ###\n\n* Added prune, humanize functions\n* Added _.string (_.str) namespace for Underscore.string library\n* Removed includes function\n\n#### Problems\n\nWe lose two things for `include` and `reverse` methods from `_.string`:\n\n* Calls like `_(\'foobar\').include(\'bar\')` aren\'t available;\n* Chaining isn\'t available too.\n\nBut if you need this functionality you can create aliases for conflict functions which will be convenient for you:\n\n```javascript\n_.mixin({\n    includeString: _.str.include,\n    reverseString: _.str.reverse\n})\n\n// Now wrapper calls and chaining are available.\n_(\'foobar\').chain().reverseString().includeString(\'rab\').value()\n```\n\n#### Standalone Usage\n\nIf you are using Underscore.string without Underscore. You also have `_.string` namespace for it and `_.str` alias\nBut of course you can just reassign `_` variable with `_.string`\n\n```javascript\n_ = _.string\n```\n### 2.2.0 ###\n\n* Capitalize method behavior changed\n* Various perfomance tweaks\n\n### 2.1.1###\n\n* Fixed words method bug\n* Added classify method\n\n### 2.1.0 ###\n\n* AMD support\n* Added toSentence method\n* Added slugify method\n* Lots of speed optimizations\n\n### 2.0.0 ###\n\nFor upgrading to this version you need to mix in Underscore.string library to Underscore object:\n\n```javascript\n_.mixin(_.string.exports());\n```\n\nand all non-conflict Underscore.string functions will be available through Underscore object.\nAlso function `includes` has been removed, you should replace this function by `_.str.include`\nor create alias `_.includes = _.str.include` and all your code will work fine.\n\n### 1.1.6 ###\n\n* Fixed reverse and truncate\n* Added isBlank, stripTags, inlude(alias for includes)\n* Added uglifier compression\n\n### 1.1.5 ###\n\n* Added strRight, strRightBack, strLeft, strLeftBack\n\n### 1.1.4 ###\n\n* Added pad, lpad, rpad, lrpad methods and aliases center, ljust, rjust\n* Integration with Underscore 1.1.6\n\n### 1.1.3 ###\n\n* Added methods: underscored, camelize, dasherize\n* Support newer version of npm\n\n### 1.1.2 ###\n\n* Created functions: lines, chars, words functions\n\n### 1.0.2 ###\n\n* Created integration test suite with underscore.js 1.1.4 (now it\'s absolutely compatible)\n* Removed \'reverse\' function, because this function override underscore.js \'reverse\'\n\n## Contribute ##\n\n* Fork & pull request. Don\'t forget about tests.\n* If you planning add some feature please create issue before.\n\nOtherwise changes will be rejected.\n\n## Contributors list ##\n\n*  Esa-Matti Suuronen <esa-matti@suuronen.org> (<http://esa-matti.suuronen.org/>),\n*  Edward Tsech <edtsech@gmail.com>,\n*  Sasha Koss <kossnocorp@gmail.com> (<http://koss.nocorp.me/>),\n*  Vladimir Dronnikov <dronnikov@gmail.com>,\n*  Pete Kruckenberg (<https://github.com/kruckenb>),\n*  Paul Chavard <paul@chavard.net> (<http://tchak.net>),\n*  Ed Finkler <coj@funkatron.com> (<http://funkatron.com>)\n*  Pavel Pravosud <rwz@duckroll.ru>\n*  Anton Lindqvist <anton@qvister.se> (<http://qvister.se>)\n\n## Licence ##\n\nThe MIT License\n\nCopyright (c) 2011 Esa-Matti Suuronen esa-matti@suuronen.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n',
1189 silly resolved     readmeFilename: 'README.markdown',
1189 silly resolved     _id: 'underscore.string@2.2.1',
1189 silly resolved     _from: 'underscore.string@~2.2.0rc' },
1189 silly resolved   { name: 'js-yaml',
1189 silly resolved     version: '2.0.5',
1189 silly resolved     description: 'YAML 1.2 parser and serializer',
1189 silly resolved     keywords: [ 'yaml', 'parser', 'serializer', 'pyyaml' ],
1189 silly resolved     homepage: 'https://github.com/nodeca/js-yaml',
1189 silly resolved     author: { name: 'Dervus Grim', email: 'dervus@lavabit.com' },
1189 silly resolved     contributors: [ [Object], [Object] ],
1189 silly resolved     bugs: { url: 'https://github.com/nodeca/js-yaml/issues' },
1189 silly resolved     license:
1189 silly resolved      { type: 'MIT',
1189 silly resolved        url: 'https://github.com/nodeca/js-yaml/blob/master/LICENSE' },
1189 silly resolved     repository: { type: 'git', url: 'git://github.com/nodeca/js-yaml.git' },
1189 silly resolved     main: './index.js',
1189 silly resolved     bin: { 'js-yaml': 'bin/js-yaml.js' },
1189 silly resolved     scripts: { test: 'make test' },
1189 silly resolved     dependencies: { argparse: '~ 0.1.11', esprima: '~ 1.0.2' },
1189 silly resolved     devDependencies: { mocha: '*' },
1189 silly resolved     engines: { node: '>= 0.6.0' },
1189 silly resolved     readme: 'JS-YAML - YAML 1.2 parser and serializer for JavaScript\n=======================================================\n\n[![Build Status](https://secure.travis-ci.org/nodeca/js-yaml.png)](http://travis-ci.org/nodeca/js-yaml)\n\n[Online Demo](http://nodeca.github.com/js-yaml/)\n\n\nThis is an implementation of [YAML](http://yaml.org/), a human friendly data\nserialization language. Started as [PyYAML](http://pyyaml.org/) port, it was\ncompletely rewritten from scratch. Now it\'s very fast, and supports 1.2 spec.\n\n\nBreaking changes in 1.x.x -> 2.0.x\n----------------------------------\n\nIf your have not used __custom__ tags or loader classes - no changes needed. Just\nupgrade library and enjoy high parse speed.\n\nIn other case, you should rewrite your tag constructors and custom loader\nclasses, to conform new schema-based API. See\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) and\n[wiki](https://github.com/nodeca/js-yaml/wiki) for details.\nNote, that parser internals were completely rewritten.\n\n\nInstallation\n------------\n\n### YAML module for node.js\n\n```\nnpm install js-yaml\n```\n\n\n### CLI executable\n\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\n\n```\nnpm install js-yaml -g\n```\n\n#### Usage\n\n```\nusage: js-yaml [-h] [-v] [-c] [-j] [-t] file\n\nPositional arguments:\n  file           File with YAML document(s)\n\nOptional arguments:\n  -h, --help     Show this help message and exit.\n  -v, --version  Show program\'s version number and exit.\n  -c, --compact  Display errors in compact mode\n  -j, --to-json  Output a non-funky boring JSON\n  -t, --trace    Show stack trace on error\n```\n\n\n### Bundled YAML library for browsers\n\n``` html\n<script src="js-yaml.min.js"></script>\n<script type="text/javascript">\nvar doc = jsyaml.load(\'greeting: hello\\nname: world\');\n</script>\n```\n\nBrowser support was done mostly for online demo. If you find any errors - feel\nfree to send pull requests with fixes. Also note, that IE and other old browsers\nneeds [es5-shims](https://github.com/kriskowal/es5-shim) to operate.\n\n\nAPI\n---\n\nHere we cover the most \'useful\' methods. If you need advanced details (creating\nyour own tags), see [wiki](https://github.com/nodeca/js-yaml/wiki) and\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) for more\ninfo.\n\nIn node.js JS-YAML automatically registers handlers for `.yml` and `.yaml`\nfiles. You can load them just with `require`. That\'s mostly equivalent to\ncalling `load()` on fetched content of a file. Just with one string!\n\n``` javascript\nrequire(\'js-yaml\');\n\n// Get document, or throw exception on error\ntry {\n  var doc = require(\'/home/ixti/example.yml\');\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n\n### load (string [ , options ])\n\nParses `string` as single YAML document. Returns a JavaScript object or throws\n`YAMLException` on error.\n\nNOTE: This function **does not** understands multi-document sources, it throws\nexception on those.\n\noptions:\n\n- `filename` _(default: null)_ - string to be used as a file path in\n  error/warning messages.\n- `strict` _(default - false)_ makes the loader to throw errors instead of\n  warnings.\n- `schema` _(default: `DEFAULT_SCHEMA`)_ - specifies a schema to use.\n\n\n### loadAll (string, iterator [ , options ])\n\nSame as `load()`, but understands multi-document sources and apply `iterator` to\neach document.\n\n``` javascript\nvar yaml = require(\'js-yaml\');\n\nyaml.loadAll(data, function (doc) {\n  console.log(doc);\n});\n```\n\n\n### safeLoad (string [ , options ])\n\nSame as `load()` but uses `SAFE_SCHEMA` by default - only recommended tags of\nYAML specification (no JavaScript-specific tags, e.g. `!!js/regexp`).\n\n\n### safeLoadAll (string, iterator [ , options ])\n\nSame as `loadAll()` but uses `SAFE_SCHEMA` by default - only recommended tags of\nYAML specification (no JavaScript-specific tags, e.g. `!!js/regexp`).\n\n\n### dump (object [ , options ])\n\nSerializes `object` as YAML document.\n\noptions:\n\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\n- `flowLevel` (default: -1) - specifies level of nesting, when to switch from\n  block to flow style for collections. -1 means block style everwhere\n- `styles` - "tag" => "style" map. Each tag may have own set of styles.\n- `schema` _(default: `DEFAULT_SCHEMA`)_ specifies a schema to use.\n\nstyles:\n\n``` none\n!!null\n  "canonical"   => "~"\n\n!!int\n  "binary"      => "0b1", "0b101010", "0b1110001111010"\n  "octal"       => "01", "052", "016172"\n  "decimal"     => "1", "42", "7290"\n  "hexadecimal" => "0x1", "0x2A", "0x1C7A"\n\n!!null, !!bool, !!float\n  "lowercase"   => "null", "true", "false", ".nan", \'.inf\'\n  "uppercase"   => "NULL", "TRUE", "FALSE", ".NAN", \'.INF\'\n  "camelcase"   => "Null", "True", "False", ".NaN", \'.Inf\'\n```\n\nBy default, !!int uses `decimal`, and !!null, !!bool, !!float use `lowercase`.\n\n\n### safeDump (object [ , options ])\n\nSame as `dump()` but uses `SAFE_SCHEMA` by default - only recommended tags of\nYAML specification (no JavaScript-specific tags, e.g. `!!js/regexp`).\n\n\nSupported YAML types\n--------------------\n\nThe list of standard YAML tags and corresponding JavaScipt types. See also\n[YAML tag discussion](http://pyyaml.org/wiki/YAMLTagDiscussion) and\n[YAML types repository](http://yaml.org/type/).\n\n```\n!!null \'\'                   # null\n!!bool \'yes\'                # bool\n!!int \'3...\'                # number\n!!float \'3.14...\'           # number\n!!binary \'...base64...\'     # buffer\n!!timestamp \'YYYY-...\'      # date\n!!omap [ ... ]              # array of key-value pairs\n!!pairs [ ... ]             # array or array pairs\n!!set { ... }               # array of objects with given keys and null values\n!!str \'...\'                 # string\n!!seq [ ... ]               # array\n!!map { ... }               # object\n```\n\n**JavaScript-specific tags**\n\n```\n!!js/regexp /pattern/gim            # RegExp\n!!js/undefined \'\'                   # Undefined\n!!js/function \'function () {...}\'   # Function\n```\n\n\n\n\n## Caveats\n\nNote, that you use arrays or objects as key in JS-YAML. JS do not allows objects\nor array as keys, and stringifies (by calling .toString method) them at the\nmoment of adding them.\n\n``` yaml\n---\n? [ foo, bar ]\n: - baz\n? { foo: bar }\n: - baz\n  - baz\n```\n\n``` javascript\n{ "foo,bar": ["baz"], "[object Object]": ["baz", "baz"] }\n```\n\nAlso, reading of properties on implicit block mapping keys is not supported yet.\nSo, the following YAML document cannot be loaded.\n\n``` yaml\n&anchor foo:\n  foo: bar\n  *anchor: duplicate key\n  baz: bat\n  *anchor: duplicate key\n```\n\n## License\n\nView the [LICENSE](https://github.com/nodeca/js-yaml/blob/master/LICENSE) file\n(MIT).\n',
1189 silly resolved     readmeFilename: 'README.md',
1189 silly resolved     _id: 'js-yaml@2.0.5',
1189 silly resolved     _from: 'js-yaml@~2.0.2' } ]
1190 info install async@0.1.22 into /var/www/sites/marker/http/node_modules/grunt
1191 info install colors@0.6.2 into /var/www/sites/marker/http/node_modules/grunt
1192 info install coffee-script@1.3.3 into /var/www/sites/marker/http/node_modules/grunt
1193 info install dateformat@1.0.2-1.2.3 into /var/www/sites/marker/http/node_modules/grunt
1194 info install eventemitter2@0.4.13 into /var/www/sites/marker/http/node_modules/grunt
1195 info install findup-sync@0.1.2 into /var/www/sites/marker/http/node_modules/grunt
1196 info install hooker@0.2.3 into /var/www/sites/marker/http/node_modules/grunt
1197 info install iconv-lite@0.2.11 into /var/www/sites/marker/http/node_modules/grunt
1198 info install glob@3.1.21 into /var/www/sites/marker/http/node_modules/grunt
1199 info install minimatch@0.2.12 into /var/www/sites/marker/http/node_modules/grunt
1200 info install nopt@1.0.10 into /var/www/sites/marker/http/node_modules/grunt
1201 info install rimraf@2.0.3 into /var/www/sites/marker/http/node_modules/grunt
1202 info install lodash@0.9.2 into /var/www/sites/marker/http/node_modules/grunt
1203 info install which@1.0.5 into /var/www/sites/marker/http/node_modules/grunt
1204 info install underscore.string@2.2.1 into /var/www/sites/marker/http/node_modules/grunt
1205 info install js-yaml@2.0.5 into /var/www/sites/marker/http/node_modules/grunt
1206 info installOne async@0.1.22
1207 info installOne colors@0.6.2
1208 info installOne coffee-script@1.3.3
1209 info installOne dateformat@1.0.2-1.2.3
1210 info installOne eventemitter2@0.4.13
1211 info installOne findup-sync@0.1.2
1212 info installOne hooker@0.2.3
1213 info installOne iconv-lite@0.2.11
1214 info installOne glob@3.1.21
1215 info installOne minimatch@0.2.12
1216 info installOne nopt@1.0.10
1217 info installOne rimraf@2.0.3
1218 info installOne lodash@0.9.2
1219 info installOne which@1.0.5
1220 info installOne underscore.string@2.2.1
1221 info installOne js-yaml@2.0.5
1222 info /var/www/sites/marker/http/node_modules/grunt/node_modules/async unbuild
1223 info /var/www/sites/marker/http/node_modules/grunt/node_modules/colors unbuild
1224 info /var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script unbuild
1225 info /var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat unbuild
1226 info /var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2 unbuild
1227 info /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync unbuild
1228 info /var/www/sites/marker/http/node_modules/grunt/node_modules/hooker unbuild
1229 info /var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite unbuild
1230 info /var/www/sites/marker/http/node_modules/grunt/node_modules/glob unbuild
1231 info /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch unbuild
1232 info /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt unbuild
1233 info /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf unbuild
1234 info /var/www/sites/marker/http/node_modules/grunt/node_modules/lodash unbuild
1235 info /var/www/sites/marker/http/node_modules/grunt/node_modules/which unbuild
1236 info /var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string unbuild
1237 info /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml unbuild
1238 verbose tar unpack /home/ahmad/.npm/async/0.1.22/package.tgz
1239 silly lockFile 247e0897-modules-grunt-node-modules-async tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/async
1240 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/async /home/ahmad/.npm/247e0897-modules-grunt-node-modules-async.lock
1241 silly lockFile 445f286d-mad-npm-async-0-1-22-package-tgz tar:///home/ahmad/.npm/async/0.1.22/package.tgz
1242 verbose lock tar:///home/ahmad/.npm/async/0.1.22/package.tgz /home/ahmad/.npm/445f286d-mad-npm-async-0-1-22-package-tgz.lock
1243 verbose tar unpack /home/ahmad/.npm/colors/0.6.2/package.tgz
1244 silly lockFile 9efee8f0-odules-grunt-node-modules-colors tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/colors
1245 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/colors /home/ahmad/.npm/9efee8f0-odules-grunt-node-modules-colors.lock
1246 silly lockFile a0bd3cb6-mad-npm-colors-0-6-2-package-tgz tar:///home/ahmad/.npm/colors/0.6.2/package.tgz
1247 verbose lock tar:///home/ahmad/.npm/colors/0.6.2/package.tgz /home/ahmad/.npm/a0bd3cb6-mad-npm-colors-0-6-2-package-tgz.lock
1248 verbose tar unpack /home/ahmad/.npm/coffee-script/1.3.3/package.tgz
1249 silly lockFile 91e099d8-grunt-node-modules-coffee-script tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script
1250 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script /home/ahmad/.npm/91e099d8-grunt-node-modules-coffee-script.lock
1251 silly lockFile 5a132db2--coffee-script-1-3-3-package-tgz tar:///home/ahmad/.npm/coffee-script/1.3.3/package.tgz
1252 verbose lock tar:///home/ahmad/.npm/coffee-script/1.3.3/package.tgz /home/ahmad/.npm/5a132db2--coffee-script-1-3-3-package-tgz.lock
1253 verbose tar unpack /home/ahmad/.npm/dateformat/1.0.2-1.2.3/package.tgz
1254 silly lockFile 626e765c-es-grunt-node-modules-dateformat tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat
1255 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat /home/ahmad/.npm/626e765c-es-grunt-node-modules-dateformat.lock
1256 silly lockFile f2233149-teformat-1-0-2-1-2-3-package-tgz tar:///home/ahmad/.npm/dateformat/1.0.2-1.2.3/package.tgz
1257 verbose lock tar:///home/ahmad/.npm/dateformat/1.0.2-1.2.3/package.tgz /home/ahmad/.npm/f2233149-teformat-1-0-2-1-2-3-package-tgz.lock
1258 verbose tar unpack /home/ahmad/.npm/eventemitter2/0.4.13/package.tgz
1259 silly lockFile 94b6f001-grunt-node-modules-eventemitter2 tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2
1260 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2 /home/ahmad/.npm/94b6f001-grunt-node-modules-eventemitter2.lock
1261 silly lockFile bcf3bdb9-eventemitter2-0-4-13-package-tgz tar:///home/ahmad/.npm/eventemitter2/0.4.13/package.tgz
1262 verbose lock tar:///home/ahmad/.npm/eventemitter2/0.4.13/package.tgz /home/ahmad/.npm/bcf3bdb9-eventemitter2-0-4-13-package-tgz.lock
1263 verbose tar unpack /home/ahmad/.npm/findup-sync/0.1.2/package.tgz
1264 silly lockFile 7d251781-s-grunt-node-modules-findup-sync tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync
1265 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync /home/ahmad/.npm/7d251781-s-grunt-node-modules-findup-sync.lock
1266 silly lockFile 20a627ad-pm-findup-sync-0-1-2-package-tgz tar:///home/ahmad/.npm/findup-sync/0.1.2/package.tgz
1267 verbose lock tar:///home/ahmad/.npm/findup-sync/0.1.2/package.tgz /home/ahmad/.npm/20a627ad-pm-findup-sync-0-1-2-package-tgz.lock
1268 verbose tar unpack /home/ahmad/.npm/hooker/0.2.3/package.tgz
1269 silly lockFile 3d0876f4-odules-grunt-node-modules-hooker tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/hooker
1270 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/hooker /home/ahmad/.npm/3d0876f4-odules-grunt-node-modules-hooker.lock
1271 silly lockFile 8865e60f-mad-npm-hooker-0-2-3-package-tgz tar:///home/ahmad/.npm/hooker/0.2.3/package.tgz
1272 verbose lock tar:///home/ahmad/.npm/hooker/0.2.3/package.tgz /home/ahmad/.npm/8865e60f-mad-npm-hooker-0-2-3-package-tgz.lock
1273 verbose tar unpack /home/ahmad/.npm/iconv-lite/0.2.11/package.tgz
1274 silly lockFile 0bc272a5-es-grunt-node-modules-iconv-lite tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite
1275 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite /home/ahmad/.npm/0bc272a5-es-grunt-node-modules-iconv-lite.lock
1276 silly lockFile 30144f10-pm-iconv-lite-0-2-11-package-tgz tar:///home/ahmad/.npm/iconv-lite/0.2.11/package.tgz
1277 verbose lock tar:///home/ahmad/.npm/iconv-lite/0.2.11/package.tgz /home/ahmad/.npm/30144f10-pm-iconv-lite-0-2-11-package-tgz.lock
1278 verbose tar unpack /home/ahmad/.npm/glob/3.1.21/package.tgz
1279 silly lockFile c20b8128--modules-grunt-node-modules-glob tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob
1280 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob /home/ahmad/.npm/c20b8128--modules-grunt-node-modules-glob.lock
1281 silly lockFile 61ee9c49-hmad-npm-glob-3-1-21-package-tgz tar:///home/ahmad/.npm/glob/3.1.21/package.tgz
1282 verbose lock tar:///home/ahmad/.npm/glob/3.1.21/package.tgz /home/ahmad/.npm/61ee9c49-hmad-npm-glob-3-1-21-package-tgz.lock
1283 verbose tar unpack /home/ahmad/.npm/minimatch/0.2.12/package.tgz
1284 silly lockFile a96b7a49-les-grunt-node-modules-minimatch tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
1285 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch /home/ahmad/.npm/a96b7a49-les-grunt-node-modules-minimatch.lock
1286 silly lockFile fca71e6c-npm-minimatch-0-2-12-package-tgz tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz
1287 verbose lock tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz /home/ahmad/.npm/fca71e6c-npm-minimatch-0-2-12-package-tgz.lock
1288 verbose tar unpack /home/ahmad/.npm/nopt/1.0.10/package.tgz
1289 silly lockFile 6dc57495--modules-grunt-node-modules-nopt tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt
1290 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt /home/ahmad/.npm/6dc57495--modules-grunt-node-modules-nopt.lock
1291 silly lockFile a51f631c-hmad-npm-nopt-1-0-10-package-tgz tar:///home/ahmad/.npm/nopt/1.0.10/package.tgz
1292 verbose lock tar:///home/ahmad/.npm/nopt/1.0.10/package.tgz /home/ahmad/.npm/a51f631c-hmad-npm-nopt-1-0-10-package-tgz.lock
1293 verbose tar unpack /home/ahmad/.npm/rimraf/2.0.3/package.tgz
1294 silly lockFile 34f03935-odules-grunt-node-modules-rimraf tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf
1295 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf /home/ahmad/.npm/34f03935-odules-grunt-node-modules-rimraf.lock
1296 silly lockFile cd1ca854-mad-npm-rimraf-2-0-3-package-tgz tar:///home/ahmad/.npm/rimraf/2.0.3/package.tgz
1297 verbose lock tar:///home/ahmad/.npm/rimraf/2.0.3/package.tgz /home/ahmad/.npm/cd1ca854-mad-npm-rimraf-2-0-3-package-tgz.lock
1298 verbose tar unpack /home/ahmad/.npm/lodash/0.9.2/package.tgz
1299 silly lockFile 6e90eb89-odules-grunt-node-modules-lodash tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/lodash
1300 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/lodash /home/ahmad/.npm/6e90eb89-odules-grunt-node-modules-lodash.lock
1301 silly lockFile 09b6a2b8-mad-npm-lodash-0-9-2-package-tgz tar:///home/ahmad/.npm/lodash/0.9.2/package.tgz
1302 verbose lock tar:///home/ahmad/.npm/lodash/0.9.2/package.tgz /home/ahmad/.npm/09b6a2b8-mad-npm-lodash-0-9-2-package-tgz.lock
1303 verbose tar unpack /home/ahmad/.npm/which/1.0.5/package.tgz
1304 silly lockFile 8c875bce-modules-grunt-node-modules-which tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/which
1305 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/which /home/ahmad/.npm/8c875bce-modules-grunt-node-modules-which.lock
1306 silly lockFile 1bc814ae-hmad-npm-which-1-0-5-package-tgz tar:///home/ahmad/.npm/which/1.0.5/package.tgz
1307 verbose lock tar:///home/ahmad/.npm/which/1.0.5/package.tgz /home/ahmad/.npm/1bc814ae-hmad-npm-which-1-0-5-package-tgz.lock
1308 verbose tar unpack /home/ahmad/.npm/underscore.string/2.2.1/package.tgz
1309 silly lockFile cb63378a-t-node-modules-underscore-string tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string
1310 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string /home/ahmad/.npm/cb63378a-t-node-modules-underscore-string.lock
1311 silly lockFile e584a753-erscore-string-2-2-1-package-tgz tar:///home/ahmad/.npm/underscore.string/2.2.1/package.tgz
1312 verbose lock tar:///home/ahmad/.npm/underscore.string/2.2.1/package.tgz /home/ahmad/.npm/e584a753-erscore-string-2-2-1-package-tgz.lock
1313 verbose tar unpack /home/ahmad/.npm/js-yaml/2.0.5/package.tgz
1314 silly lockFile a68fde42-dules-grunt-node-modules-js-yaml tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
1315 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml /home/ahmad/.npm/a68fde42-dules-grunt-node-modules-js-yaml.lock
1316 silly lockFile 2d90e30f-ad-npm-js-yaml-2-0-5-package-tgz tar:///home/ahmad/.npm/js-yaml/2.0.5/package.tgz
1317 verbose lock tar:///home/ahmad/.npm/js-yaml/2.0.5/package.tgz /home/ahmad/.npm/2d90e30f-ad-npm-js-yaml-2-0-5-package-tgz.lock
1318 silly gunzTarPerm extractEntry LICENSE-MIT
1319 silly gunzTarPerm extractEntry .gitattributes
1320 silly gunzTarPerm modes [ '755', '644' ]
1321 silly gunzTarPerm modes [ '755', '644' ]
1322 silly gunzTarPerm modes [ '755', '644' ]
1323 silly gunzTarPerm modes [ '755', '644' ]
1324 silly gunzTarPerm modes [ '755', '644' ]
1325 silly gunzTarPerm modes [ '755', '644' ]
1326 silly gunzTarPerm modes [ '755', '644' ]
1327 silly gunzTarPerm modes [ '755', '644' ]
1328 silly gunzTarPerm modes [ '755', '644' ]
1329 silly gunzTarPerm modes [ '755', '644' ]
1330 silly gunzTarPerm modes [ '755', '644' ]
1331 silly gunzTarPerm modes [ '755', '644' ]
1332 silly gunzTarPerm modes [ '755', '644' ]
1333 silly gunzTarPerm modes [ '755', '644' ]
1334 silly gunzTarPerm modes [ '755', '644' ]
1335 silly gunzTarPerm modes [ '755', '644' ]
1336 silly gunzTarPerm extractEntry package.json
1337 silly gunzTarPerm extractEntry package.json
1338 silly gunzTarPerm extractEntry package.json
1339 silly gunzTarPerm extractEntry package.json
1340 silly gunzTarPerm extractEntry package.json
1341 silly gunzTarPerm extractEntry package.json
1342 silly gunzTarPerm extractEntry package.json
1343 silly gunzTarPerm extractEntry package.json
1344 silly gunzTarPerm extractEntry package.json
1345 silly gunzTarPerm extractEntry package.json
1346 silly gunzTarPerm extractEntry package.json
1347 silly gunzTarPerm extractEntry package.json
1348 silly gunzTarPerm extractEntry package.json
1349 silly gunzTarPerm extractEntry package.json
1350 silly gunzTarPerm extractEntry package.json
1351 silly gunzTarPerm extractEntry package.json
1352 silly gunzTarPerm extractEntry .npmignore
1353 silly gunzTarPerm extractEntry README.md
1354 silly gunzTarPerm extractEntry lib/contrib.js
1355 silly gunzTarPerm extractEntry .travis.yml
1356 silly gunzTarPerm extractEntry test/lib_test.js
1357 silly gunzTarPerm extractEntry colors.js
1358 silly gunzTarPerm extractEntry example.js
1359 silly gunzTarPerm extractEntry .npmignore
1360 silly gunzTarPerm extractEntry README
1361 silly gunzTarPerm extractEntry Readme.md
1362 silly gunzTarPerm extractEntry lib/dateformat.js
1363 silly gunzTarPerm extractEntry README.md
1364 silly gunzTarPerm extractEntry index.js
1365 silly gunzTarPerm extractEntry .npmignore
1366 silly gunzTarPerm extractEntry README.md
1367 silly gunzTarPerm extractEntry README.md
1368 silly gunzTarPerm extractEntry child.js
1369 silly gunzTarPerm extractEntry .npmignore
1370 silly gunzTarPerm extractEntry README.md
1371 silly gunzTarPerm extractEntry .npmignore
1372 silly gunzTarPerm extractEntry README.md
1373 silly gunzTarPerm extractEntry README.md
1374 silly gunzTarPerm extractEntry LICENSE
1375 silly gunzTarPerm extractEntry .npmignore
1376 silly gunzTarPerm extractEntry README.md
1377 silly gunzTarPerm extractEntry README.md
1378 silly gunzTarPerm extractEntry LICENSE
1379 silly gunzTarPerm extractEntry README.md
1380 silly gunzTarPerm extractEntry lodash.js
1381 silly gunzTarPerm extractEntry README.md
1382 silly gunzTarPerm extractEntry LICENSE
1383 silly gunzTarPerm extractEntry .travis.yml
1384 silly gunzTarPerm extractEntry Gemfile
1385 silly gunzTarPerm extractEntry README.md
1386 silly gunzTarPerm extractEntry LICENSE
1387 silly gunzTarPerm extractEntry LICENSE
1388 silly gunzTarPerm extractEntry test.js
1389 silly gunzTarPerm extractEntry MIT-LICENSE.txt
1390 silly gunzTarPerm extractEntry ReadMe.md
1391 silly gunzTarPerm extractEntry example.html
1392 silly gunzTarPerm extractEntry themes/winston-dark.js
1393 silly gunzTarPerm extractEntry themes/winston-light.js
1394 silly gunzTarPerm extractEntry test/test_weekofyear.js
1395 silly gunzTarPerm extractEntry test/test_weekofyear.sh
1396 silly gunzTarPerm extractEntry LICENSE
1397 silly gunzTarPerm extractEntry bin/nopt.js
1398 silly gunzTarPerm extractEntry rimraf.js
1399 silly gunzTarPerm extractEntry AUTHORS
1400 silly gunzTarPerm extractEntry which.js
1401 silly gunzTarPerm extractEntry bin/which
1402 silly gunzTarPerm extractEntry LICENSE
1403 silly gunzTarPerm extractEntry CNAME
1404 silly gunzTarPerm extractEntry Gruntfile.js
1405 silly gunzTarPerm extractEntry .jshintrc
1406 silly gunzTarPerm extractEntry grunt.js
1407 silly gunzTarPerm extractEntry parent.js
1408 silly gunzTarPerm extractEntry LICENSE
1409 silly gunzTarPerm extractEntry glob.js
1410 silly gunzTarPerm extractEntry minimatch.js
1411 silly gunzTarPerm extractEntry test/basic.js
1412 silly gunzTarPerm extractEntry test/brace-expand.js
1413 silly gunzTarPerm extractEntry test/caching.js
1414 silly gunzTarPerm extractEntry test/defaults.js
1415 silly gunzTarPerm extractEntry lib/eventemitter2.js
1416 silly gunzTarPerm extractEntry LICENSE
1417 silly gunzTarPerm extractEntry index.js
1418 silly gunzTarPerm extractEntry lodash.min.js
1419 silly gunzTarPerm extractEntry Gemfile.lock
1420 silly gunzTarPerm extractEntry README.markdown
1421 silly gunzTarPerm extractEntry index.js
1422 silly gunzTarPerm extractEntry HISTORY.md
1423 silly gunzTarPerm extractEntry examples/my-program.js
1424 silly gunzTarPerm extractEntry lib/nopt.js
1425 silly gunzTarPerm extractEntry index.js
1426 silly gunzTarPerm extractEntry .gitmodules
1427 silly gunzTarPerm extractEntry LICENSE-MIT
1428 silly gunzTarPerm extractEntry lib/findup-sync.js
1429 silly gunzTarPerm extractEntry Rakefile
1430 silly gunzTarPerm extractEntry bin/cake
1431 silly gunzTarPerm extractEntry .travis.yml
1432 silly gunzTarPerm extractEntry test/test-async.js
1433 silly gunzTarPerm extractEntry test/test-fiber.js
1434 silly gunzTarPerm extractEntry .travis.yml
1435 silly gunzTarPerm extractEntry Rakefile
1436 silly gunzTarPerm extractEntry test/findup-sync_test.js
1437 silly gunzTarPerm extractEntry test/fixtures/a/b/bar.txt
1438 silly gunzTarPerm extractEntry dist/underscore.string.min.js
1439 silly gunzTarPerm extractEntry lib/underscore.string.js
1440 silly gunzTarPerm extractEntry test/test-sync.js
1441 silly gunzTarPerm extractEntry test/run.sh
1442 silly gunzTarPerm extractEntry bin/coffee
1443 silly gunzTarPerm extractEntry extras/jsl.conf
1444 silly gunzTarPerm extractEntry LICENSE-MIT
1445 silly gunzTarPerm extractEntry dist/ba-hooker.js
1446 silly gunzTarPerm extractEntry dist/ba-hooker.min.js
1447 silly gunzTarPerm extractEntry lib/hooker.js
1448 silly gunzTarPerm extractEntry test/hooker_test.js
1449 silly gunzTarPerm extractEntry README.md~
1450 silly gunzTarPerm extractEntry encodings/big5.js
1451 silly gunzTarPerm extractEntry bin/js-yaml.js
1452 silly gunzTarPerm extractEntry lodash.underscore.js
1453 silly gunzTarPerm extractEntry lodash.underscore.min.js
1454 silly gunzTarPerm extractEntry test/fixtures/a/foo.txt
1455 silly gunzTarPerm extractEntry test/fixtures/a.txt
1456 silly gunzTarPerm extractEntry test/run-qunit.js
1457 silly gunzTarPerm extractEntry test/speed.js
1458 silly gunzTarPerm extractEntry lib/coffee-script/browser.js
1459 silly gunzTarPerm extractEntry encodings/gbk.js
1460 silly gunzTarPerm extractEntry encodings/singlebyte.js
1461 silly gunzTarPerm extractEntry examples/custom_types.js
1462 silly gunzTarPerm extractEntry examples/dumper.js
1463 silly gunzTarPerm extractEntry test/setup.sh
1464 silly gunzTarPerm extractEntry test/fixtures/aaa.txt
1465 silly gunzTarPerm extractEntry examples/g.js
1466 silly gunzTarPerm extractEntry examples/usr-local.js
1467 silly gunzTarPerm extractEntry lib/coffee-script/command.js
1468 silly gunzTarPerm extractEntry lib/coffee-script/grammar.js
1469 silly gunzTarPerm extractEntry examples/sample_document.js
1470 silly gunzTarPerm extractEntry examples/custom_types.yaml
1471 silly gunzTarPerm extractEntry test/00-setup.js
1472 silly gunzTarPerm extractEntry test/bash-comparison.js
1473 silly lockFile 8c875bce-modules-grunt-node-modules-which tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/which
1474 silly lockFile 8c875bce-modules-grunt-node-modules-which tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/which
1475 silly lockFile 1bc814ae-hmad-npm-which-1-0-5-package-tgz tar:///home/ahmad/.npm/which/1.0.5/package.tgz
1476 silly lockFile 1bc814ae-hmad-npm-which-1-0-5-package-tgz tar:///home/ahmad/.npm/which/1.0.5/package.tgz
1477 silly gunzTarPerm extractEntry lib/coffee-script/helpers.js
1478 silly gunzTarPerm extractEntry lib/coffee-script/index.js
1479 info preinstall which@1.0.5
1480 silly gunzTarPerm extractEntry examples/dumper.json
1481 silly gunzTarPerm extractEntry examples/sample_document.yaml
1482 silly gunzTarPerm extractEntry encodings/table/big5.js
1483 silly gunzTarPerm extractEntry encodings/table/gbk.js
1484 verbose readDependencies using package.json deps
1485 silly lockFile 626e765c-es-grunt-node-modules-dateformat tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat
1486 silly lockFile 626e765c-es-grunt-node-modules-dateformat tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat
1487 verbose readDependencies using package.json deps
1488 silly resolved []
1489 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/which
1490 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/which
1491 verbose linkStuff [ false,
1491 verbose linkStuff   false,
1491 verbose linkStuff   false,
1491 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1492 info linkStuff which@1.0.5
1493 verbose linkBins which@1.0.5
1494 verbose link bins [ { which: './bin/which' },
1494 verbose link bins   '/var/www/sites/marker/http/node_modules/grunt/node_modules/.bin',
1494 verbose link bins   false ]
1495 verbose linkMans which@1.0.5
1496 verbose rebuildBundles which@1.0.5
1497 silly lockFile f2233149-teformat-1-0-2-1-2-3-package-tgz tar:///home/ahmad/.npm/dateformat/1.0.2-1.2.3/package.tgz
1498 silly lockFile f2233149-teformat-1-0-2-1-2-3-package-tgz tar:///home/ahmad/.npm/dateformat/1.0.2-1.2.3/package.tgz
1499 silly gunzTarPerm extractEntry lib/coffee-script/coffee-script.js
1500 silly gunzTarPerm extractEntry lib/coffee-script/nodes.js
1501 info preinstall dateformat@1.0.2-1.2.3
1502 info install which@1.0.5
1503 verbose readDependencies using package.json deps
1504 info postinstall which@1.0.5
1505 verbose readDependencies using package.json deps
1506 silly resolved []
1507 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat
1508 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/dateformat
1509 verbose linkStuff [ false,
1509 verbose linkStuff   false,
1509 verbose linkStuff   false,
1509 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1510 info linkStuff dateformat@1.0.2-1.2.3
1511 verbose linkBins dateformat@1.0.2-1.2.3
1512 verbose linkMans dateformat@1.0.2-1.2.3
1513 verbose rebuildBundles dateformat@1.0.2-1.2.3
1514 silly gunzTarPerm extractEntry test/strings.js
1515 silly gunzTarPerm extractEntry test/strings_standalone.js
1516 silly gunzTarPerm extractEntry lib/coffee-script/optparse.js
1517 silly gunzTarPerm extractEntry lib/coffee-script/parser.js
1518 info install dateformat@1.0.2-1.2.3
1519 silly gunzTarPerm extractEntry lib/js-yaml.js
1520 silly gunzTarPerm extractEntry lib/js-yaml/common.js
1521 info postinstall dateformat@1.0.2-1.2.3
1522 silly gunzTarPerm extractEntry generation/generate-big5-table.js
1523 silly gunzTarPerm extractEntry test/underscore.js
1524 silly gunzTarPerm extractEntry test/test.html
1525 silly gunzTarPerm extractEntry Makefile
1526 silly gunzTarPerm extractEntry lib/async.js
1527 silly lockFile 94b6f001-grunt-node-modules-eventemitter2 tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2
1528 silly lockFile 94b6f001-grunt-node-modules-eventemitter2 tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2
1529 silly lockFile bcf3bdb9-eventemitter2-0-4-13-package-tgz tar:///home/ahmad/.npm/eventemitter2/0.4.13/package.tgz
1530 silly lockFile bcf3bdb9-eventemitter2-0-4-13-package-tgz tar:///home/ahmad/.npm/eventemitter2/0.4.13/package.tgz
1531 silly gunzTarPerm extractEntry lib/js-yaml/dumper.js
1532 silly gunzTarPerm extractEntry lib/js-yaml/exception.js
1533 silly gunzTarPerm extractEntry generation/generate-singlebyte.js
1534 silly gunzTarPerm extractEntry test/big5-test.js
1535 silly gunzTarPerm extractEntry lib/coffee-script/repl.js
1536 silly gunzTarPerm extractEntry lib/coffee-script/rewriter.js
1537 info preinstall eventemitter2@0.4.13
1538 silly gunzTarPerm extractEntry test/cwd-test.js
1539 silly gunzTarPerm extractEntry test/mark.js
1540 verbose readDependencies using package.json deps
1541 silly lockFile 045b1ded-2008-0-27322769188322127-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1542 silly lockFile 045b1ded-2008-0-27322769188322127-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1543 verbose readDependencies using package.json deps
1544 silly resolved []
1545 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2
1546 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/eventemitter2
1547 verbose linkStuff [ false,
1547 verbose linkStuff   false,
1547 verbose linkStuff   false,
1547 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1548 info linkStuff eventemitter2@0.4.13
1549 verbose linkBins eventemitter2@0.4.13
1550 verbose linkMans eventemitter2@0.4.13
1551 verbose rebuildBundles eventemitter2@0.4.13
1552 silly lockFile 9e730c8c-2008-0-27322769188322127-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/tmp.tgz
1553 silly lockFile 9e730c8c-2008-0-27322769188322127-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/tmp.tgz
1554 info install eventemitter2@0.4.13
1555 silly lockFile 34f03935-odules-grunt-node-modules-rimraf tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf
1556 silly lockFile 34f03935-odules-grunt-node-modules-rimraf tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf
1557 silly gunzTarPerm extractEntry test/cyrillic-test.js
1558 silly gunzTarPerm extractEntry test/gbk-test.js
1559 silly lockFile cd1ca854-mad-npm-rimraf-2-0-3-package-tgz tar:///home/ahmad/.npm/rimraf/2.0.3/package.tgz
1560 silly lockFile cd1ca854-mad-npm-rimraf-2-0-3-package-tgz tar:///home/ahmad/.npm/rimraf/2.0.3/package.tgz
1561 silly gunzTarPerm extractEntry lib/js-yaml/loader.js
1562 silly gunzTarPerm extractEntry lib/js-yaml/mark.js
1563 verbose tar pack [ '/home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz',
1563 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package' ]
1564 verbose tarball /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1565 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1566 silly lockFile 045b1ded-2008-0-27322769188322127-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1567 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package /home/ahmad/.npm/045b1ded-2008-0-27322769188322127-package.lock
1568 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1569 verbose lock tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz /home/ahmad/.npm/6e7f71a4-nt-lib-contrib-0-6-1-package-tgz.lock
1570 info postinstall eventemitter2@0.4.13
1571 silly gunzTarPerm extractEntry test/nocase-nomagic.js
1572 silly gunzTarPerm extractEntry test/pause-resume.js
1573 info preinstall rimraf@2.0.3
1574 silly gunzTarPerm extractEntry test/test_standalone.html
1575 silly gunzTarPerm extractEntry test/test_underscore/arrays.js
1576 verbose readDependencies using package.json deps
1577 verbose readDependencies using package.json deps
1578 silly gunzTarPerm extractEntry lib/js-yaml/require.js
1579 silly gunzTarPerm extractEntry lib/js-yaml/schema.js
1580 silly gunzTarPerm extractEntry lib/coffee-script/cake.js
1581 silly gunzTarPerm extractEntry lib/coffee-script/scope.js
1582 verbose cache add [ 'graceful-fs@~1.1', null ]
1583 verbose cache add name=undefined spec="graceful-fs@~1.1" args=["graceful-fs@~1.1",null]
1584 verbose parsed url { protocol: null,
1584 verbose parsed url   slashes: null,
1584 verbose parsed url   auth: null,
1584 verbose parsed url   host: null,
1584 verbose parsed url   port: null,
1584 verbose parsed url   hostname: null,
1584 verbose parsed url   hash: null,
1584 verbose parsed url   search: null,
1584 verbose parsed url   query: null,
1584 verbose parsed url   pathname: 'graceful-fs@~1.1',
1584 verbose parsed url   path: 'graceful-fs@~1.1',
1584 verbose parsed url   href: 'graceful-fs@~1.1' }
1585 verbose cache add name="graceful-fs" spec="~1.1" args=["graceful-fs","~1.1"]
1586 verbose parsed url { protocol: null,
1586 verbose parsed url   slashes: null,
1586 verbose parsed url   auth: null,
1586 verbose parsed url   host: null,
1586 verbose parsed url   port: null,
1586 verbose parsed url   hostname: null,
1586 verbose parsed url   hash: null,
1586 verbose parsed url   search: null,
1586 verbose parsed url   query: null,
1586 verbose parsed url   pathname: '~1.1',
1586 verbose parsed url   path: '~1.1',
1586 verbose parsed url   href: '~1.1' }
1587 verbose addNamed [ 'graceful-fs', '~1.1' ]
1588 verbose addNamed [ null, '>=1.1.0-0 <1.2.0-0' ]
1589 silly lockFile 0502dd56-graceful-fs-1-1 graceful-fs@~1.1
1590 verbose lock graceful-fs@~1.1 /home/ahmad/.npm/0502dd56-graceful-fs-1-1.lock
1591 silly addNameRange { name: 'graceful-fs',
1591 silly addNameRange   range: '>=1.1.0-0 <1.2.0-0',
1591 silly addNameRange   hasData: false }
1592 silly gunzTarPerm extractEntry test/root-nomount.js
1593 silly gunzTarPerm extractEntry test/root.js
1594 silly lockFile 6dc57495--modules-grunt-node-modules-nopt tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt
1595 silly lockFile 6dc57495--modules-grunt-node-modules-nopt tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt
1596 silly gunzTarPerm extractEntry lib/js-yaml/type.js
1597 silly gunzTarPerm extractEntry lib/js-yaml/schema/default.js
1598 verbose url raw graceful-fs
1599 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
1600 verbose url resolved https://registry.npmjs.org/graceful-fs
1601 info trying registry request attempt 1 at 23:47:43
1602 verbose etag "8VTIGE3KHXX4861152PVTWGF8"
1603 http GET https://registry.npmjs.org/graceful-fs
1604 silly lockFile a51f631c-hmad-npm-nopt-1-0-10-package-tgz tar:///home/ahmad/.npm/nopt/1.0.10/package.tgz
1605 silly lockFile a51f631c-hmad-npm-nopt-1-0-10-package-tgz tar:///home/ahmad/.npm/nopt/1.0.10/package.tgz
1606 silly lockFile 9efee8f0-odules-grunt-node-modules-colors tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/colors
1607 silly lockFile 9efee8f0-odules-grunt-node-modules-colors tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/colors
1608 silly lockFile a0bd3cb6-mad-npm-colors-0-6-2-package-tgz tar:///home/ahmad/.npm/colors/0.6.2/package.tgz
1609 silly lockFile a0bd3cb6-mad-npm-colors-0-6-2-package-tgz tar:///home/ahmad/.npm/colors/0.6.2/package.tgz
1610 silly gunzTarPerm extractEntry test/zz-cleanup.js
1611 silly gunzTarPerm extractEntry test/bash-results.json
1612 info preinstall nopt@1.0.10
1613 silly lockFile 7d251781-s-grunt-node-modules-findup-sync tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync
1614 silly lockFile 7d251781-s-grunt-node-modules-findup-sync tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync
1615 info preinstall colors@0.6.2
1616 silly lockFile 20a627ad-pm-findup-sync-0-1-2-package-tgz tar:///home/ahmad/.npm/findup-sync/0.1.2/package.tgz
1617 silly lockFile 20a627ad-pm-findup-sync-0-1-2-package-tgz tar:///home/ahmad/.npm/findup-sync/0.1.2/package.tgz
1618 verbose readDependencies using package.json deps
1619 silly gunzTarPerm extractEntry lib/js-yaml/schema/minimal.js
1620 silly gunzTarPerm extractEntry lib/js-yaml/schema/safe.js
1621 verbose readDependencies using package.json deps
1622 verbose readDependencies using package.json deps
1623 verbose readDependencies using package.json deps
1624 silly resolved []
1625 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/colors
1626 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/colors
1627 verbose linkStuff [ false,
1627 verbose linkStuff   false,
1627 verbose linkStuff   false,
1627 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1628 info linkStuff colors@0.6.2
1629 verbose linkBins colors@0.6.2
1630 verbose linkMans colors@0.6.2
1631 verbose rebuildBundles colors@0.6.2
1632 info preinstall findup-sync@0.1.2
1633 info install colors@0.6.2
1634 verbose cache add [ 'abbrev@1', null ]
1635 verbose cache add name=undefined spec="abbrev@1" args=["abbrev@1",null]
1636 verbose parsed url { protocol: null,
1636 verbose parsed url   slashes: null,
1636 verbose parsed url   auth: null,
1636 verbose parsed url   host: null,
1636 verbose parsed url   port: null,
1636 verbose parsed url   hostname: null,
1636 verbose parsed url   hash: null,
1636 verbose parsed url   search: null,
1636 verbose parsed url   query: null,
1636 verbose parsed url   pathname: 'abbrev@1',
1636 verbose parsed url   path: 'abbrev@1',
1636 verbose parsed url   href: 'abbrev@1' }
1637 verbose cache add name="abbrev" spec="1" args=["abbrev","1"]
1638 verbose parsed url { protocol: null,
1638 verbose parsed url   slashes: null,
1638 verbose parsed url   auth: null,
1638 verbose parsed url   host: null,
1638 verbose parsed url   port: null,
1638 verbose parsed url   hostname: null,
1638 verbose parsed url   hash: null,
1638 verbose parsed url   search: null,
1638 verbose parsed url   query: null,
1638 verbose parsed url   pathname: '1',
1638 verbose parsed url   path: '1',
1638 verbose parsed url   href: '1' }
1639 verbose addNamed [ 'abbrev', '1' ]
1640 verbose addNamed [ null, '>=1.0.0-0 <2.0.0-0' ]
1641 silly lockFile 6830b531-abbrev-1 abbrev@1
1642 verbose lock abbrev@1 /home/ahmad/.npm/6830b531-abbrev-1.lock
1643 info postinstall colors@0.6.2
1644 silly addNameRange { name: 'abbrev', range: '>=1.0.0-0 <2.0.0-0', hasData: false }
1645 verbose readDependencies using package.json deps
1646 verbose readDependencies using package.json deps
1647 verbose cache add [ 'lodash@~1.0.1', null ]
1648 verbose cache add name=undefined spec="lodash@~1.0.1" args=["lodash@~1.0.1",null]
1649 verbose parsed url { protocol: null,
1649 verbose parsed url   slashes: null,
1649 verbose parsed url   auth: null,
1649 verbose parsed url   host: null,
1649 verbose parsed url   port: null,
1649 verbose parsed url   hostname: null,
1649 verbose parsed url   hash: null,
1649 verbose parsed url   search: null,
1649 verbose parsed url   query: null,
1649 verbose parsed url   pathname: 'lodash@~1.0.1',
1649 verbose parsed url   path: 'lodash@~1.0.1',
1649 verbose parsed url   href: 'lodash@~1.0.1' }
1650 verbose cache add name="lodash" spec="~1.0.1" args=["lodash","~1.0.1"]
1651 verbose parsed url { protocol: null,
1651 verbose parsed url   slashes: null,
1651 verbose parsed url   auth: null,
1651 verbose parsed url   host: null,
1651 verbose parsed url   port: null,
1651 verbose parsed url   hostname: null,
1651 verbose parsed url   hash: null,
1651 verbose parsed url   search: null,
1651 verbose parsed url   query: null,
1651 verbose parsed url   pathname: '~1.0.1',
1651 verbose parsed url   path: '~1.0.1',
1651 verbose parsed url   href: '~1.0.1' }
1652 verbose addNamed [ 'lodash', '~1.0.1' ]
1653 verbose addNamed [ null, '>=1.0.1-0 <1.1.0-0' ]
1654 silly lockFile 7309cd5e-lodash-1-0-1 lodash@~1.0.1
1655 verbose lock lodash@~1.0.1 /home/ahmad/.npm/7309cd5e-lodash-1-0-1.lock
1656 verbose url raw abbrev
1657 verbose url resolving [ 'https://registry.npmjs.org/', './abbrev' ]
1658 verbose url resolved https://registry.npmjs.org/abbrev
1659 info trying registry request attempt 1 at 23:47:43
1660 verbose etag "D3D3CY0UKRCNMTXM981W0XI5E"
1661 http GET https://registry.npmjs.org/abbrev
1662 silly addNameRange { name: 'lodash', range: '>=1.0.1-0 <1.1.0-0', hasData: false }
1663 verbose registry.get lodash not expired, no request
1664 silly addNameRange number 2 { name: 'lodash', range: '>=1.0.1-0 <1.1.0-0', hasData: true }
1665 silly addNameRange versions [ 'lodash',
1665 silly addNameRange   [ '0.1.0',
1665 silly addNameRange     '0.2.0',
1665 silly addNameRange     '0.2.1',
1665 silly addNameRange     '0.2.2',
1665 silly addNameRange     '0.3.0',
1665 silly addNameRange     '0.3.1',
1665 silly addNameRange     '0.3.2',
1665 silly addNameRange     '0.4.0',
1665 silly addNameRange     '0.4.1',
1665 silly addNameRange     '0.4.2',
1665 silly addNameRange     '0.5.0-rc.1',
1665 silly addNameRange     '0.5.0',
1665 silly addNameRange     '0.5.1',
1665 silly addNameRange     '0.5.2',
1665 silly addNameRange     '0.6.0',
1665 silly addNameRange     '0.6.1',
1665 silly addNameRange     '0.7.0',
1665 silly addNameRange     '0.8.0',
1665 silly addNameRange     '0.8.1',
1665 silly addNameRange     '0.8.2',
1665 silly addNameRange     '0.9.0',
1665 silly addNameRange     '0.9.1',
1665 silly addNameRange     '0.9.2',
1665 silly addNameRange     '0.10.0',
1665 silly addNameRange     '1.0.0-rc.1',
1665 silly addNameRange     '1.0.0-rc.2',
1665 silly addNameRange     '1.0.0-rc.3',
1665 silly addNameRange     '1.0.0',
1665 silly addNameRange     '1.0.1',
1665 silly addNameRange     '1.1.0',
1665 silly addNameRange     '1.1.1',
1665 silly addNameRange     '1.2.0',
1665 silly addNameRange     '1.2.1',
1665 silly addNameRange     '1.3.0',
1665 silly addNameRange     '1.3.1',
1665 silly addNameRange     '2.0.0',
1665 silly addNameRange     '2.1.0',
1665 silly addNameRange     '2.2.0',
1665 silly addNameRange     '2.2.1',
1665 silly addNameRange     '2.3.0' ] ]
1666 verbose addNamed [ 'lodash', '1.0.1' ]
1667 verbose addNamed [ '1.0.1', '1.0.1' ]
1668 silly lockFile e2e1e8db-lodash-1-0-1 lodash@1.0.1
1669 verbose lock lodash@1.0.1 /home/ahmad/.npm/e2e1e8db-lodash-1-0-1.lock
1670 silly gunzTarPerm extractEntry lib/js-yaml/type/binary.js
1671 silly gunzTarPerm extractEntry lib/js-yaml/type/int.js
1672 silly gunzTarPerm extractEntry test/test_underscore/collections.js
1673 silly gunzTarPerm extractEntry test/test_underscore/functions.js
1674 silly gunzTarPerm extractEntry lib/coffee-script/lexer.js
1675 silly gunzTarPerm extractEntry test/greek-test.js
1676 silly gunzTarPerm extractEntry test/main-test.js
1677 silly gunzTarPerm extractEntry lib/js-yaml/type/str.js
1678 silly gunzTarPerm extractEntry lib/js-yaml/type/map.js
1679 silly lockFile e2e1e8db-lodash-1-0-1 lodash@1.0.1
1680 silly lockFile e2e1e8db-lodash-1-0-1 lodash@1.0.1
1681 silly lockFile 7309cd5e-lodash-1-0-1 lodash@~1.0.1
1682 silly lockFile 7309cd5e-lodash-1-0-1 lodash@~1.0.1
1683 silly resolved [ { name: 'lodash',
1683 silly resolved     version: '1.0.1',
1683 silly resolved     description: 'A utility library delivering consistency, customization, performance, and extras.',
1683 silly resolved     homepage: 'http://lodash.com/',
1683 silly resolved     license: 'MIT',
1683 silly resolved     main: './dist/lodash.js',
1683 silly resolved     keywords:
1683 silly resolved      [ 'browser',
1683 silly resolved        'client',
1683 silly resolved        'functional',
1683 silly resolved        'performance',
1683 silly resolved        'server',
1683 silly resolved        'speed',
1683 silly resolved        'util' ],
1683 silly resolved     author:
1683 silly resolved      { name: 'John-David Dalton',
1683 silly resolved        email: 'john.david.dalton@gmail.com',
1683 silly resolved        url: 'http://allyoucanleet.com/' },
1683 silly resolved     contributors: [ [Object], [Object], [Object], [Object] ],
1683 silly resolved     bugs: { url: 'https://github.com/lodash/lodash/issues' },
1683 silly resolved     repository: { type: 'git', url: 'https://github.com/lodash/lodash.git' },
1683 silly resolved     engines: [ 'node', 'rhino' ],
1683 silly resolved     jam: { main: './dist/lodash.compat.js' },
1683 silly resolved     readme: '# Lo-Dash v1.0.1\n\nA utility library delivering consistency, [customization](http://lodash.com/custom-builds), [performance](http://lodash.com/benchmarks), & [extras](http://lodash.com/#features).\n\n## Download\n\n* Lo-Dash builds (for modern environments):<br>\n[Development](https://raw.github.com/lodash/lodash/v1.0.1/dist/lodash.js) and\n[Production](https://raw.github.com/lodash/lodash/v1.0.1/dist/lodash.min.js)\n\n* Lo-Dash compatibility builds (for legacy and modern environments):<br>\n[Development](https://raw.github.com/lodash/lodash/v1.0.1/dist/lodash.compat.js) and\n[Production](https://raw.github.com/lodash/lodash/v1.0.1/dist/lodash.compat.min.js)\n\n* Underscore compatibility builds:<br>\n[Development](https://raw.github.com/lodash/lodash/v1.0.1/dist/lodash.underscore.js) and\n[Production](https://raw.github.com/lodash/lodash/v1.0.1/dist/lodash.underscore.min.js)\n\n* CDN copies of ≤ v1.0.1’s builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/):<br>\n[Lo-Dash dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.js),\n[Lo-Dash prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.min.js),<br>\n[Lo-Dash compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.compat.js),\n[Lo-Dash compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.compat.min.js),<br>\n[Underscore compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.underscore.js), and\n[Underscore compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.underscore.min.js)\n\n* For optimal file size, [create a custom build](http://lodash.com/custom-builds) with only the features you need\n\n## Dive in\n\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\n\nFor a list of upcoming features, check out our [roadmap](https://github.com/lodash/lodash/wiki/Roadmap).\n\n## Resources\n\nFor more information check out these articles, screencasts, and other videos over Lo-Dash:\n\n * Posts\n  - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\n\n * Videos\n  - [Introducing Lo-Dash](https://vimeo.com/44154599)\n  - [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\n  - [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\n  - [Unit testing in Lo-Dash](https://vimeo.com/45865290)\n  - [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\n  - [CascadiaJS: Lo-Dash for a better utility belt](http://www.youtube.com/watch?v=dpPy4f_SeEk)\n\n## Features\n\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\n * [_(…)](http://lodash.com/docs#_) supports intuitive chaining\n * [_.at](http://lodash.com/docs#at) for cherry-picking collection values\n * [_.bindKey](http://lodash.com/docs#bindKey) for binding [*“lazy”* defined](http://michaux.ca/articles/lazy-function-definition-pattern) methods\n * [_.cloneDeep](http://lodash.com/docs#cloneDeep) for deep cloning arrays and objects\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\n * [_.merge](http://lodash.com/docs#merge) for a deep [_.extend](http://lodash.com/docs#extend)\n * [_.partial](http://lodash.com/docs#partial) and [_.partialRight](http://lodash.com/docs#partialRight) for partial application without `this` binding\n * [_.template](http://lodash.com/docs#template) supports [*“imports”* options](http://lodash.com/docs#templateSettings_imports), [ES6 template delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6), and [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * [_.where](http://lodash.com/docs#where) supports deep object comparisons\n * [_.clone](http://lodash.com/docs#clone), [_.omit](http://lodash.com/docs#omit), [_.pick](http://lodash.com/docs#pick),\n   [and more…](http://lodash.com/docs "_.assign, _.cloneDeep, _.first, _.initial, _.isEqual, _.last, _.merge, _.rest") accept `callback` and `thisArg` arguments\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\n   [and more…](http://lodash.com/docs "_.at, _.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where") accept strings\n * [_.filter](http://lodash.com/docs#filter), [_.find](http://lodash.com/docs#find), [_.map](http://lodash.com/docs#map),\n   [and more…](http://lodash.com/docs "_.countBy, _.every, _.first, _.groupBy, _.initial, _.last, _.max, _.min, _.reject, _.rest, _.some, _.sortBy, _.sortedIndex, _.uniq") support *“_.pluck”* and *“_.where”* `callback` shorthands\n\n## Support\n\nLo-Dash has been tested in at least Chrome 5~24, Firefox 1~18, IE 6-10, Opera 9.25-12, Safari 3-6, Node.js 0.4.8-0.8.20, Narwhal 0.3.2, PhantomJS 1.8.1, RingoJS 0.9, and Rhino 1.7RC5.\n\n## Installation and usage\n\nIn browsers:\n\n```html\n<script src="lodash.js"></script>\n```\n\nUsing [`npm`](http://npmjs.org/):\n\n```bash\nnpm install lodash\n\nnpm install -g lodash\nnpm link lodash\n```\n\nTo avoid potential issues, update `npm` before installing Lo-Dash:\n\n```bash\nnpm install npm -g\n```\n\nIn [Node.js](http://nodejs.org/) and [RingoJS v0.8.0+](http://ringojs.org/):\n\n```js\nvar _ = require(\'lodash\');\n\n// or as a drop-in replacement for Underscore\nvar _ = require(\'lodash/lodash.underscore\');\n```\n\n**Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n\nIn [RingoJS v0.7.0-](http://ringojs.org/):\n\n```js\nvar _ = require(\'lodash\')._;\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload(\'lodash.js\');\n```\n\nIn an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire({\n  \'paths\': {\n    \'underscore\': \'path/to/lodash\'\n  }\n},\n[\'underscore\'], function(_) {\n  console.log(_.VERSION);\n});\n```\n\n## Release Notes\n\n### <sup>v1.0.1</sup>\n\n * Add support for specifying source map URLs in `-p`/`--source-map` build options\n * Ensured the second argument passed to `_.assign` is not treated as a `callback`\n * Ensured `-p`/`--source-map` build options correctly set the `sourceMappingURL`\n * Made `-p`/`--source-map` build options set source map *“sources”* keys based on the builds performed\n * Made `_.defer` use `setImmediate`, in Node.js, when available\n * Made `_.where` search arrays for values regardless of their index position\n * Removed dead code from `_.template`\n\nThe full changelog is available [here](https://github.com/lodash/lodash/wiki/Changelog).\n\n## BestieJS\n\nLo-Dash is part of the [BestieJS](https://github.com/bestiejs) *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5 precedents, unit testing, and plenty of documentation.\n\n## Author\n\n| [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](http://twitter.com/jdalton "Follow @jdalton on Twitter") |\n|---|\n| [John-David Dalton](http://allyoucanleet.com/) |\n\n## Contributors\n\n| [![twitter/blainebublitz](http://gravatar.com/avatar/ac1c67fd906c9fecd823ce302283b4c1?s=70)](http://twitter.com/blainebublitz "Follow @BlaineBublitz on Twitter") | [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge "Follow @kitcambridge on Twitter") | [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias "Follow @mathias on Twitter") |\n|---|---|---|\n| [Blaine Bublitz](http://iceddev.com/) | [Kit Cambridge](http://kitcambridge.github.io/) | [Mathias Bynens](http://mathiasbynens.be/) |\n',
1683 silly resolved     readmeFilename: 'README.md',
1683 silly resolved     _id: 'lodash@1.0.1',
1683 silly resolved     _from: 'lodash@~1.0.1' } ]
1684 info install lodash@1.0.1 into /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync
1685 info installOne lodash@1.0.1
1686 info /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash unbuild
1687 silly gunzTarPerm extractEntry test/test_underscore/objects.js
1688 silly gunzTarPerm extractEntry test/test_underscore/chaining.js
1689 verbose tar unpack /home/ahmad/.npm/lodash/1.0.1/package.tgz
1690 silly lockFile 0fc8fc8c--findup-sync-node-modules-lodash tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash
1691 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash /home/ahmad/.npm/0fc8fc8c--findup-sync-node-modules-lodash.lock
1692 silly lockFile 7d6980d3-mad-npm-lodash-1-0-1-package-tgz tar:///home/ahmad/.npm/lodash/1.0.1/package.tgz
1693 verbose lock tar:///home/ahmad/.npm/lodash/1.0.1/package.tgz /home/ahmad/.npm/7d6980d3-mad-npm-lodash-1-0-1-package-tgz.lock
1694 silly gunzTarPerm modes [ '755', '644' ]
1695 silly gunzTarPerm extractEntry lib/js-yaml/type/float.js
1696 silly gunzTarPerm extractEntry lib/js-yaml/type/bool.js
1697 silly gunzTarPerm extractEntry package.json
1698 silly gunzTarPerm extractEntry test/test_underscore/temp.js
1699 silly gunzTarPerm extractEntry test/test_underscore/utility.js
1700 silly gunzTarPerm extractEntry README.md
1701 silly gunzTarPerm extractEntry dist/lodash.compat.js
1702 silly lockFile 3d0876f4-odules-grunt-node-modules-hooker tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/hooker
1703 silly lockFile 3d0876f4-odules-grunt-node-modules-hooker tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/hooker
1704 silly lockFile 8865e60f-mad-npm-hooker-0-2-3-package-tgz tar:///home/ahmad/.npm/hooker/0.2.3/package.tgz
1705 silly lockFile 8865e60f-mad-npm-hooker-0-2-3-package-tgz tar:///home/ahmad/.npm/hooker/0.2.3/package.tgz
1706 silly lockFile 247e0897-modules-grunt-node-modules-async tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/async
1707 silly lockFile 247e0897-modules-grunt-node-modules-async tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/async
1708 silly lockFile 445f286d-mad-npm-async-0-1-22-package-tgz tar:///home/ahmad/.npm/async/0.1.22/package.tgz
1709 silly lockFile 445f286d-mad-npm-async-0-1-22-package-tgz tar:///home/ahmad/.npm/async/0.1.22/package.tgz
1710 silly gunzTarPerm extractEntry dist/lodash.compat.min.js
1711 info preinstall hooker@0.2.3
1712 info preinstall async@0.1.22
1713 verbose readDependencies using package.json deps
1714 verbose readDependencies using package.json deps
1715 silly resolved []
1716 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/hooker
1717 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/hooker
1718 verbose linkStuff [ false,
1718 verbose linkStuff   false,
1718 verbose linkStuff   false,
1718 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1719 info linkStuff hooker@0.2.3
1720 verbose linkBins hooker@0.2.3
1721 verbose linkMans hooker@0.2.3
1722 verbose rebuildBundles hooker@0.2.3
1723 verbose readDependencies using package.json deps
1724 info install hooker@0.2.3
1725 verbose readDependencies using package.json deps
1726 silly resolved []
1727 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/async
1728 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/async
1729 verbose linkStuff [ false,
1729 verbose linkStuff   false,
1729 verbose linkStuff   false,
1729 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1730 info linkStuff async@0.1.22
1731 verbose linkBins async@0.1.22
1732 verbose linkMans async@0.1.22
1733 verbose rebuildBundles async@0.1.22
1734 info install async@0.1.22
1735 info postinstall hooker@0.2.3
1736 info postinstall async@0.1.22
1737 silly lockFile a96b7a49-les-grunt-node-modules-minimatch tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
1738 silly lockFile a96b7a49-les-grunt-node-modules-minimatch tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
1739 silly lockFile fca71e6c-npm-minimatch-0-2-12-package-tgz tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz
1740 silly lockFile fca71e6c-npm-minimatch-0-2-12-package-tgz tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz
1741 silly gunzTarPerm extractEntry lib/js-yaml/type/omap.js
1742 silly gunzTarPerm extractEntry lib/js-yaml/type/pairs.js
1743 info preinstall minimatch@0.2.12
1744 verbose readDependencies using package.json deps
1745 verbose readDependencies using package.json deps
1746 silly gunzTarPerm extractEntry lib/js-yaml/type/seq.js
1747 silly gunzTarPerm extractEntry lib/js-yaml/type/set.js
1748 silly lockFile 045b1ded-2008-0-27322769188322127-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1749 silly lockFile 045b1ded-2008-0-27322769188322127-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724852008-0.27322769188322127/package
1750 verbose cache add [ 'lru-cache@2', null ]
1751 verbose cache add name=undefined spec="lru-cache@2" args=["lru-cache@2",null]
1752 verbose parsed url { protocol: null,
1752 verbose parsed url   slashes: null,
1752 verbose parsed url   auth: null,
1752 verbose parsed url   host: null,
1752 verbose parsed url   port: null,
1752 verbose parsed url   hostname: null,
1752 verbose parsed url   hash: null,
1752 verbose parsed url   search: null,
1752 verbose parsed url   query: null,
1752 verbose parsed url   pathname: 'lru-cache@2',
1752 verbose parsed url   path: 'lru-cache@2',
1752 verbose parsed url   href: 'lru-cache@2' }
1753 verbose cache add name="lru-cache" spec="2" args=["lru-cache","2"]
1754 verbose parsed url { protocol: null,
1754 verbose parsed url   slashes: null,
1754 verbose parsed url   auth: null,
1754 verbose parsed url   host: null,
1754 verbose parsed url   port: null,
1754 verbose parsed url   hostname: null,
1754 verbose parsed url   hash: null,
1754 verbose parsed url   search: null,
1754 verbose parsed url   query: null,
1754 verbose parsed url   pathname: '2',
1754 verbose parsed url   path: '2',
1754 verbose parsed url   href: '2' }
1755 verbose addNamed [ 'lru-cache', '2' ]
1756 verbose addNamed [ null, '>=2.0.0-0 <3.0.0-0' ]
1757 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
1758 verbose lock lru-cache@2 /home/ahmad/.npm/b4f9d1ff-lru-cache-2.lock
1759 verbose cache add [ 'sigmund@~1.0.0', null ]
1760 verbose cache add name=undefined spec="sigmund@~1.0.0" args=["sigmund@~1.0.0",null]
1761 verbose parsed url { protocol: null,
1761 verbose parsed url   slashes: null,
1761 verbose parsed url   auth: null,
1761 verbose parsed url   host: null,
1761 verbose parsed url   port: null,
1761 verbose parsed url   hostname: null,
1761 verbose parsed url   hash: null,
1761 verbose parsed url   search: null,
1761 verbose parsed url   query: null,
1761 verbose parsed url   pathname: 'sigmund@~1.0.0',
1761 verbose parsed url   path: 'sigmund@~1.0.0',
1761 verbose parsed url   href: 'sigmund@~1.0.0' }
1762 verbose cache add name="sigmund" spec="~1.0.0" args=["sigmund","~1.0.0"]
1763 verbose parsed url { protocol: null,
1763 verbose parsed url   slashes: null,
1763 verbose parsed url   auth: null,
1763 verbose parsed url   host: null,
1763 verbose parsed url   port: null,
1763 verbose parsed url   hostname: null,
1763 verbose parsed url   hash: null,
1763 verbose parsed url   search: null,
1763 verbose parsed url   query: null,
1763 verbose parsed url   pathname: '~1.0.0',
1763 verbose parsed url   path: '~1.0.0',
1763 verbose parsed url   href: '~1.0.0' }
1764 verbose addNamed [ 'sigmund', '~1.0.0' ]
1765 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
1766 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
1767 verbose lock sigmund@~1.0.0 /home/ahmad/.npm/584a4a05-sigmund-1-0-0.lock
1768 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1769 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1770 silly gunzTarPerm extractEntry dist/lodash.js
1771 silly addNameRange { name: 'lru-cache',
1771 silly addNameRange   range: '>=2.0.0-0 <3.0.0-0',
1771 silly addNameRange   hasData: false }
1772 silly addNameRange { name: 'sigmund', range: '>=1.0.0-0 <1.1.0-0', hasData: false }
1773 silly gunzTarPerm extractEntry dist/lodash.min.js
1774 silly lockFile cfa01603--grunt-lib-contrib-0-6-1-package /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package
1775 verbose lock /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package /home/ahmad/.npm/cfa01603--grunt-lib-contrib-0-6-1-package.lock
1776 verbose url raw lru-cache
1777 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache' ]
1778 verbose url resolved https://registry.npmjs.org/lru-cache
1779 info trying registry request attempt 1 at 23:47:43
1780 verbose etag "14VF40U499GDAIDK33TEOG56Q"
1781 http GET https://registry.npmjs.org/lru-cache
1782 verbose url raw sigmund
1783 verbose url resolving [ 'https://registry.npmjs.org/', './sigmund' ]
1784 verbose url resolved https://registry.npmjs.org/sigmund
1785 info trying registry request attempt 1 at 23:47:43
1786 verbose etag "BAAVPGGBONNEW4H9S234JOULZ"
1787 http GET https://registry.npmjs.org/sigmund
1788 silly lockFile cfa01603--grunt-lib-contrib-0-6-1-package /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package
1789 silly lockFile cfa01603--grunt-lib-contrib-0-6-1-package /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package
1790 verbose tar unpack /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1791 silly lockFile 5b0510cb--grunt-lib-contrib-0-6-1-package tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package
1792 verbose lock tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package /home/ahmad/.npm/5b0510cb--grunt-lib-contrib-0-6-1-package.lock
1793 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1794 verbose lock tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz /home/ahmad/.npm/6e7f71a4-nt-lib-contrib-0-6-1-package-tgz.lock
1795 silly gunzTarPerm extractEntry test/test_underscore/speed.js
1796 silly gunzTarPerm extractEntry test/test_underscore/test.html
1797 silly gunzTarPerm modes [ '755', '644' ]
1798 silly gunzTarPerm extractEntry package.json
1799 silly gunzTarPerm extractEntry test/test_underscore/temp_tests.html
1800 silly gunzTarPerm extractEntry test/test_underscore/vendor/jquery.js
1801 silly gunzTarPerm extractEntry .npmignore
1802 silly gunzTarPerm extractEntry README.md
1803 silly gunzTarPerm extractEntry Gruntfile.js
1804 silly gunzTarPerm extractEntry AUTHORS
1805 silly gunzTarPerm extractEntry CHANGELOG
1806 silly gunzTarPerm extractEntry .jshintrc
1807 silly gunzTarPerm extractEntry LICENSE-MIT
1808 silly gunzTarPerm extractEntry .gitattributes
1809 silly gunzTarPerm extractEntry lib/contrib.js
1810 silly gunzTarPerm extractEntry .travis.yml
1811 silly gunzTarPerm extractEntry test/lib_test.js
1812 silly lockFile c20b8128--modules-grunt-node-modules-glob tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob
1813 silly lockFile c20b8128--modules-grunt-node-modules-glob tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob
1814 silly lockFile 61ee9c49-hmad-npm-glob-3-1-21-package-tgz tar:///home/ahmad/.npm/glob/3.1.21/package.tgz
1815 silly lockFile 61ee9c49-hmad-npm-glob-3-1-21-package-tgz tar:///home/ahmad/.npm/glob/3.1.21/package.tgz
1816 silly gunzTarPerm extractEntry lib/js-yaml/type/merge.js
1817 silly gunzTarPerm extractEntry lib/js-yaml/type/timestamp.js
1818 info preinstall glob@3.1.21
1819 silly gunzTarPerm extractEntry test/test_underscore/vendor/jslitmus.js
1820 silly gunzTarPerm extractEntry test/test_underscore/vendor/qunit.js
1821 silly gunzTarPerm extractEntry test/test_underscore/vendor/qunit.css
1822 verbose readDependencies using package.json deps
1823 verbose readDependencies using package.json deps
1824 verbose cache add [ 'graceful-fs@~1.2.0', null ]
1825 verbose cache add name=undefined spec="graceful-fs@~1.2.0" args=["graceful-fs@~1.2.0",null]
1826 verbose parsed url { protocol: null,
1826 verbose parsed url   slashes: null,
1826 verbose parsed url   auth: null,
1826 verbose parsed url   host: null,
1826 verbose parsed url   port: null,
1826 verbose parsed url   hostname: null,
1826 verbose parsed url   hash: null,
1826 verbose parsed url   search: null,
1826 verbose parsed url   query: null,
1826 verbose parsed url   pathname: 'graceful-fs@~1.2.0',
1826 verbose parsed url   path: 'graceful-fs@~1.2.0',
1826 verbose parsed url   href: 'graceful-fs@~1.2.0' }
1827 verbose cache add name="graceful-fs" spec="~1.2.0" args=["graceful-fs","~1.2.0"]
1828 verbose parsed url { protocol: null,
1828 verbose parsed url   slashes: null,
1828 verbose parsed url   auth: null,
1828 verbose parsed url   host: null,
1828 verbose parsed url   port: null,
1828 verbose parsed url   hostname: null,
1828 verbose parsed url   hash: null,
1828 verbose parsed url   search: null,
1828 verbose parsed url   query: null,
1828 verbose parsed url   pathname: '~1.2.0',
1828 verbose parsed url   path: '~1.2.0',
1828 verbose parsed url   href: '~1.2.0' }
1829 verbose addNamed [ 'graceful-fs', '~1.2.0' ]
1830 verbose addNamed [ null, '>=1.2.0-0 <1.3.0-0' ]
1831 silly lockFile 9c0bb906-graceful-fs-1-2-0 graceful-fs@~1.2.0
1832 verbose lock graceful-fs@~1.2.0 /home/ahmad/.npm/9c0bb906-graceful-fs-1-2-0.lock
1833 verbose cache add [ 'inherits@1', null ]
1834 verbose cache add name=undefined spec="inherits@1" args=["inherits@1",null]
1835 verbose parsed url { protocol: null,
1835 verbose parsed url   slashes: null,
1835 verbose parsed url   auth: null,
1835 verbose parsed url   host: null,
1835 verbose parsed url   port: null,
1835 verbose parsed url   hostname: null,
1835 verbose parsed url   hash: null,
1835 verbose parsed url   search: null,
1835 verbose parsed url   query: null,
1835 verbose parsed url   pathname: 'inherits@1',
1835 verbose parsed url   path: 'inherits@1',
1835 verbose parsed url   href: 'inherits@1' }
1836 verbose cache add name="inherits" spec="1" args=["inherits","1"]
1837 verbose parsed url { protocol: null,
1837 verbose parsed url   slashes: null,
1837 verbose parsed url   auth: null,
1837 verbose parsed url   host: null,
1837 verbose parsed url   port: null,
1837 verbose parsed url   hostname: null,
1837 verbose parsed url   hash: null,
1837 verbose parsed url   search: null,
1837 verbose parsed url   query: null,
1837 verbose parsed url   pathname: '1',
1837 verbose parsed url   path: '1',
1837 verbose parsed url   href: '1' }
1838 verbose addNamed [ 'inherits', '1' ]
1839 verbose addNamed [ null, '>=1.0.0-0 <2.0.0-0' ]
1840 silly lockFile 4bca46d0-inherits-1 inherits@1
1841 verbose lock inherits@1 /home/ahmad/.npm/4bca46d0-inherits-1.lock
1842 silly addNameRange { name: 'graceful-fs',
1842 silly addNameRange   range: '>=1.2.0-0 <1.3.0-0',
1842 silly addNameRange   hasData: false }
1843 silly addNameRange { name: 'inherits', range: '>=1.0.0-0 <2.0.0-0', hasData: false }
1844 silly gunzTarPerm extractEntry lib/js-yaml/type/null.js
1845 silly gunzTarPerm extractEntry lib/js-yaml/type/js/function.js
1846 verbose url raw graceful-fs
1847 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
1848 verbose url resolved https://registry.npmjs.org/graceful-fs
1849 info trying registry request attempt 1 at 23:47:44
1850 verbose etag "8VTIGE3KHXX4861152PVTWGF8"
1851 http GET https://registry.npmjs.org/graceful-fs
1852 verbose url raw inherits
1853 verbose url resolving [ 'https://registry.npmjs.org/', './inherits' ]
1854 verbose url resolved https://registry.npmjs.org/inherits
1855 info trying registry request attempt 1 at 23:47:44
1856 verbose etag "3BB9CXXI1GQW1OTCNLR8KNUQW"
1857 http GET https://registry.npmjs.org/inherits
1858 silly gunzTarPerm extractEntry lib/js-yaml/type/js/regexp.js
1859 silly gunzTarPerm extractEntry lib/js-yaml/type/js/undefined.js
1860 silly lockFile 5b0510cb--grunt-lib-contrib-0-6-1-package tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package
1861 silly lockFile 5b0510cb--grunt-lib-contrib-0-6-1-package tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package
1862 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1863 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
1864 verbose chmod /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz 644
1865 verbose chown /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz [ 1000, 1000 ]
1866 silly lockFile 53fc1c4c-trib-grunt-lib-contrib-0-6-1-tgz https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz
1867 silly lockFile 53fc1c4c-trib-grunt-lib-contrib-0-6-1-tgz https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz
1868 silly lockFile 0ef65a81-grunt-lib-contrib-0-6-1 grunt-lib-contrib@0.6.1
1869 silly lockFile 0ef65a81-grunt-lib-contrib-0-6-1 grunt-lib-contrib@0.6.1
1870 silly lockFile a97902f4-grunt-lib-contrib-0-6-1 grunt-lib-contrib@~0.6.1
1871 silly lockFile a97902f4-grunt-lib-contrib-0-6-1 grunt-lib-contrib@~0.6.1
1872 silly lockFile a68fde42-dules-grunt-node-modules-js-yaml tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
1873 silly lockFile a68fde42-dules-grunt-node-modules-js-yaml tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
1874 silly lockFile 2d90e30f-ad-npm-js-yaml-2-0-5-package-tgz tar:///home/ahmad/.npm/js-yaml/2.0.5/package.tgz
1875 silly lockFile 2d90e30f-ad-npm-js-yaml-2-0-5-package-tgz tar:///home/ahmad/.npm/js-yaml/2.0.5/package.tgz
1876 info preinstall js-yaml@2.0.5
1877 silly gunzTarPerm extractEntry dist/lodash.underscore.js
1878 verbose readDependencies using package.json deps
1879 verbose readDependencies using package.json deps
1880 verbose cache add [ 'argparse@~ 0.1.11', null ]
1881 verbose cache add name=undefined spec="argparse@~ 0.1.11" args=["argparse@~ 0.1.11",null]
1882 verbose parsed url { protocol: null,
1882 verbose parsed url   slashes: null,
1882 verbose parsed url   auth: null,
1882 verbose parsed url   host: null,
1882 verbose parsed url   port: null,
1882 verbose parsed url   hostname: null,
1882 verbose parsed url   hash: null,
1882 verbose parsed url   search: null,
1882 verbose parsed url   query: null,
1882 verbose parsed url   pathname: 'argparse@~%200.1.11',
1882 verbose parsed url   path: 'argparse@~%200.1.11',
1882 verbose parsed url   href: 'argparse@~%200.1.11' }
1883 verbose cache add name="argparse" spec="~ 0.1.11" args=["argparse","~ 0.1.11"]
1884 verbose parsed url { protocol: null,
1884 verbose parsed url   slashes: null,
1884 verbose parsed url   auth: null,
1884 verbose parsed url   host: null,
1884 verbose parsed url   port: null,
1884 verbose parsed url   hostname: null,
1884 verbose parsed url   hash: null,
1884 verbose parsed url   search: null,
1884 verbose parsed url   query: null,
1884 verbose parsed url   pathname: '~%200.1.11',
1884 verbose parsed url   path: '~%200.1.11',
1884 verbose parsed url   href: '~%200.1.11' }
1885 verbose addNamed [ 'argparse', '~ 0.1.11' ]
1886 verbose addNamed [ null, '>=0.1.11-0 <0.2.0-0' ]
1887 silly lockFile 4775a11d-argparse-0-1-11 argparse@~ 0.1.11
1888 verbose lock argparse@~ 0.1.11 /home/ahmad/.npm/4775a11d-argparse-0-1-11.lock
1889 verbose cache add [ 'esprima@~ 1.0.2', null ]
1890 verbose cache add name=undefined spec="esprima@~ 1.0.2" args=["esprima@~ 1.0.2",null]
1891 verbose parsed url { protocol: null,
1891 verbose parsed url   slashes: null,
1891 verbose parsed url   auth: null,
1891 verbose parsed url   host: null,
1891 verbose parsed url   port: null,
1891 verbose parsed url   hostname: null,
1891 verbose parsed url   hash: null,
1891 verbose parsed url   search: null,
1891 verbose parsed url   query: null,
1891 verbose parsed url   pathname: 'esprima@~%201.0.2',
1891 verbose parsed url   path: 'esprima@~%201.0.2',
1891 verbose parsed url   href: 'esprima@~%201.0.2' }
1892 verbose cache add name="esprima" spec="~ 1.0.2" args=["esprima","~ 1.0.2"]
1893 verbose parsed url { protocol: null,
1893 verbose parsed url   slashes: null,
1893 verbose parsed url   auth: null,
1893 verbose parsed url   host: null,
1893 verbose parsed url   port: null,
1893 verbose parsed url   hostname: null,
1893 verbose parsed url   hash: null,
1893 verbose parsed url   search: null,
1893 verbose parsed url   query: null,
1893 verbose parsed url   pathname: '~%201.0.2',
1893 verbose parsed url   path: '~%201.0.2',
1893 verbose parsed url   href: '~%201.0.2' }
1894 verbose addNamed [ 'esprima', '~ 1.0.2' ]
1895 verbose addNamed [ null, '>=1.0.2-0 <1.1.0-0' ]
1896 silly lockFile f16a0183-esprima-1-0-2 esprima@~ 1.0.2
1897 verbose lock esprima@~ 1.0.2 /home/ahmad/.npm/f16a0183-esprima-1-0-2.lock
1898 silly addNameRange { name: 'argparse',
1898 silly addNameRange   range: '>=0.1.11-0 <0.2.0-0',
1898 silly addNameRange   hasData: false }
1899 silly addNameRange { name: 'esprima', range: '>=1.0.2-0 <1.1.0-0', hasData: false }
1900 verbose url raw argparse
1901 verbose url resolving [ 'https://registry.npmjs.org/', './argparse' ]
1902 verbose url resolved https://registry.npmjs.org/argparse
1903 info trying registry request attempt 1 at 23:47:44
1904 verbose etag "213VYVCDP4M8X8HSGNVO8J09R"
1905 http GET https://registry.npmjs.org/argparse
1906 verbose url raw esprima
1907 verbose url resolving [ 'https://registry.npmjs.org/', './esprima' ]
1908 verbose url resolved https://registry.npmjs.org/esprima
1909 info trying registry request attempt 1 at 23:47:44
1910 verbose etag "7UR341PV11GZJUL9IBFB9RU48"
1911 http GET https://registry.npmjs.org/esprima
1912 silly gunzTarPerm extractEntry dist/lodash.underscore.min.js
1913 silly lockFile 6e90eb89-odules-grunt-node-modules-lodash tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/lodash
1914 silly lockFile 6e90eb89-odules-grunt-node-modules-lodash tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/lodash
1915 silly lockFile 09b6a2b8-mad-npm-lodash-0-9-2-package-tgz tar:///home/ahmad/.npm/lodash/0.9.2/package.tgz
1916 silly lockFile 09b6a2b8-mad-npm-lodash-0-9-2-package-tgz tar:///home/ahmad/.npm/lodash/0.9.2/package.tgz
1917 info preinstall lodash@0.9.2
1918 verbose readDependencies using package.json deps
1919 verbose readDependencies using package.json deps
1920 silly resolved []
1921 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/lodash
1922 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/lodash
1923 verbose linkStuff [ false,
1923 verbose linkStuff   false,
1923 verbose linkStuff   false,
1923 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1924 info linkStuff lodash@0.9.2
1925 verbose linkBins lodash@0.9.2
1926 verbose linkMans lodash@0.9.2
1927 verbose rebuildBundles lodash@0.9.2
1928 info install lodash@0.9.2
1929 info postinstall lodash@0.9.2
1930 silly gunzTarPerm extractEntry test/performance.js
1931 silly gunzTarPerm extractEntry test/turkish-test.js
1932 silly gunzTarPerm extractEntry test/big5File.txt
1933 silly gunzTarPerm extractEntry test/gbkFile.txt
1934 silly lockFile 91e099d8-grunt-node-modules-coffee-script tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script
1935 silly lockFile 91e099d8-grunt-node-modules-coffee-script tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script
1936 silly lockFile 5a132db2--coffee-script-1-3-3-package-tgz tar:///home/ahmad/.npm/coffee-script/1.3.3/package.tgz
1937 silly lockFile 5a132db2--coffee-script-1-3-3-package-tgz tar:///home/ahmad/.npm/coffee-script/1.3.3/package.tgz
1938 info preinstall coffee-script@1.3.3
1939 verbose readDependencies using package.json deps
1940 verbose readDependencies using package.json deps
1941 silly resolved []
1942 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script
1943 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/coffee-script
1944 verbose linkStuff [ false,
1944 verbose linkStuff   false,
1944 verbose linkStuff   false,
1944 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1945 info linkStuff coffee-script@1.3.3
1946 verbose linkBins coffee-script@1.3.3
1947 verbose link bins [ { coffee: './bin/coffee', cake: './bin/cake' },
1947 verbose link bins   '/var/www/sites/marker/http/node_modules/grunt/node_modules/.bin',
1947 verbose link bins   false ]
1948 verbose linkMans coffee-script@1.3.3
1949 verbose rebuildBundles coffee-script@1.3.3
1950 info install coffee-script@1.3.3
1951 info postinstall coffee-script@1.3.3
1952 silly lockFile cb63378a-t-node-modules-underscore-string tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string
1953 silly lockFile cb63378a-t-node-modules-underscore-string tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string
1954 silly lockFile e584a753-erscore-string-2-2-1-package-tgz tar:///home/ahmad/.npm/underscore.string/2.2.1/package.tgz
1955 silly lockFile e584a753-erscore-string-2-2-1-package-tgz tar:///home/ahmad/.npm/underscore.string/2.2.1/package.tgz
1956 info preinstall underscore.string@2.2.1
1957 verbose readDependencies using package.json deps
1958 verbose readDependencies using package.json deps
1959 silly resolved []
1960 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string
1961 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/underscore.string
1962 verbose linkStuff [ false,
1962 verbose linkStuff   false,
1962 verbose linkStuff   false,
1962 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1963 info linkStuff underscore.string@2.2.1
1964 verbose linkBins underscore.string@2.2.1
1965 verbose linkMans underscore.string@2.2.1
1966 verbose rebuildBundles underscore.string@2.2.1
1967 info install underscore.string@2.2.1
1968 info postinstall underscore.string@2.2.1
1969 silly lockFile 0fc8fc8c--findup-sync-node-modules-lodash tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash
1970 silly lockFile 0fc8fc8c--findup-sync-node-modules-lodash tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash
1971 silly lockFile 7d6980d3-mad-npm-lodash-1-0-1-package-tgz tar:///home/ahmad/.npm/lodash/1.0.1/package.tgz
1972 silly lockFile 7d6980d3-mad-npm-lodash-1-0-1-package-tgz tar:///home/ahmad/.npm/lodash/1.0.1/package.tgz
1973 info preinstall lodash@1.0.1
1974 verbose readDependencies using package.json deps
1975 verbose readDependencies using package.json deps
1976 silly resolved []
1977 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash
1978 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules/lodash
1979 verbose linkStuff [ false,
1979 verbose linkStuff   false,
1979 verbose linkStuff   false,
1979 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync/node_modules' ]
1980 info linkStuff lodash@1.0.1
1981 verbose linkBins lodash@1.0.1
1982 verbose linkMans lodash@1.0.1
1983 verbose rebuildBundles lodash@1.0.1
1984 info install lodash@1.0.1
1985 info postinstall lodash@1.0.1
1986 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync
1987 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/findup-sync
1988 verbose linkStuff [ false,
1988 verbose linkStuff   false,
1988 verbose linkStuff   false,
1988 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
1989 info linkStuff findup-sync@0.1.2
1990 verbose linkBins findup-sync@0.1.2
1991 verbose linkMans findup-sync@0.1.2
1992 verbose rebuildBundles findup-sync@0.1.2
1993 verbose rebuildBundles [ 'lodash' ]
1994 info install findup-sync@0.1.2
1995 info postinstall findup-sync@0.1.2
1996 silly lockFile 0bc272a5-es-grunt-node-modules-iconv-lite tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite
1997 silly lockFile 0bc272a5-es-grunt-node-modules-iconv-lite tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite
1998 silly lockFile 30144f10-pm-iconv-lite-0-2-11-package-tgz tar:///home/ahmad/.npm/iconv-lite/0.2.11/package.tgz
1999 silly lockFile 30144f10-pm-iconv-lite-0-2-11-package-tgz tar:///home/ahmad/.npm/iconv-lite/0.2.11/package.tgz
2000 info preinstall iconv-lite@0.2.11
2001 verbose readDependencies using package.json deps
2002 verbose readDependencies using package.json deps
2003 silly resolved []
2004 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite
2005 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/iconv-lite
2006 verbose linkStuff [ false,
2006 verbose linkStuff   false,
2006 verbose linkStuff   false,
2006 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
2007 info linkStuff iconv-lite@0.2.11
2008 verbose linkBins iconv-lite@0.2.11
2009 verbose linkMans iconv-lite@0.2.11
2010 verbose rebuildBundles iconv-lite@0.2.11
2011 info install iconv-lite@0.2.11
2012 info postinstall iconv-lite@0.2.11
2013 http 200 https://registry.npmjs.org/nodeunit
2014 silly registry.get cb [ 200,
2014 silly registry.get   { vary: 'Accept',
2014 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2014 silly registry.get     etag: '"5GQY2XSU0Q4302039K49NHLTW"',
2014 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:28 GMT',
2014 silly registry.get     'content-type': 'application/json',
2014 silly registry.get     'content-length': '174186' } ]
2015 silly addNameRange number 2 { name: 'nodeunit', range: '>=0.8.0-0 <0.9.0-0', hasData: true }
2016 silly addNameRange versions [ 'nodeunit',
2016 silly addNameRange   [ '0.1.0',
2016 silly addNameRange     '0.1.1',
2016 silly addNameRange     '0.1.2',
2016 silly addNameRange     '0.2.0',
2016 silly addNameRange     '0.2.1',
2016 silly addNameRange     '0.2.2',
2016 silly addNameRange     '0.2.3',
2016 silly addNameRange     '0.2.4',
2016 silly addNameRange     '0.3.1',
2016 silly addNameRange     '0.4.0',
2016 silly addNameRange     '0.5.0',
2016 silly addNameRange     '0.5.1',
2016 silly addNameRange     '0.5.2',
2016 silly addNameRange     '0.5.3',
2016 silly addNameRange     '0.5.4',
2016 silly addNameRange     '0.5.5',
2016 silly addNameRange     '0.6.0',
2016 silly addNameRange     '0.6.1',
2016 silly addNameRange     '0.6.2',
2016 silly addNameRange     '0.6.3',
2016 silly addNameRange     '0.6.4',
2016 silly addNameRange     '0.7.0',
2016 silly addNameRange     '0.7.1',
2016 silly addNameRange     '0.7.2',
2016 silly addNameRange     '0.7.3',
2016 silly addNameRange     '0.7.4',
2016 silly addNameRange     '0.8.0',
2016 silly addNameRange     '0.8.1',
2016 silly addNameRange     '0.8.2' ] ]
2017 verbose addNamed [ 'nodeunit', '0.8.2' ]
2018 verbose addNamed [ '0.8.2', '0.8.2' ]
2019 silly lockFile 81e236ce-nodeunit-0-8-2 nodeunit@0.8.2
2020 verbose lock nodeunit@0.8.2 /home/ahmad/.npm/81e236ce-nodeunit-0-8-2.lock
2021 silly lockFile 2cd21705--org-nodeunit-nodeunit-0-8-2-tgz https://registry.npmjs.org/nodeunit/-/nodeunit-0.8.2.tgz
2022 verbose lock https://registry.npmjs.org/nodeunit/-/nodeunit-0.8.2.tgz /home/ahmad/.npm/2cd21705--org-nodeunit-nodeunit-0-8-2-tgz.lock
2023 verbose addRemoteTarball [ 'https://registry.npmjs.org/nodeunit/-/nodeunit-0.8.2.tgz',
2023 verbose addRemoteTarball   '99a2e75a6621d20753fa723edea12f23caf4d778' ]
2024 info retry fetch attempt 1 at 23:47:45
2025 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724865113-0.09819366200827062/tmp.tgz
2026 http GET https://registry.npmjs.org/nodeunit/-/nodeunit-0.8.2.tgz
2027 http 304 https://registry.npmjs.org/sigmund
2028 silly registry.get cb [ 304,
2028 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2028 silly registry.get     etag: '"BAAVPGGBONNEW4H9S234JOULZ"',
2028 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:45 GMT',
2028 silly registry.get     'content-length': '0' } ]
2029 verbose etag sigmund from cache
2030 silly addNameRange number 2 { name: 'sigmund', range: '>=1.0.0-0 <1.1.0-0', hasData: true }
2031 silly addNameRange versions [ 'sigmund', [ '1.0.0' ] ]
2032 verbose addNamed [ 'sigmund', '1.0.0' ]
2033 verbose addNamed [ '1.0.0', '1.0.0' ]
2034 silly lockFile 7b2d1244-sigmund-1-0-0 sigmund@1.0.0
2035 verbose lock sigmund@1.0.0 /home/ahmad/.npm/7b2d1244-sigmund-1-0-0.lock
2036 silly lockFile 7b2d1244-sigmund-1-0-0 sigmund@1.0.0
2037 silly lockFile 7b2d1244-sigmund-1-0-0 sigmund@1.0.0
2038 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
2039 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
2040 http 304 https://registry.npmjs.org/graceful-fs
2041 silly registry.get cb [ 304,
2041 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2041 silly registry.get     etag: '"8VTIGE3KHXX4861152PVTWGF8"',
2041 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:46 GMT',
2041 silly registry.get     'content-length': '0' } ]
2042 verbose etag graceful-fs from cache
2043 silly addNameRange number 2 { name: 'graceful-fs',
2043 silly addNameRange   range: '>=1.2.0-0 <1.3.0-0',
2043 silly addNameRange   hasData: true }
2044 silly addNameRange versions [ 'graceful-fs',
2044 silly addNameRange   [ '1.0.0',
2044 silly addNameRange     '1.0.1',
2044 silly addNameRange     '1.0.2',
2044 silly addNameRange     '1.1.0',
2044 silly addNameRange     '1.1.1',
2044 silly addNameRange     '1.1.2',
2044 silly addNameRange     '1.1.3',
2044 silly addNameRange     '1.1.4',
2044 silly addNameRange     '1.1.5',
2044 silly addNameRange     '1.1.6',
2044 silly addNameRange     '1.1.7',
2044 silly addNameRange     '1.1.8',
2044 silly addNameRange     '1.1.9',
2044 silly addNameRange     '1.1.10',
2044 silly addNameRange     '1.1.11',
2044 silly addNameRange     '1.1.12',
2044 silly addNameRange     '1.1.13',
2044 silly addNameRange     '1.1.14',
2044 silly addNameRange     '1.2.0',
2044 silly addNameRange     '1.2.1',
2044 silly addNameRange     '1.2.2',
2044 silly addNameRange     '1.2.3',
2044 silly addNameRange     '2.0.0',
2044 silly addNameRange     '2.0.1' ] ]
2045 verbose addNamed [ 'graceful-fs', '1.2.3' ]
2046 verbose addNamed [ '1.2.3', '1.2.3' ]
2047 silly lockFile 6c7102cf-graceful-fs-1-2-3 graceful-fs@1.2.3
2048 verbose lock graceful-fs@1.2.3 /home/ahmad/.npm/6c7102cf-graceful-fs-1-2-3.lock
2049 silly lockFile 6c7102cf-graceful-fs-1-2-3 graceful-fs@1.2.3
2050 silly lockFile 6c7102cf-graceful-fs-1-2-3 graceful-fs@1.2.3
2051 silly lockFile 9c0bb906-graceful-fs-1-2-0 graceful-fs@~1.2.0
2052 silly lockFile 9c0bb906-graceful-fs-1-2-0 graceful-fs@~1.2.0
2053 http 304 https://registry.npmjs.org/inherits
2054 silly registry.get cb [ 304,
2054 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2054 silly registry.get     etag: '"3BB9CXXI1GQW1OTCNLR8KNUQW"',
2054 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:47 GMT',
2054 silly registry.get     'content-length': '0' } ]
2055 verbose etag inherits from cache
2056 silly addNameRange number 2 { name: 'inherits', range: '>=1.0.0-0 <2.0.0-0', hasData: true }
2057 silly addNameRange versions [ 'inherits', [ '1.0.0', '2.0.0', '2.0.1' ] ]
2058 verbose addNamed [ 'inherits', '1.0.0' ]
2059 verbose addNamed [ '1.0.0', '1.0.0' ]
2060 silly lockFile 776fbe77-inherits-1-0-0 inherits@1.0.0
2061 verbose lock inherits@1.0.0 /home/ahmad/.npm/776fbe77-inherits-1-0-0.lock
2062 silly lockFile 776fbe77-inherits-1-0-0 inherits@1.0.0
2063 silly lockFile 776fbe77-inherits-1-0-0 inherits@1.0.0
2064 silly lockFile 4bca46d0-inherits-1 inherits@1
2065 silly lockFile 4bca46d0-inherits-1 inherits@1
2066 silly resolved [ { author:
2066 silly resolved      { name: 'Isaac Z. Schlueter',
2066 silly resolved        email: 'i@izs.me',
2066 silly resolved        url: 'http://blog.izs.me' },
2066 silly resolved     name: 'graceful-fs',
2066 silly resolved     description: 'A drop-in replacement for fs, making various improvements.',
2066 silly resolved     version: '1.2.3',
2066 silly resolved     repository:
2066 silly resolved      { type: 'git',
2066 silly resolved        url: 'git://github.com/isaacs/node-graceful-fs.git' },
2066 silly resolved     main: 'graceful-fs.js',
2066 silly resolved     engines: { node: '>=0.4.0' },
2066 silly resolved     directories: { test: 'test' },
2066 silly resolved     scripts: { test: 'tap test/*.js' },
2066 silly resolved     keywords:
2066 silly resolved      [ 'fs',
2066 silly resolved        'module',
2066 silly resolved        'reading',
2066 silly resolved        'retry',
2066 silly resolved        'retries',
2066 silly resolved        'queue',
2066 silly resolved        'error',
2066 silly resolved        'errors',
2066 silly resolved        'handling',
2066 silly resolved        'EMFILE',
2066 silly resolved        'EAGAIN',
2066 silly resolved        'EINVAL',
2066 silly resolved        'EPERM',
2066 silly resolved        'EACCESS' ],
2066 silly resolved     license: 'BSD',
2066 silly resolved     readme: '# graceful-fs\n\ngraceful-fs functions as a drop-in replacement for the fs module,\nmaking various improvements.\n\nThe improvements are meant to normalize behavior across different\nplatforms and environments, and to make filesystem access more\nresilient to errors.\n\n## Improvements over fs module\n\ngraceful-fs:\n\n* keeps track of how many file descriptors are open, and by default\n  limits this to 1024. Any further requests to open a file are put in a\n  queue until new slots become available. If 1024 turns out to be too\n  much, it decreases the limit further.\n* fixes `lchmod` for Node versions prior to 0.6.2.\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\n  `lchown` if the user isn\'t root.\n* makes `lchmod` and `lchown` become noops, if not available.\n* retries reading a file if `read` results in EAGAIN error.\n\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\nor `EPERM` error occurs, likely because antivirus software has locked\nthe directory.\n\n## Configuration\n\nThe maximum number of open file descriptors that graceful-fs manages may\nbe adjusted by setting `fs.MAX_OPEN` to a different number. The default\nis 1024.\n',
2066 silly resolved     readmeFilename: 'README.md',
2066 silly resolved     bugs: { url: 'https://github.com/isaacs/node-graceful-fs/issues' },
2066 silly resolved     homepage: 'https://github.com/isaacs/node-graceful-fs',
2066 silly resolved     _id: 'graceful-fs@1.2.3',
2066 silly resolved     _from: 'graceful-fs@~1.2.0' },
2066 silly resolved   { name: 'inherits',
2066 silly resolved     description: 'A tiny simple way to do classic inheritance in js',
2066 silly resolved     version: '1.0.0',
2066 silly resolved     keywords: [ 'inheritance', 'class', 'klass', 'oop', 'object-oriented' ],
2066 silly resolved     main: './inherits.js',
2066 silly resolved     repository: { type: 'git', url: 'https://github.com/isaacs/inherits' },
2066 silly resolved     author:
2066 silly resolved      { name: 'Isaac Z. Schlueter',
2066 silly resolved        email: 'i@izs.me',
2066 silly resolved        url: 'http://blog.izs.me/' },
2066 silly resolved     readme: 'A dead simple way to do inheritance in JS.\n\n    var inherits = require("inherits")\n\n    function Animal () {\n      this.alive = true\n    }\n    Animal.prototype.say = function (what) {\n      console.log(what)\n    }\n\n    inherits(Dog, Animal)\n    function Dog () {\n      Dog.super.apply(this)\n    }\n    Dog.prototype.sniff = function () {\n      this.say("sniff sniff")\n    }\n    Dog.prototype.bark = function () {\n      this.say("woof woof")\n    }\n\n    inherits(Chihuahua, Dog)\n    function Chihuahua () {\n      Chihuahua.super.apply(this)\n    }\n    Chihuahua.prototype.bark = function () {\n      this.say("yip yip")\n    }\n\n    // also works\n    function Cat () {\n      Cat.super.apply(this)\n    }\n    Cat.prototype.hiss = function () {\n      this.say("CHSKKSS!!")\n    }\n    inherits(Cat, Animal, {\n      meow: function () { this.say("miao miao") }\n    })\n    Cat.prototype.purr = function () {\n      this.say("purr purr")\n    }\n\n\n    var c = new Chihuahua\n    assert(c instanceof Chihuahua)\n    assert(c instanceof Dog)\n    assert(c instanceof Animal)\n\nThe actual function is laughably small.  10-lines small.\n',
2066 silly resolved     readmeFilename: 'README.md',
2066 silly resolved     bugs: { url: 'https://github.com/isaacs/inherits/issues' },
2066 silly resolved     homepage: 'https://github.com/isaacs/inherits',
2066 silly resolved     _id: 'inherits@1.0.0',
2066 silly resolved     _from: 'inherits@1' } ]
2067 info install graceful-fs@1.2.3 into /var/www/sites/marker/http/node_modules/grunt/node_modules/glob
2068 info install inherits@1.0.0 into /var/www/sites/marker/http/node_modules/grunt/node_modules/glob
2069 info installOne graceful-fs@1.2.3
2070 info installOne inherits@1.0.0
2071 info /var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs unbuild
2072 info /var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits unbuild
2073 verbose tar unpack /home/ahmad/.npm/graceful-fs/1.2.3/package.tgz
2074 silly lockFile 84dc4afe-es-glob-node-modules-graceful-fs tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs
2075 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs /home/ahmad/.npm/84dc4afe-es-glob-node-modules-graceful-fs.lock
2076 silly lockFile 56e91ca6-pm-graceful-fs-1-2-3-package-tgz tar:///home/ahmad/.npm/graceful-fs/1.2.3/package.tgz
2077 verbose lock tar:///home/ahmad/.npm/graceful-fs/1.2.3/package.tgz /home/ahmad/.npm/56e91ca6-pm-graceful-fs-1-2-3-package-tgz.lock
2078 verbose tar unpack /home/ahmad/.npm/inherits/1.0.0/package.tgz
2079 silly lockFile 37b935d7-dules-glob-node-modules-inherits tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits
2080 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits /home/ahmad/.npm/37b935d7-dules-glob-node-modules-inherits.lock
2081 silly lockFile 9ee13d58-d-npm-inherits-1-0-0-package-tgz tar:///home/ahmad/.npm/inherits/1.0.0/package.tgz
2082 verbose lock tar:///home/ahmad/.npm/inherits/1.0.0/package.tgz /home/ahmad/.npm/9ee13d58-d-npm-inherits-1-0-0-package-tgz.lock
2083 silly gunzTarPerm modes [ '755', '644' ]
2084 silly gunzTarPerm modes [ '755', '644' ]
2085 silly gunzTarPerm extractEntry package.json
2086 silly gunzTarPerm extractEntry package.json
2087 silly gunzTarPerm extractEntry .npmignore
2088 silly gunzTarPerm extractEntry README.md
2089 silly gunzTarPerm extractEntry README.md
2090 silly gunzTarPerm extractEntry inherits.js
2091 silly gunzTarPerm extractEntry LICENSE
2092 silly gunzTarPerm extractEntry graceful-fs.js
2093 silly gunzTarPerm extractEntry test/open.js
2094 silly gunzTarPerm extractEntry test/ulimit.js
2095 silly lockFile 37b935d7-dules-glob-node-modules-inherits tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits
2096 silly lockFile 37b935d7-dules-glob-node-modules-inherits tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits
2097 silly lockFile 9ee13d58-d-npm-inherits-1-0-0-package-tgz tar:///home/ahmad/.npm/inherits/1.0.0/package.tgz
2098 silly lockFile 9ee13d58-d-npm-inherits-1-0-0-package-tgz tar:///home/ahmad/.npm/inherits/1.0.0/package.tgz
2099 info preinstall inherits@1.0.0
2100 verbose readDependencies using package.json deps
2101 verbose readDependencies using package.json deps
2102 silly resolved []
2103 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits
2104 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/inherits
2105 verbose linkStuff [ false,
2105 verbose linkStuff   false,
2105 verbose linkStuff   false,
2105 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules' ]
2106 info linkStuff inherits@1.0.0
2107 verbose linkBins inherits@1.0.0
2108 verbose linkMans inherits@1.0.0
2109 verbose rebuildBundles inherits@1.0.0
2110 info install inherits@1.0.0
2111 info postinstall inherits@1.0.0
2112 silly lockFile 84dc4afe-es-glob-node-modules-graceful-fs tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs
2113 silly lockFile 84dc4afe-es-glob-node-modules-graceful-fs tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs
2114 silly lockFile 56e91ca6-pm-graceful-fs-1-2-3-package-tgz tar:///home/ahmad/.npm/graceful-fs/1.2.3/package.tgz
2115 silly lockFile 56e91ca6-pm-graceful-fs-1-2-3-package-tgz tar:///home/ahmad/.npm/graceful-fs/1.2.3/package.tgz
2116 info preinstall graceful-fs@1.2.3
2117 verbose readDependencies using package.json deps
2118 verbose readDependencies using package.json deps
2119 silly resolved []
2120 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs
2121 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules/graceful-fs
2122 verbose linkStuff [ false,
2122 verbose linkStuff   false,
2122 verbose linkStuff   false,
2122 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/glob/node_modules' ]
2123 info linkStuff graceful-fs@1.2.3
2124 verbose linkBins graceful-fs@1.2.3
2125 verbose linkMans graceful-fs@1.2.3
2126 verbose rebuildBundles graceful-fs@1.2.3
2127 info install graceful-fs@1.2.3
2128 info postinstall graceful-fs@1.2.3
2129 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/glob
2130 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/glob
2131 verbose linkStuff [ false,
2131 verbose linkStuff   false,
2131 verbose linkStuff   false,
2131 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
2132 info linkStuff glob@3.1.21
2133 verbose linkBins glob@3.1.21
2134 verbose linkMans glob@3.1.21
2135 verbose rebuildBundles glob@3.1.21
2136 verbose rebuildBundles [ 'graceful-fs', 'inherits' ]
2137 info install glob@3.1.21
2138 info postinstall glob@3.1.21
2139 http 304 https://registry.npmjs.org/argparse
2140 silly registry.get cb [ 304,
2140 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2140 silly registry.get     etag: '"213VYVCDP4M8X8HSGNVO8J09R"',
2140 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:49 GMT',
2140 silly registry.get     'content-length': '0' } ]
2141 verbose etag argparse from cache
2142 silly addNameRange number 2 { name: 'argparse', range: '>=0.1.11-0 <0.2.0-0', hasData: true }
2143 silly addNameRange versions [ 'argparse',
2143 silly addNameRange   [ '0.1.0',
2143 silly addNameRange     '0.1.1',
2143 silly addNameRange     '0.1.2',
2143 silly addNameRange     '0.1.3',
2143 silly addNameRange     '0.1.4',
2143 silly addNameRange     '0.1.5',
2143 silly addNameRange     '0.1.6',
2143 silly addNameRange     '0.1.7',
2143 silly addNameRange     '0.1.8',
2143 silly addNameRange     '0.1.9',
2143 silly addNameRange     '0.1.10',
2143 silly addNameRange     '0.1.11',
2143 silly addNameRange     '0.1.12',
2143 silly addNameRange     '0.1.13',
2143 silly addNameRange     '0.1.14',
2143 silly addNameRange     '0.1.15' ] ]
2144 verbose addNamed [ 'argparse', '0.1.15' ]
2145 verbose addNamed [ '0.1.15', '0.1.15' ]
2146 silly lockFile 83c4d43f-argparse-0-1-15 argparse@0.1.15
2147 verbose lock argparse@0.1.15 /home/ahmad/.npm/83c4d43f-argparse-0-1-15.lock
2148 silly lockFile 83c4d43f-argparse-0-1-15 argparse@0.1.15
2149 silly lockFile 83c4d43f-argparse-0-1-15 argparse@0.1.15
2150 silly lockFile 4775a11d-argparse-0-1-11 argparse@~ 0.1.11
2151 silly lockFile 4775a11d-argparse-0-1-11 argparse@~ 0.1.11
2152 http 304 https://registry.npmjs.org/esprima
2153 silly registry.get cb [ 304,
2153 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2153 silly registry.get     etag: '"7UR341PV11GZJUL9IBFB9RU48"',
2153 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:51 GMT',
2153 silly registry.get     'content-length': '0' } ]
2154 verbose etag esprima from cache
2155 http 304 https://registry.npmjs.org/graceful-fs
2156 silly registry.get cb [ 304,
2156 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2156 silly registry.get     etag: '"8VTIGE3KHXX4861152PVTWGF8"',
2156 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:51 GMT',
2156 silly registry.get     'content-length': '0' } ]
2157 verbose etag graceful-fs from cache
2158 silly addNameRange number 2 { name: 'esprima', range: '>=1.0.2-0 <1.1.0-0', hasData: true }
2159 silly addNameRange versions [ 'esprima',
2159 silly addNameRange   [ '0.7.0',
2159 silly addNameRange     '0.8.0',
2159 silly addNameRange     '0.8.1',
2159 silly addNameRange     '0.8.2',
2159 silly addNameRange     '0.9.0',
2159 silly addNameRange     '0.9.1',
2159 silly addNameRange     '0.9.2',
2159 silly addNameRange     '0.9.3',
2159 silly addNameRange     '0.9.4',
2159 silly addNameRange     '0.9.5',
2159 silly addNameRange     '0.9.6',
2159 silly addNameRange     '0.9.7',
2159 silly addNameRange     '0.9.8',
2159 silly addNameRange     '0.9.9',
2159 silly addNameRange     '1.0.0',
2159 silly addNameRange     '1.0.1',
2159 silly addNameRange     '1.0.2',
2159 silly addNameRange     '1.0.3',
2159 silly addNameRange     '1.0.4' ] ]
2160 verbose addNamed [ 'esprima', '1.0.4' ]
2161 verbose addNamed [ '1.0.4', '1.0.4' ]
2162 silly lockFile 758953aa-esprima-1-0-4 esprima@1.0.4
2163 verbose lock esprima@1.0.4 /home/ahmad/.npm/758953aa-esprima-1-0-4.lock
2164 http 304 https://registry.npmjs.org/abbrev
2165 silly registry.get cb [ 304,
2165 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
2165 silly registry.get     etag: '"D3D3CY0UKRCNMTXM981W0XI5E"',
2165 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:51 GMT',
2165 silly registry.get     'content-length': '0' } ]
2166 verbose etag abbrev from cache
2167 silly addNameRange number 2 { name: 'graceful-fs',
2167 silly addNameRange   range: '>=1.1.0-0 <1.2.0-0',
2167 silly addNameRange   hasData: true }
2168 silly addNameRange versions [ 'graceful-fs',
2168 silly addNameRange   [ '1.0.0',
2168 silly addNameRange     '1.0.1',
2168 silly addNameRange     '1.0.2',
2168 silly addNameRange     '1.1.0',
2168 silly addNameRange     '1.1.1',
2168 silly addNameRange     '1.1.2',
2168 silly addNameRange     '1.1.3',
2168 silly addNameRange     '1.1.4',
2168 silly addNameRange     '1.1.5',
2168 silly addNameRange     '1.1.6',
2168 silly addNameRange     '1.1.7',
2168 silly addNameRange     '1.1.8',
2168 silly addNameRange     '1.1.9',
2168 silly addNameRange     '1.1.10',
2168 silly addNameRange     '1.1.11',
2168 silly addNameRange     '1.1.12',
2168 silly addNameRange     '1.1.13',
2168 silly addNameRange     '1.1.14',
2168 silly addNameRange     '1.2.0',
2168 silly addNameRange     '1.2.1',
2168 silly addNameRange     '1.2.2',
2168 silly addNameRange     '1.2.3',
2168 silly addNameRange     '2.0.0',
2168 silly addNameRange     '2.0.1' ] ]
2169 verbose addNamed [ 'graceful-fs', '1.1.14' ]
2170 verbose addNamed [ '1.1.14', '1.1.14' ]
2171 silly lockFile 2cf96e8d-graceful-fs-1-1-14 graceful-fs@1.1.14
2172 verbose lock graceful-fs@1.1.14 /home/ahmad/.npm/2cf96e8d-graceful-fs-1-1-14.lock
2173 http 304 https://registry.npmjs.org/lru-cache
2174 silly registry.get cb [ 304,
2174 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
2174 silly registry.get     etag: '"14VF40U499GDAIDK33TEOG56Q"',
2174 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:51 GMT',
2174 silly registry.get     'content-length': '0' } ]
2175 verbose etag lru-cache from cache
2176 silly addNameRange number 2 { name: 'abbrev', range: '>=1.0.0-0 <2.0.0-0', hasData: true }
2177 silly addNameRange versions [ 'abbrev', [ '1.0.3', '1.0.4' ] ]
2178 verbose addNamed [ 'abbrev', '1.0.4' ]
2179 verbose addNamed [ '1.0.4', '1.0.4' ]
2180 silly lockFile 64a4e3a6-abbrev-1-0-4 abbrev@1.0.4
2181 verbose lock abbrev@1.0.4 /home/ahmad/.npm/64a4e3a6-abbrev-1-0-4.lock
2182 silly addNameRange number 2 { name: 'lru-cache', range: '>=2.0.0-0 <3.0.0-0', hasData: true }
2183 silly addNameRange versions [ 'lru-cache',
2183 silly addNameRange   [ '1.0.1',
2183 silly addNameRange     '1.0.2',
2183 silly addNameRange     '1.0.3',
2183 silly addNameRange     '1.0.4',
2183 silly addNameRange     '1.0.5',
2183 silly addNameRange     '1.0.6',
2183 silly addNameRange     '1.1.0',
2183 silly addNameRange     '1.1.1',
2183 silly addNameRange     '2.0.0',
2183 silly addNameRange     '2.0.1',
2183 silly addNameRange     '2.0.2',
2183 silly addNameRange     '2.0.3',
2183 silly addNameRange     '2.0.4',
2183 silly addNameRange     '2.1.0',
2183 silly addNameRange     '2.2.0',
2183 silly addNameRange     '2.2.1',
2183 silly addNameRange     '2.2.2',
2183 silly addNameRange     '2.2.4',
2183 silly addNameRange     '2.3.0',
2183 silly addNameRange     '2.3.1' ] ]
2184 verbose addNamed [ 'lru-cache', '2.3.1' ]
2185 verbose addNamed [ '2.3.1', '2.3.1' ]
2186 silly lockFile ef81ebb1-lru-cache-2-3-1 lru-cache@2.3.1
2187 verbose lock lru-cache@2.3.1 /home/ahmad/.npm/ef81ebb1-lru-cache-2-3-1.lock
2188 silly lockFile 758953aa-esprima-1-0-4 esprima@1.0.4
2189 silly lockFile 758953aa-esprima-1-0-4 esprima@1.0.4
2190 silly lockFile 2cf96e8d-graceful-fs-1-1-14 graceful-fs@1.1.14
2191 silly lockFile 2cf96e8d-graceful-fs-1-1-14 graceful-fs@1.1.14
2192 silly lockFile f16a0183-esprima-1-0-2 esprima@~ 1.0.2
2193 silly lockFile f16a0183-esprima-1-0-2 esprima@~ 1.0.2
2194 silly lockFile 0502dd56-graceful-fs-1-1 graceful-fs@~1.1
2195 silly lockFile 0502dd56-graceful-fs-1-1 graceful-fs@~1.1
2196 silly resolved [ { name: 'argparse',
2196 silly resolved     description: 'Very powerful CLI arguments parser. Native port of argparse - python\'s options parsing library',
2196 silly resolved     version: '0.1.15',
2196 silly resolved     keywords: [ 'cli', 'parser', 'argparse', 'option', 'args' ],
2196 silly resolved     homepage: 'https://github.com/nodeca/argparse',
2196 silly resolved     contributors: [ [Object], [Object] ],
2196 silly resolved     bugs: { url: 'https://github.com/nodeca/argparse/issues' },
2196 silly resolved     license:
2196 silly resolved      { type: 'MIT',
2196 silly resolved        url: 'https://github.com/nodeca/argparse/blob/master/LICENSE' },
2196 silly resolved     repository: { type: 'git', url: 'git://github.com/nodeca/argparse.git' },
2196 silly resolved     main: './index.js',
2196 silly resolved     scripts: { test: 'make test' },
2196 silly resolved     dependencies: { underscore: '~1.4.3', 'underscore.string': '~2.3.1' },
2196 silly resolved     devDependencies: { mocha: '*' },
2196 silly resolved     engines: { node: '>= 0.6.0' },
2196 silly resolved     readme: 'argparse\n========\n\n[![Build Status](https://secure.travis-ci.org/nodeca/argparse.png?branch=master)](http://travis-ci.org/nodeca/argparse)\n\nCLI arguments parser for node.js. Javascript port of python\'s\n[argparse](http://docs.python.org/dev/library/argparse.html) module\n(original version 3.2). That\'s a full port, except some very rare options,\nrecorded in issue tracker.\n\n**NB.** Method names changed to camelCase. See [generated docs](http://nodeca.github.com/argparse/).\n\n\nExample\n=======\n\ntest.js file:\n\n```javascript\n#!/usr/bin/env node\n\'use strict\';\n\nvar ArgumentParser = require(\'../lib/argparse\').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: \'0.0.1\',\n  addHelp:true,\n  description: \'Argparse example\'\n});\nparser.addArgument(\n  [ \'-f\', \'--foo\' ],\n  {\n    help: \'foo bar\'\n  }\n);\nparser.addArgument(\n  [ \'-b\', \'--bar\' ],\n  {\n    help: \'bar foo\'\n  }\n);\nvar args = parser.parseArgs();\nconsole.dir(args);\n```\n\nDisplay help:\n\n```\n$ ./test.js -h\nusage: example.js [-h] [-v] [-f FOO] [-b BAR]\n\nArgparse example\n\nOptional arguments:\n  -h, --help         Show this help message and exit.\n  -v, --version      Show program\'s version number and exit.\n  -f FOO, --foo FOO  foo bar\n  -b BAR, --bar BAR  bar foo\n```\n\nParse arguments:\n\n```\n$ ./test.js -f=3 --bar=4\n{ foo: \'3\', bar: \'4\' }\n```\n\nMore [examples](https://github.com/nodeca/argparse/tree/master/examples).\n\n\nArgumentParser objects\n======================\n\n```\nnew ArgumentParser({paramters hash});\n```\n\nCreates a new ArgumentParser object.\n\n**Supported params:**\n\n- ```description``` - Text to display before the argument help.\n- ```epilog``` - Text to display after the argument help.\n- ```addHelp``` - Add a -h/–help option to the parser. (default: True)\n- ```argumentDefault``` - Set the global default value for arguments. (default: None)\n- ```parents``` - A list of ArgumentParser objects whose arguments should also be included.\n- ```prefixChars``` - The set of characters that prefix optional arguments. (default: ‘-‘)\n- ```formatterClass``` - A class for customizing the help output.\n- ```prog``` - The name of the program (default: sys.argv[0])\n- ```usage``` - The string describing the program usage (default: generated)\n- ```conflictHandler``` - Usually unnecessary, defines strategy for resolving conflicting optionals.\n\n**Not supportied yet**\n\n- ```fromfilePrefixChars``` - The set of characters that prefix files from which additional arguments should be read.\n\n\nDetails in [original ArgumentParser guide](http://docs.python.org/dev/library/argparse.html#argumentparser-objects)\n\n\naddArgument() method\n====================\n\n```\nArgumentParser.addArgument([names or flags], {options})\n```\n\nDefines how a single command-line argument should be parsed.\n\n- ```name or flags``` - Either a name or a list of option strings, e.g. foo or -f, --foo.\n\nOptions:\n\n- ```action``` - The basic type of action to be taken when this argument is encountered at the command line.\n- ```nargs```- The number of command-line arguments that should be consumed.\n- ```constant``` - A constant value required by some action and nargs selections.\n- ```defaultValue``` - The value produced if the argument is absent from the command line.\n- ```type``` - The type to which the command-line argument should be converted.\n- ```choices``` - A container of the allowable values for the argument.\n- ```required``` - Whether or not the command-line option may be omitted (optionals only).\n- ```help``` - A brief description of what the argument does.\n- ```metavar``` - A name for the argument in usage messages.\n- ```dest``` - The name of the attribute to be added to the object returned by parseArgs().\n\nDetails in [original add_argument guide](http://docs.python.org/dev/library/argparse.html#the-add-argument-method)\n\n\nAction (some details)\n================\n\nArgumentParser objects associate command-line arguments with actions.\nThese actions can do just about anything with the command-line arguments associated\nwith them, though most actions simply add an attribute to the object returned by\nparseArgs(). The action keyword argument specifies how the command-line arguments\nshould be handled. The supported actions are:\n\n- ```store``` - Just stores the argument’s value. This is the default action.\n- ```storeConst``` - Stores value, specified by the const keyword argument.\n  (Note that the const keyword argument defaults to the rather unhelpful None.)\n  The \'storeConst\' action is most commonly used with optional arguments, that\n  specify some sort of flag.\n- ```storeTrue``` and ```storeFalse``` - Stores values True and False\n  respectively. These are special cases of \'storeConst\'.\n- ```append``` - Stores a list, and appends each argument value to the list.\n  This is useful to allow an option to be specified multiple times.\n- ```appendConst``` - Stores a list, and appends value, specified by the\n  const keyword argument to the list. (Note, that the const keyword argument defaults\n  is None.) The \'appendConst\' action is typically used when multiple arguments need\n  to store constants to the same list.\n- ```count``` - Counts the number of times a keyword argument occurs. For example,\n  used for increasing verbosity levels.\n- ```help``` - Prints a complete help message for all the options in the current\n  parser and then exits. By default a help action is automatically added to the parser.\n  See ArgumentParser for details of how the output is created.\n- ```version``` - Prints version information and exit. Expects a `version=`\n  keyword argument in the addArgument() call.\n\nDetails in [original action guide](http://docs.python.org/dev/library/argparse.html#action)\n\n\nSub-commands\n============\n\nArgumentParser.addSubparsers()\n\nMany programs split their functionality into a number of sub-commands, for\nexample, the svn program can invoke sub-commands like `svn checkout`, `svn update`,\nand `svn commit`. Splitting up functionality this way can be a particularly good\nidea when a program performs several different functions which require different\nkinds of command-line arguments. `ArgumentParser` supports creation of such\nsub-commands with `addSubparsers()` method. The `addSubparsers()` method is\nnormally called with no arguments and returns an special action object.\nThis object has a single method `addParser()`, which takes a command name and\nany `ArgumentParser` constructor arguments, and returns an `ArgumentParser` object\nthat can be modified as usual.\n\nExample:\n\nsub_commands.js\n```javascript\n#!/usr/bin/env node\n\'use strict\';\n\nvar ArgumentParser = require(\'../lib/argparse\').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: \'0.0.1\',\n  addHelp:true,\n  description: \'Argparse examples: sub-commands\',\n});\n\nvar subparsers = parser.addSubparsers({\n  title:\'subcommands\',\n  dest:"subcommand_name"\n});\n\nvar bar = subparsers.addParser(\'c1\', {addHelp:true});\nbar.addArgument(\n  [ \'-f\', \'--foo\' ],\n  {\n    action: \'store\',\n    help: \'foo3 bar3\'\n  }\n);\nvar bar = subparsers.addParser(\n  \'c2\',\n  {aliases:[\'co\'], addHelp:true}\n);\nbar.addArgument(\n  [ \'-b\', \'--bar\' ],\n  {\n    action: \'store\',\n    type: \'int\',\n    help: \'foo3 bar3\'\n  }\n);\n\nvar args = parser.parseArgs();\nconsole.dir(args);\n\n```\n\nDetails in [original sub-commands guide](http://docs.python.org/dev/library/argparse.html#sub-commands)\n\n\nContributors\n============\n\n- [Eugene Shkuropat](https://github.com/shkuropat)\n- [Paul Jacobson](https://github.com/hpaulj)\n\n[others](https://github.com/nodeca/argparse/graphs/contributors)\n\nLicense\n=======\n\nCopyright (c) 2012 [Vitaly Puzrin](https://github.com/puzrin).\nReleased under the MIT license. See\n[LICENSE](https://github.com/nodeca/argparse/blob/master/LICENSE) for details.\n\n\n',
2196 silly resolved     readmeFilename: 'README.md',
2196 silly resolved     _id: 'argparse@0.1.15',
2196 silly resolved     _from: 'argparse@~ 0.1.11' },
2196 silly resolved   { name: 'esprima',
2196 silly resolved     description: 'ECMAScript parsing infrastructure for multipurpose analysis',
2196 silly resolved     homepage: 'http://esprima.org',
2196 silly resolved     main: 'esprima.js',
2196 silly resolved     bin:
2196 silly resolved      { esparse: './bin/esparse.js',
2196 silly resolved        esvalidate: './bin/esvalidate.js' },
2196 silly resolved     files:
2196 silly resolved      [ 'bin',
2196 silly resolved        'test/run.js',
2196 silly resolved        'test/runner.js',
2196 silly resolved        'test/test.js',
2196 silly resolved        'test/compat.js',
2196 silly resolved        'test/reflect.js',
2196 silly resolved        'esprima.js' ],
2196 silly resolved     version: '1.0.4',
2196 silly resolved     engines: { node: '>=0.4.0' },
2196 silly resolved     maintainers: [ [Object] ],
2196 silly resolved     repository: { type: 'git', url: 'http://github.com/ariya/esprima.git' },
2196 silly resolved     licenses: [ [Object] ],
2196 silly resolved     keywords: [ 'ast', 'ecmascript', 'javascript', 'parser', 'syntax' ],
2196 silly resolved     scripts:
2196 silly resolved      { test: 'node test/run.js',
2196 silly resolved        benchmark: 'node test/benchmarks.js',
2196 silly resolved        'benchmark-quick': 'node test/benchmarks.js quick' },
2196 silly resolved     readme: '**Esprima** ([esprima.org](http://esprima.org)) is a high performance,\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nparser written in ECMAScript (also popularly known as\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\n\nEsprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as\n[Node.js](http://nodejs.org).\n\n### Features\n\n- Full support for [ECMAScript 5.1](http://www.ecma-international.org/publications/standards/Ecma-262.htm)(ECMA-262)\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\n- Heavily tested (> 550 [unit tests](http://esprima.org/test/) with solid 100% statement coverage)\n- Optional tracking of syntax node location (index-based and line-column)\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\n\nEsprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\nIt is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\nwith the new generation of fast parsers.\n\n### Applications\n\nEsprima serves as the basis for many popular JavaScript development tools:\n\n- Code coverage analysis: [node-cover](https://github.com/itay/node-cover), [Istanbul](https://github.com/yahoo/Istanbul)\n- Documentation tool: [JFDoc](https://github.com/thejohnfreeman/jfdoc), [JSDuck](https://github.com/senchalabs/jsduck)\n- Language extension: [LLJS](http://mbebenita.github.com/LLJS/) (low-level JS),\n[Sweet.js](http://sweetjs.org/) (macro)\n- ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\n- Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\n- Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\n- Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\n\n### Questions?\n- [Documentation](http://esprima.org/doc)\n- [Issue tracker](http://issues.esprima.org): [known problems](http://code.google.com/p/esprima/issues/list?q=Defect)\nand [future plans](http://code.google.com/p/esprima/issues/list?q=Enhancement)\n- [Mailing list](http://groups.google.com/group/esprima)\n- [Contribution guide](http://esprima.org/doc/index.html#contribution)\n\nFollow [@Esprima](http://twitter.com/Esprima) on Twitter to get the\ndevelopment updates.\nFeedback and contribution are welcomed!\n\n### License\n\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\n and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n',
2196 silly resolved     readmeFilename: 'README.md',
2196 silly resolved     bugs: { url: 'https://github.com/ariya/esprima/issues' },
2196 silly resolved     _id: 'esprima@1.0.4',
2196 silly resolved     _from: 'esprima@~ 1.0.2' } ]
2197 info install argparse@0.1.15 into /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
2198 info install esprima@1.0.4 into /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
2199 info installOne argparse@0.1.15
2200 info installOne esprima@1.0.4
2201 silly resolved [ { author:
2201 silly resolved      { name: 'Isaac Z. Schlueter',
2201 silly resolved        email: 'i@izs.me',
2201 silly resolved        url: 'http://blog.izs.me' },
2201 silly resolved     name: 'graceful-fs',
2201 silly resolved     description: 'fs monkey-patching to avoid EMFILE and other problems',
2201 silly resolved     version: '1.1.14',
2201 silly resolved     repository:
2201 silly resolved      { type: 'git',
2201 silly resolved        url: 'git://github.com/isaacs/node-graceful-fs.git' },
2201 silly resolved     main: 'graceful-fs.js',
2201 silly resolved     engines: { node: '>=0.4.0' },
2201 silly resolved     directories: { test: 'test' },
2201 silly resolved     scripts: { test: 'tap test/*.js' },
2201 silly resolved     keywords: [ 'fs', 'EMFILE', 'error', 'handling', 'monkeypatch' ],
2201 silly resolved     license: 'BSD',
2201 silly resolved     readme: 'Just like node\'s `fs` module, but it does an incremental back-off when\nEMFILE is encountered.\n\nUseful in asynchronous situations where one needs to try to open lots\nand lots of files.\n',
2201 silly resolved     readmeFilename: 'README.md',
2201 silly resolved     bugs: { url: 'https://github.com/isaacs/node-graceful-fs/issues' },
2201 silly resolved     homepage: 'https://github.com/isaacs/node-graceful-fs',
2201 silly resolved     _id: 'graceful-fs@1.1.14',
2201 silly resolved     _from: 'graceful-fs@~1.1' } ]
2202 info install graceful-fs@1.1.14 into /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf
2203 info installOne graceful-fs@1.1.14
2204 info /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse unbuild
2205 info /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima unbuild
2206 info /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs unbuild
2207 verbose tar unpack /home/ahmad/.npm/argparse/0.1.15/package.tgz
2208 silly lockFile 6d575e72-es-js-yaml-node-modules-argparse tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2209 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse /home/ahmad/.npm/6d575e72-es-js-yaml-node-modules-argparse.lock
2210 silly lockFile 318ac9c9--npm-argparse-0-1-15-package-tgz tar:///home/ahmad/.npm/argparse/0.1.15/package.tgz
2211 verbose lock tar:///home/ahmad/.npm/argparse/0.1.15/package.tgz /home/ahmad/.npm/318ac9c9--npm-argparse-0-1-15-package-tgz.lock
2212 verbose tar unpack /home/ahmad/.npm/esprima/1.0.4/package.tgz
2213 silly lockFile 4b4c38e5-les-js-yaml-node-modules-esprima tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima
2214 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima /home/ahmad/.npm/4b4c38e5-les-js-yaml-node-modules-esprima.lock
2215 silly lockFile b9aab2c5-ad-npm-esprima-1-0-4-package-tgz tar:///home/ahmad/.npm/esprima/1.0.4/package.tgz
2216 verbose lock tar:///home/ahmad/.npm/esprima/1.0.4/package.tgz /home/ahmad/.npm/b9aab2c5-ad-npm-esprima-1-0-4-package-tgz.lock
2217 verbose tar unpack /home/ahmad/.npm/graceful-fs/1.1.14/package.tgz
2218 silly lockFile fda7b261--rimraf-node-modules-graceful-fs tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs
2219 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs /home/ahmad/.npm/fda7b261--rimraf-node-modules-graceful-fs.lock
2220 silly lockFile 2ccd806a-m-graceful-fs-1-1-14-package-tgz tar:///home/ahmad/.npm/graceful-fs/1.1.14/package.tgz
2221 verbose lock tar:///home/ahmad/.npm/graceful-fs/1.1.14/package.tgz /home/ahmad/.npm/2ccd806a-m-graceful-fs-1-1-14-package-tgz.lock
2222 silly lockFile 64a4e3a6-abbrev-1-0-4 abbrev@1.0.4
2223 silly lockFile 64a4e3a6-abbrev-1-0-4 abbrev@1.0.4
2224 silly lockFile 6830b531-abbrev-1 abbrev@1
2225 silly lockFile 6830b531-abbrev-1 abbrev@1
2226 silly gunzTarPerm modes [ '755', '644' ]
2227 silly gunzTarPerm modes [ '755', '644' ]
2228 silly resolved [ { name: 'abbrev',
2228 silly resolved     version: '1.0.4',
2228 silly resolved     description: 'Like ruby\'s abbrev module, but in js',
2228 silly resolved     author: { name: 'Isaac Z. Schlueter', email: 'i@izs.me' },
2228 silly resolved     main: './lib/abbrev.js',
2228 silly resolved     scripts: { test: 'node lib/abbrev.js' },
2228 silly resolved     repository: { type: 'git', url: 'http://github.com/isaacs/abbrev-js' },
2228 silly resolved     license:
2228 silly resolved      { type: 'MIT',
2228 silly resolved        url: 'https://github.com/isaacs/abbrev-js/raw/master/LICENSE' },
2228 silly resolved     readme: '# abbrev-js\n\nJust like [ruby\'s Abbrev](http://apidock.com/ruby/Abbrev).\n\nUsage:\n\n    var abbrev = require("abbrev");\n    abbrev("foo", "fool", "folding", "flop");\n    \n    // returns:\n    { fl: \'flop\'\n    , flo: \'flop\'\n    , flop: \'flop\'\n    , fol: \'folding\'\n    , fold: \'folding\'\n    , foldi: \'folding\'\n    , foldin: \'folding\'\n    , folding: \'folding\'\n    , foo: \'foo\'\n    , fool: \'fool\'\n    }\n\nThis is handy for command-line scripts, or other cases where you want to be able to accept shorthands.\n',
2228 silly resolved     readmeFilename: 'README.md',
2228 silly resolved     bugs: { url: 'https://github.com/isaacs/abbrev-js/issues' },
2228 silly resolved     homepage: 'https://github.com/isaacs/abbrev-js',
2228 silly resolved     _id: 'abbrev@1.0.4',
2228 silly resolved     _from: 'abbrev@1' } ]
2229 info install abbrev@1.0.4 into /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt
2230 info installOne abbrev@1.0.4
2231 silly gunzTarPerm modes [ '755', '644' ]
2232 info /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev unbuild
2233 silly lockFile ef81ebb1-lru-cache-2-3-1 lru-cache@2.3.1
2234 silly lockFile ef81ebb1-lru-cache-2-3-1 lru-cache@2.3.1
2235 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
2236 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
2237 silly resolved [ { name: 'sigmund',
2237 silly resolved     version: '1.0.0',
2237 silly resolved     description: 'Quick and dirty signatures for Objects.',
2237 silly resolved     main: 'sigmund.js',
2237 silly resolved     directories: { test: 'test' },
2237 silly resolved     dependencies: {},
2237 silly resolved     devDependencies: { tap: '~0.3.0' },
2237 silly resolved     scripts: { test: 'tap test/*.js', bench: 'node bench.js' },
2237 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/sigmund' },
2237 silly resolved     keywords: [ 'object', 'signature', 'key', 'data', 'psychoanalysis' ],
2237 silly resolved     author:
2237 silly resolved      { name: 'Isaac Z. Schlueter',
2237 silly resolved        email: 'i@izs.me',
2237 silly resolved        url: 'http://blog.izs.me/' },
2237 silly resolved     license: 'BSD',
2237 silly resolved     readme: '# sigmund\n\nQuick and dirty signatures for Objects.\n\nThis is like a much faster `deepEquals` comparison, which returns a\nstring key suitable for caches and the like.\n\n## Usage\n\n```javascript\nfunction doSomething (someObj) {\n  var key = sigmund(someObj, maxDepth) // max depth defaults to 10\n  var cached = cache.get(key)\n  if (cached) return cached)\n\n  var result = expensiveCalculation(someObj)\n  cache.set(key, result)\n  return result\n}\n```\n\nThe resulting key will be as unique and reproducible as calling\n`JSON.stringify` or `util.inspect` on the object, but is much faster.\nIn order to achieve this speed, some differences are glossed over.\nFor example, the object `{0:\'foo\'}` will be treated identically to the\narray `[\'foo\']`.\n\nAlso, just as there is no way to summon the soul from the scribblings\nof a cocain-addled psychoanalyst, there is no way to revive the object\nfrom the signature string that sigmund gives you.  In fact, it\'s\nbarely even readable.\n\nAs with `sys.inspect` and `JSON.stringify`, larger objects will\nproduce larger signature strings.\n\nBecause sigmund is a bit less strict than the more thorough\nalternatives, the strings will be shorter, and also there is a\nslightly higher chance for collisions.  For example, these objects\nhave the same signature:\n\n    var obj1 = {a:\'b\',c:/def/,g:[\'h\',\'i\',{j:\'\',k:\'l\'}]}\n    var obj2 = {a:\'b\',c:\'/def/\',g:[\'h\',\'i\',\'{jkl\']}\n\nLike a good Freudian, sigmund is most effective when you already have\nsome understanding of what you\'re looking for.  It can help you help\nyourself, but you must be willing to do some work as well.\n\nCycles are handled, and cyclical objects are silently omitted (though\nthe key is included in the signature output.)\n\nThe second argument is the maximum depth, which defaults to 10,\nbecause that is the maximum object traversal depth covered by most\ninsurance carriers.\n',
2237 silly resolved     readmeFilename: 'README.md',
2237 silly resolved     bugs: { url: 'https://github.com/isaacs/sigmund/issues' },
2237 silly resolved     homepage: 'https://github.com/isaacs/sigmund',
2237 silly resolved     _id: 'sigmund@1.0.0',
2237 silly resolved     _from: 'sigmund@~1.0.0' },
2237 silly resolved   { name: 'lru-cache',
2237 silly resolved     description: 'A cache object that deletes the least-recently-used items.',
2237 silly resolved     version: '2.3.1',
2237 silly resolved     author: { name: 'Isaac Z. Schlueter', email: 'i@izs.me' },
2237 silly resolved     scripts: { test: 'tap test --gc' },
2237 silly resolved     main: 'lib/lru-cache.js',
2237 silly resolved     repository:
2237 silly resolved      { type: 'git',
2237 silly resolved        url: 'git://github.com/isaacs/node-lru-cache.git' },
2237 silly resolved     devDependencies: { tap: '', weak: '' },
2237 silly resolved     license:
2237 silly resolved      { type: 'MIT',
2237 silly resolved        url: 'http://github.com/isaacs/node-lru-cache/raw/master/LICENSE' },
2237 silly resolved     contributors:
2237 silly resolved      [ [Object],
2237 silly resolved        [Object],
2237 silly resolved        [Object],
2237 silly resolved        [Object],
2237 silly resolved        [Object],
2237 silly resolved        [Object],
2237 silly resolved        [Object] ],
2237 silly resolved     readme: '# lru cache\n\nA cache object that deletes the least-recently-used items.\n\n## Usage:\n\n```javascript\nvar LRU = require("lru-cache")\n  , options = { max: 500\n              , length: function (n) { return n * 2 }\n              , dispose: function (key, n) { n.close() }\n              , maxAge: 1000 * 60 * 60 }\n  , cache = LRU(options)\n  , otherCache = LRU(50) // sets just the max size\n\ncache.set("key", "value")\ncache.get("key") // "value"\n\ncache.reset()    // empty the cache\n```\n\nIf you put more stuff in it, then items will fall out.\n\nIf you try to put an oversized thing in it, then it\'ll fall out right\naway.\n\n## Options\n\n* `max` The maximum size of the cache, checked by applying the length\n  function to all values in the cache.  Not setting this is kind of\n  silly, since that\'s the whole purpose of this lib, but it defaults\n  to `Infinity`.\n* `maxAge` Maximum age in ms.  Items are not pro-actively pruned out\n  as they age, but if you try to get an item that is too old, it\'ll\n  drop it and return undefined instead of giving it to you.\n* `length` Function that is used to calculate the length of stored\n  items.  If you\'re storing strings or buffers, then you probably want\n  to do something like `function(n){return n.length}`.  The default is\n  `function(n){return 1}`, which is fine if you want to store `n`\n  like-sized things.\n* `dispose` Function that is called on items when they are dropped\n  from the cache.  This can be handy if you want to close file\n  descriptors or do other cleanup tasks when items are no longer\n  accessible.  Called with `key, value`.  It\'s called *before*\n  actually removing the item from the internal cache, so if you want\n  to immediately put it back in, you\'ll have to do that in a\n  `nextTick` or `setTimeout` callback or it won\'t do anything.\n* `stale` By default, if you set a `maxAge`, it\'ll only actually pull\n  stale items out of the cache when you `get(key)`.  (That is, it\'s\n  not pre-emptively doing a `setTimeout` or anything.)  If you set\n  `stale:true`, it\'ll return the stale value before deleting it.  If\n  you don\'t set this, then it\'ll return `undefined` when you try to\n  get a stale entry, as if it had already been deleted.\n\n## API\n\n* `set(key, value)`\n* `get(key) => value`\n\n    Both of these will update the "recently used"-ness of the key.\n    They do what you think.\n\n* `peek(key)`\n\n    Returns the key value (or `undefined` if not found) without\n    updating the "recently used"-ness of the key.\n\n    (If you find yourself using this a lot, you *might* be using the\n    wrong sort of data structure, but there are some use cases where\n    it\'s handy.)\n\n* `del(key)`\n\n    Deletes a key out of the cache.\n\n* `reset()`\n\n    Clear the cache entirely, throwing away all values.\n\n* `has(key)`\n\n    Check if a key is in the cache, without updating the recent-ness\n    or deleting it for being stale.\n\n* `forEach(function(value,key,cache), [thisp])`\n\n    Just like `Array.prototype.forEach`.  Iterates over all the keys\n    in the cache, in order of recent-ness.  (Ie, more recently used\n    items are iterated over first.)\n\n* `keys()`\n\n    Return an array of the keys in the cache.\n\n* `values()`\n\n    Return an array of the values in the cache.\n',
2237 silly resolved     readmeFilename: 'README.md',
2237 silly resolved     bugs: { url: 'https://github.com/isaacs/node-lru-cache/issues' },
2237 silly resolved     homepage: 'https://github.com/isaacs/node-lru-cache',
2237 silly resolved     _id: 'lru-cache@2.3.1',
2237 silly resolved     _from: 'lru-cache@2' } ]
2238 info install sigmund@1.0.0 into /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
2239 info install lru-cache@2.3.1 into /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
2240 info installOne sigmund@1.0.0
2241 info installOne lru-cache@2.3.1
2242 verbose tar unpack /home/ahmad/.npm/abbrev/1.0.4/package.tgz
2243 silly lockFile fe958932-modules-nopt-node-modules-abbrev tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev
2244 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev /home/ahmad/.npm/fe958932-modules-nopt-node-modules-abbrev.lock
2245 silly lockFile 0ed20f30-mad-npm-abbrev-1-0-4-package-tgz tar:///home/ahmad/.npm/abbrev/1.0.4/package.tgz
2246 verbose lock tar:///home/ahmad/.npm/abbrev/1.0.4/package.tgz /home/ahmad/.npm/0ed20f30-mad-npm-abbrev-1-0-4-package-tgz.lock
2247 info /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund unbuild
2248 info /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache unbuild
2249 silly gunzTarPerm extractEntry package.json
2250 silly gunzTarPerm extractEntry package.json
2251 silly gunzTarPerm extractEntry package.json
2252 silly gunzTarPerm modes [ '755', '644' ]
2253 verbose tar unpack /home/ahmad/.npm/sigmund/1.0.0/package.tgz
2254 silly lockFile 53f93c6a-s-minimatch-node-modules-sigmund tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund
2255 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund /home/ahmad/.npm/53f93c6a-s-minimatch-node-modules-sigmund.lock
2256 silly lockFile f483ffad-ad-npm-sigmund-1-0-0-package-tgz tar:///home/ahmad/.npm/sigmund/1.0.0/package.tgz
2257 verbose lock tar:///home/ahmad/.npm/sigmund/1.0.0/package.tgz /home/ahmad/.npm/f483ffad-ad-npm-sigmund-1-0-0-package-tgz.lock
2258 verbose tar unpack /home/ahmad/.npm/lru-cache/2.3.1/package.tgz
2259 silly lockFile 7705f40d-minimatch-node-modules-lru-cache tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache
2260 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache /home/ahmad/.npm/7705f40d-minimatch-node-modules-lru-cache.lock
2261 silly lockFile d4c541f0--npm-lru-cache-2-3-1-package-tgz tar:///home/ahmad/.npm/lru-cache/2.3.1/package.tgz
2262 verbose lock tar:///home/ahmad/.npm/lru-cache/2.3.1/package.tgz /home/ahmad/.npm/d4c541f0--npm-lru-cache-2-3-1-package-tgz.lock
2263 silly gunzTarPerm extractEntry README.md
2264 silly gunzTarPerm extractEntry LICENSE
2265 silly gunzTarPerm extractEntry .npmignore
2266 silly gunzTarPerm extractEntry README.md
2267 silly gunzTarPerm extractEntry README.md
2268 silly gunzTarPerm extractEntry esprima.js
2269 silly gunzTarPerm modes [ '755', '644' ]
2270 silly gunzTarPerm modes [ '755', '644' ]
2271 silly gunzTarPerm extractEntry package.json
2272 silly gunzTarPerm extractEntry README.md
2273 silly gunzTarPerm extractEntry LICENSE
2274 silly gunzTarPerm extractEntry LICENSE
2275 silly gunzTarPerm extractEntry graceful-fs.js
2276 silly gunzTarPerm extractEntry index.js
2277 silly gunzTarPerm extractEntry HISTORY.md
2278 silly gunzTarPerm extractEntry bin/esparse.js
2279 silly gunzTarPerm extractEntry lib/abbrev.js
2280 silly gunzTarPerm extractEntry test/open.js
2281 silly gunzTarPerm extractEntry bin/esvalidate.js
2282 silly gunzTarPerm extractEntry test/compat.js
2283 silly gunzTarPerm extractEntry examples/arguments.js
2284 silly gunzTarPerm extractEntry examples/choice.js
2285 silly gunzTarPerm extractEntry examples/constants.js
2286 silly gunzTarPerm extractEntry examples/help.js
2287 silly gunzTarPerm extractEntry examples/nargs.js
2288 silly gunzTarPerm extractEntry package.json
2289 silly gunzTarPerm extractEntry package.json
2290 silly gunzTarPerm extractEntry README.md
2291 silly gunzTarPerm extractEntry LICENSE
2292 silly gunzTarPerm extractEntry examples/parents.js
2293 silly gunzTarPerm extractEntry examples/prefix_chars.js
2294 silly gunzTarPerm extractEntry .npmignore
2295 silly gunzTarPerm extractEntry README.md
2296 silly gunzTarPerm extractEntry bench.js
2297 silly gunzTarPerm extractEntry sigmund.js
2298 silly gunzTarPerm extractEntry LICENSE
2299 silly gunzTarPerm extractEntry bench.js
2300 silly gunzTarPerm extractEntry examples/sub_commands.js
2301 silly gunzTarPerm extractEntry examples/sum.js
2302 silly lockFile fda7b261--rimraf-node-modules-graceful-fs tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs
2303 silly lockFile fda7b261--rimraf-node-modules-graceful-fs tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs
2304 silly lockFile 2ccd806a-m-graceful-fs-1-1-14-package-tgz tar:///home/ahmad/.npm/graceful-fs/1.1.14/package.tgz
2305 silly lockFile 2ccd806a-m-graceful-fs-1-1-14-package-tgz tar:///home/ahmad/.npm/graceful-fs/1.1.14/package.tgz
2306 silly gunzTarPerm extractEntry AUTHORS
2307 silly gunzTarPerm extractEntry lib/lru-cache.js
2308 silly lockFile fe958932-modules-nopt-node-modules-abbrev tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev
2309 silly lockFile fe958932-modules-nopt-node-modules-abbrev tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev
2310 silly gunzTarPerm extractEntry examples/testformatters.js
2311 silly gunzTarPerm extractEntry lib/action.js
2312 silly lockFile 0ed20f30-mad-npm-abbrev-1-0-4-package-tgz tar:///home/ahmad/.npm/abbrev/1.0.4/package.tgz
2313 silly lockFile 0ed20f30-mad-npm-abbrev-1-0-4-package-tgz tar:///home/ahmad/.npm/abbrev/1.0.4/package.tgz
2314 info preinstall graceful-fs@1.1.14
2315 silly gunzTarPerm extractEntry test/basic.js
2316 verbose readDependencies using package.json deps
2317 info preinstall abbrev@1.0.4
2318 verbose readDependencies using package.json deps
2319 silly resolved []
2320 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs
2321 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules/graceful-fs
2322 verbose linkStuff [ false,
2322 verbose linkStuff   false,
2322 verbose linkStuff   false,
2322 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf/node_modules' ]
2323 info linkStuff graceful-fs@1.1.14
2324 verbose linkBins graceful-fs@1.1.14
2325 verbose linkMans graceful-fs@1.1.14
2326 verbose rebuildBundles graceful-fs@1.1.14
2327 info install graceful-fs@1.1.14
2328 verbose readDependencies using package.json deps
2329 info postinstall graceful-fs@1.1.14
2330 verbose readDependencies using package.json deps
2331 silly resolved []
2332 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev
2333 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules/abbrev
2334 verbose linkStuff [ false,
2334 verbose linkStuff   false,
2334 verbose linkStuff   false,
2334 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/nopt/node_modules' ]
2335 info linkStuff abbrev@1.0.4
2336 verbose linkBins abbrev@1.0.4
2337 verbose linkMans abbrev@1.0.4
2338 verbose rebuildBundles abbrev@1.0.4
2339 info install abbrev@1.0.4
2340 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf
2341 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/rimraf
2342 verbose linkStuff [ false,
2342 verbose linkStuff   false,
2342 verbose linkStuff   false,
2342 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
2343 info linkStuff rimraf@2.0.3
2344 verbose linkBins rimraf@2.0.3
2345 verbose linkMans rimraf@2.0.3
2346 verbose rebuildBundles rimraf@2.0.3
2347 silly gunzTarPerm extractEntry lib/action_container.js
2348 silly gunzTarPerm extractEntry lib/argparse.js
2349 verbose rebuildBundles [ 'graceful-fs' ]
2350 info install rimraf@2.0.3
2351 info postinstall abbrev@1.0.4
2352 silly gunzTarPerm extractEntry test/basic.js
2353 info postinstall rimraf@2.0.3
2354 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt
2355 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/nopt
2356 verbose linkStuff [ false,
2356 verbose linkStuff   false,
2356 verbose linkStuff   false,
2356 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
2357 info linkStuff nopt@1.0.10
2358 verbose linkBins nopt@1.0.10
2359 verbose link bins [ { nopt: './bin/nopt.js' },
2359 verbose link bins   '/var/www/sites/marker/http/node_modules/grunt/node_modules/.bin',
2359 verbose link bins   false ]
2360 verbose linkMans nopt@1.0.10
2361 verbose rebuildBundles nopt@1.0.10
2362 verbose rebuildBundles [ 'abbrev' ]
2363 silly gunzTarPerm extractEntry lib/argument_parser.js
2364 silly gunzTarPerm extractEntry lib/const.js
2365 info install nopt@1.0.10
2366 silly gunzTarPerm extractEntry test/foreach.js
2367 silly gunzTarPerm extractEntry test/memory-leak.js
2368 info postinstall nopt@1.0.10
2369 silly gunzTarPerm extractEntry lib/namespace.js
2370 silly gunzTarPerm extractEntry lib/action/append.js
2371 silly gunzTarPerm extractEntry lib/action/count.js
2372 silly gunzTarPerm extractEntry lib/action/help.js
2373 silly gunzTarPerm extractEntry lib/action/store.js
2374 silly gunzTarPerm extractEntry lib/action/subparsers.js
2375 silly gunzTarPerm extractEntry lib/action/version.js
2376 silly gunzTarPerm extractEntry lib/action/append/constant.js
2377 silly lockFile 53f93c6a-s-minimatch-node-modules-sigmund tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund
2378 silly lockFile 53f93c6a-s-minimatch-node-modules-sigmund tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund
2379 silly lockFile f483ffad-ad-npm-sigmund-1-0-0-package-tgz tar:///home/ahmad/.npm/sigmund/1.0.0/package.tgz
2380 silly lockFile f483ffad-ad-npm-sigmund-1-0-0-package-tgz tar:///home/ahmad/.npm/sigmund/1.0.0/package.tgz
2381 silly gunzTarPerm extractEntry lib/action/store/constant.js
2382 silly gunzTarPerm extractEntry lib/action/store/false.js
2383 info preinstall sigmund@1.0.0
2384 verbose readDependencies using package.json deps
2385 verbose readDependencies using package.json deps
2386 silly resolved []
2387 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund
2388 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/sigmund
2389 verbose linkStuff [ false,
2389 verbose linkStuff   false,
2389 verbose linkStuff   false,
2389 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules' ]
2390 info linkStuff sigmund@1.0.0
2391 verbose linkBins sigmund@1.0.0
2392 verbose linkMans sigmund@1.0.0
2393 verbose rebuildBundles sigmund@1.0.0
2394 info install sigmund@1.0.0
2395 info postinstall sigmund@1.0.0
2396 silly gunzTarPerm extractEntry lib/action/store/true.js
2397 silly gunzTarPerm extractEntry lib/argument/error.js
2398 silly gunzTarPerm extractEntry lib/argument/exclusive.js
2399 silly gunzTarPerm extractEntry lib/argument/group.js
2400 silly lockFile 7705f40d-minimatch-node-modules-lru-cache tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache
2401 silly lockFile 7705f40d-minimatch-node-modules-lru-cache tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache
2402 silly lockFile d4c541f0--npm-lru-cache-2-3-1-package-tgz tar:///home/ahmad/.npm/lru-cache/2.3.1/package.tgz
2403 silly lockFile d4c541f0--npm-lru-cache-2-3-1-package-tgz tar:///home/ahmad/.npm/lru-cache/2.3.1/package.tgz
2404 info preinstall lru-cache@2.3.1
2405 verbose readDependencies using package.json deps
2406 verbose readDependencies using package.json deps
2407 silly resolved []
2408 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache
2409 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules/lru-cache
2410 verbose linkStuff [ false,
2410 verbose linkStuff   false,
2410 verbose linkStuff   false,
2410 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch/node_modules' ]
2411 info linkStuff lru-cache@2.3.1
2412 verbose linkBins lru-cache@2.3.1
2413 verbose linkMans lru-cache@2.3.1
2414 verbose rebuildBundles lru-cache@2.3.1
2415 info install lru-cache@2.3.1
2416 info postinstall lru-cache@2.3.1
2417 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
2418 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/minimatch
2419 verbose linkStuff [ false,
2419 verbose linkStuff   false,
2419 verbose linkStuff   false,
2419 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
2420 info linkStuff minimatch@0.2.12
2421 verbose linkBins minimatch@0.2.12
2422 verbose linkMans minimatch@0.2.12
2423 verbose rebuildBundles minimatch@0.2.12
2424 verbose rebuildBundles [ 'lru-cache', 'sigmund' ]
2425 info install minimatch@0.2.12
2426 info postinstall minimatch@0.2.12
2427 silly gunzTarPerm extractEntry lib/help/added_formatters.js
2428 silly gunzTarPerm extractEntry lib/help/formatter.js
2429 silly gunzTarPerm extractEntry test/reflect.js
2430 silly gunzTarPerm extractEntry test/run.js
2431 silly gunzTarPerm extractEntry test/runner.js
2432 silly gunzTarPerm extractEntry test/test.js
2433 silly lockFile 6d575e72-es-js-yaml-node-modules-argparse tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2434 silly lockFile 6d575e72-es-js-yaml-node-modules-argparse tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2435 silly lockFile 318ac9c9--npm-argparse-0-1-15-package-tgz tar:///home/ahmad/.npm/argparse/0.1.15/package.tgz
2436 silly lockFile 318ac9c9--npm-argparse-0-1-15-package-tgz tar:///home/ahmad/.npm/argparse/0.1.15/package.tgz
2437 info preinstall argparse@0.1.15
2438 verbose readDependencies using package.json deps
2439 verbose readDependencies using package.json deps
2440 verbose cache add [ 'underscore@~1.4.3', null ]
2441 verbose cache add name=undefined spec="underscore@~1.4.3" args=["underscore@~1.4.3",null]
2442 verbose parsed url { protocol: null,
2442 verbose parsed url   slashes: null,
2442 verbose parsed url   auth: null,
2442 verbose parsed url   host: null,
2442 verbose parsed url   port: null,
2442 verbose parsed url   hostname: null,
2442 verbose parsed url   hash: null,
2442 verbose parsed url   search: null,
2442 verbose parsed url   query: null,
2442 verbose parsed url   pathname: 'underscore@~1.4.3',
2442 verbose parsed url   path: 'underscore@~1.4.3',
2442 verbose parsed url   href: 'underscore@~1.4.3' }
2443 verbose cache add name="underscore" spec="~1.4.3" args=["underscore","~1.4.3"]
2444 verbose parsed url { protocol: null,
2444 verbose parsed url   slashes: null,
2444 verbose parsed url   auth: null,
2444 verbose parsed url   host: null,
2444 verbose parsed url   port: null,
2444 verbose parsed url   hostname: null,
2444 verbose parsed url   hash: null,
2444 verbose parsed url   search: null,
2444 verbose parsed url   query: null,
2444 verbose parsed url   pathname: '~1.4.3',
2444 verbose parsed url   path: '~1.4.3',
2444 verbose parsed url   href: '~1.4.3' }
2445 verbose addNamed [ 'underscore', '~1.4.3' ]
2446 verbose addNamed [ null, '>=1.4.3-0 <1.5.0-0' ]
2447 silly lockFile 9d86996d-underscore-1-4-3 underscore@~1.4.3
2448 verbose lock underscore@~1.4.3 /home/ahmad/.npm/9d86996d-underscore-1-4-3.lock
2449 verbose cache add [ 'underscore.string@~2.3.1', null ]
2450 verbose cache add name=undefined spec="underscore.string@~2.3.1" args=["underscore.string@~2.3.1",null]
2451 verbose parsed url { protocol: null,
2451 verbose parsed url   slashes: null,
2451 verbose parsed url   auth: null,
2451 verbose parsed url   host: null,
2451 verbose parsed url   port: null,
2451 verbose parsed url   hostname: null,
2451 verbose parsed url   hash: null,
2451 verbose parsed url   search: null,
2451 verbose parsed url   query: null,
2451 verbose parsed url   pathname: 'underscore.string@~2.3.1',
2451 verbose parsed url   path: 'underscore.string@~2.3.1',
2451 verbose parsed url   href: 'underscore.string@~2.3.1' }
2452 verbose cache add name="underscore.string" spec="~2.3.1" args=["underscore.string","~2.3.1"]
2453 verbose parsed url { protocol: null,
2453 verbose parsed url   slashes: null,
2453 verbose parsed url   auth: null,
2453 verbose parsed url   host: null,
2453 verbose parsed url   port: null,
2453 verbose parsed url   hostname: null,
2453 verbose parsed url   hash: null,
2453 verbose parsed url   search: null,
2453 verbose parsed url   query: null,
2453 verbose parsed url   pathname: '~2.3.1',
2453 verbose parsed url   path: '~2.3.1',
2453 verbose parsed url   href: '~2.3.1' }
2454 verbose addNamed [ 'underscore.string', '~2.3.1' ]
2455 verbose addNamed [ null, '>=2.3.1-0 <2.4.0-0' ]
2456 silly lockFile b2b19648-underscore-string-2-3-1 underscore.string@~2.3.1
2457 verbose lock underscore.string@~2.3.1 /home/ahmad/.npm/b2b19648-underscore-string-2-3-1.lock
2458 silly addNameRange { name: 'underscore',
2458 silly addNameRange   range: '>=1.4.3-0 <1.5.0-0',
2458 silly addNameRange   hasData: false }
2459 silly addNameRange { name: 'underscore.string',
2459 silly addNameRange   range: '>=2.3.1-0 <2.4.0-0',
2459 silly addNameRange   hasData: false }
2460 verbose url raw underscore
2461 verbose url resolving [ 'https://registry.npmjs.org/', './underscore' ]
2462 verbose url resolved https://registry.npmjs.org/underscore
2463 info trying registry request attempt 1 at 23:47:52
2464 verbose etag "5B5TFBCUD4EE1HARVYGBG8GFE"
2465 http GET https://registry.npmjs.org/underscore
2466 verbose url raw underscore.string
2467 verbose url resolving [ 'https://registry.npmjs.org/', './underscore.string' ]
2468 verbose url resolved https://registry.npmjs.org/underscore.string
2469 info trying registry request attempt 1 at 23:47:52
2470 verbose etag "82KONBUKGVFGLKPUIJ91QHEA4"
2471 http GET https://registry.npmjs.org/underscore.string
2472 silly lockFile 4b4c38e5-les-js-yaml-node-modules-esprima tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima
2473 silly lockFile 4b4c38e5-les-js-yaml-node-modules-esprima tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima
2474 silly lockFile b9aab2c5-ad-npm-esprima-1-0-4-package-tgz tar:///home/ahmad/.npm/esprima/1.0.4/package.tgz
2475 silly lockFile b9aab2c5-ad-npm-esprima-1-0-4-package-tgz tar:///home/ahmad/.npm/esprima/1.0.4/package.tgz
2476 info preinstall esprima@1.0.4
2477 verbose readDependencies using package.json deps
2478 verbose readDependencies using package.json deps
2479 silly resolved []
2480 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima
2481 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/esprima
2482 verbose linkStuff [ false,
2482 verbose linkStuff   false,
2482 verbose linkStuff   false,
2482 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules' ]
2483 info linkStuff esprima@1.0.4
2484 verbose linkBins esprima@1.0.4
2485 verbose link bins [ { esparse: './bin/esparse.js',
2485 verbose link bins     esvalidate: './bin/esvalidate.js' },
2485 verbose link bins   '/var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/.bin',
2485 verbose link bins   false ]
2486 verbose linkMans esprima@1.0.4
2487 verbose rebuildBundles esprima@1.0.4
2488 info install esprima@1.0.4
2489 info postinstall esprima@1.0.4
2490 http 200 https://registry.npmjs.org/nodeunit/-/nodeunit-0.8.2.tgz
2491 http 200 https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz
2492 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/tmp.tgz
2493 silly lockFile f38afc52-1670-0-30921004549600184-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2494 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package /home/ahmad/.npm/f38afc52-1670-0-30921004549600184-package.lock
2495 silly lockFile 84fcd7e9-1670-0-30921004549600184-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/tmp.tgz
2496 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/tmp.tgz /home/ahmad/.npm/84fcd7e9-1670-0-30921004549600184-tmp-tgz.lock
2497 silly gunzTarPerm modes [ '755', '644' ]
2498 silly gunzTarPerm extractEntry package.json
2499 silly gunzTarPerm extractEntry README.md
2500 silly gunzTarPerm extractEntry bin/apply
2501 silly gunzTarPerm extractEntry bin/build
2502 silly gunzTarPerm extractEntry bin/changelog
2503 silly gunzTarPerm extractEntry bin/jshint
2504 silly gunzTarPerm extractEntry bin/land
2505 silly gunzTarPerm extractEntry src/cli.js
2506 silly gunzTarPerm extractEntry src/jshint.js
2507 silly gunzTarPerm extractEntry src/lex.js
2508 silly gunzTarPerm extractEntry src/messages.js
2509 silly gunzTarPerm extractEntry src/reg.js
2510 silly gunzTarPerm extractEntry src/state.js
2511 silly gunzTarPerm extractEntry src/style.js
2512 silly gunzTarPerm extractEntry src/vars.js
2513 silly gunzTarPerm extractEntry src/platforms/rhino.js
2514 silly gunzTarPerm extractEntry src/reporters/checkstyle.js
2515 silly gunzTarPerm extractEntry src/reporters/default.js
2516 silly gunzTarPerm extractEntry src/reporters/jslint_xml.js
2517 silly gunzTarPerm extractEntry src/reporters/non_error.js
2518 silly lockFile f38afc52-1670-0-30921004549600184-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2519 silly lockFile f38afc52-1670-0-30921004549600184-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2520 silly lockFile 84fcd7e9-1670-0-30921004549600184-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/tmp.tgz
2521 silly lockFile 84fcd7e9-1670-0-30921004549600184-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/tmp.tgz
2522 verbose tar pack [ '/home/ahmad/.npm/jshint/2.1.11/package.tgz',
2522 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package' ]
2523 verbose tarball /home/ahmad/.npm/jshint/2.1.11/package.tgz
2524 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2525 silly lockFile f38afc52-1670-0-30921004549600184-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2526 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package /home/ahmad/.npm/f38afc52-1670-0-30921004549600184-package.lock
2527 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2528 verbose lock tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz /home/ahmad/.npm/4b81ba14-ad-npm-jshint-2-1-11-package-tgz.lock
2529 silly lockFile f38afc52-1670-0-30921004549600184-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2530 silly lockFile f38afc52-1670-0-30921004549600184-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724861670-0.30921004549600184/package
2531 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2532 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2533 silly lockFile 150f02ff--ahmad-npm-jshint-2-1-11-package /home/ahmad/.npm/jshint/2.1.11/package
2534 verbose lock /home/ahmad/.npm/jshint/2.1.11/package /home/ahmad/.npm/150f02ff--ahmad-npm-jshint-2-1-11-package.lock
2535 silly lockFile 150f02ff--ahmad-npm-jshint-2-1-11-package /home/ahmad/.npm/jshint/2.1.11/package
2536 silly lockFile 150f02ff--ahmad-npm-jshint-2-1-11-package /home/ahmad/.npm/jshint/2.1.11/package
2537 verbose tar unpack /home/ahmad/.npm/jshint/2.1.11/package.tgz
2538 silly lockFile ccac5a88--ahmad-npm-jshint-2-1-11-package tar:///home/ahmad/.npm/jshint/2.1.11/package
2539 verbose lock tar:///home/ahmad/.npm/jshint/2.1.11/package /home/ahmad/.npm/ccac5a88--ahmad-npm-jshint-2-1-11-package.lock
2540 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2541 verbose lock tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz /home/ahmad/.npm/4b81ba14-ad-npm-jshint-2-1-11-package-tgz.lock
2542 silly gunzTarPerm modes [ '755', '644' ]
2543 silly gunzTarPerm extractEntry package.json
2544 silly gunzTarPerm extractEntry README.md
2545 silly gunzTarPerm extractEntry bin/apply
2546 silly gunzTarPerm extractEntry bin/build
2547 silly gunzTarPerm extractEntry bin/changelog
2548 silly gunzTarPerm extractEntry bin/jshint
2549 silly gunzTarPerm extractEntry bin/land
2550 silly gunzTarPerm extractEntry src/cli.js
2551 silly gunzTarPerm extractEntry src/jshint.js
2552 silly gunzTarPerm extractEntry src/lex.js
2553 silly gunzTarPerm extractEntry src/messages.js
2554 silly gunzTarPerm extractEntry src/reg.js
2555 silly gunzTarPerm extractEntry src/state.js
2556 silly gunzTarPerm extractEntry src/style.js
2557 silly gunzTarPerm extractEntry src/vars.js
2558 silly gunzTarPerm extractEntry src/platforms/rhino.js
2559 silly gunzTarPerm extractEntry src/reporters/checkstyle.js
2560 silly gunzTarPerm extractEntry src/reporters/default.js
2561 silly gunzTarPerm extractEntry src/reporters/jslint_xml.js
2562 silly gunzTarPerm extractEntry src/reporters/non_error.js
2563 silly lockFile ccac5a88--ahmad-npm-jshint-2-1-11-package tar:///home/ahmad/.npm/jshint/2.1.11/package
2564 silly lockFile ccac5a88--ahmad-npm-jshint-2-1-11-package tar:///home/ahmad/.npm/jshint/2.1.11/package
2565 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2566 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2567 verbose chmod /home/ahmad/.npm/jshint/2.1.11/package.tgz 644
2568 verbose chown /home/ahmad/.npm/jshint/2.1.11/package.tgz [ 1000, 1000 ]
2569 silly lockFile 4854f5ca-mjs-org-jshint-jshint-2-1-11-tgz https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz
2570 silly lockFile 4854f5ca-mjs-org-jshint-jshint-2-1-11-tgz https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz
2571 silly lockFile a928d2e0-jshint-2-1-11 jshint@2.1.11
2572 silly lockFile a928d2e0-jshint-2-1-11 jshint@2.1.11
2573 silly lockFile 7516fea4-jshint-2-1-10 jshint@~2.1.10
2574 silly lockFile 7516fea4-jshint-2-1-10 jshint@~2.1.10
2575 silly resolved [ { name: 'jshint',
2575 silly resolved     version: '2.1.11',
2575 silly resolved     homepage: 'http://jshint.com/',
2575 silly resolved     description: 'Static analysis tool for JavaScript',
2575 silly resolved     author:
2575 silly resolved      { name: 'Anton Kovalyov',
2575 silly resolved        email: 'anton@kovalyov.net',
2575 silly resolved        url: 'http://anton.kovalyov.net/' },
2575 silly resolved     repository: { type: 'git', url: 'https://github.com/jshint/jshint.git' },
2575 silly resolved     bugs: { url: 'https://github.com/jshint/jshint/issues' },
2575 silly resolved     bin: { jshint: './bin/jshint' },
2575 silly resolved     scripts:
2575 silly resolved      { build: 'node bin/build',
2575 silly resolved        test: 'nodeunit tests tests/regression tests/unit',
2575 silly resolved        pretest: 'jshint src' },
2575 silly resolved     main: './src/jshint.js',
2575 silly resolved     dependencies:
2575 silly resolved      { shelljs: '0.1.x',
2575 silly resolved        underscore: '1.4.x',
2575 silly resolved        cli: '0.4.x',
2575 silly resolved        minimatch: '0.x.x',
2575 silly resolved        'console-browserify': '0.1.x' },
2575 silly resolved     devDependencies:
2575 silly resolved      { jshint: '2.1.x',
2575 silly resolved        shelljs: '0.1.x',
2575 silly resolved        browserify: '2.12.x',
2575 silly resolved        coveraje: '0.2.x',
2575 silly resolved        nodeunit: '0.8.x',
2575 silly resolved        sinon: '1.7.x' },
2575 silly resolved     jshintConfig:
2575 silly resolved      { boss: true,
2575 silly resolved        node: true,
2575 silly resolved        strict: true,
2575 silly resolved        white: true,
2575 silly resolved        smarttabs: true,
2575 silly resolved        maxlen: 100,
2575 silly resolved        newcap: false,
2575 silly resolved        undef: true,
2575 silly resolved        unused: true,
2575 silly resolved        onecase: true,
2575 silly resolved        indent: 2 },
2575 silly resolved     licenses: [ [Object] ],
2575 silly resolved     preferGlobal: true,
2575 silly resolved     files: [ 'bin', 'src' ],
2575 silly resolved     readme: 'JSHint, A Static Code Analysis Tool for JavaScript\n--------------------------------------------------\n\n\\[ [Use it online](http://jshint.com/) •  [About](http://jshint.com/about/) • \n[Docs](http://jshint.com/docs/) • [FAQ](http://jshint.com/docs/faq) • \n[Install](http://jshint.com/install/) • [Hack](http://jshint.com/hack/) • \n[Blog](http://jshint.com/blog/) • [Twitter](https://twitter.com/jshint/) \\]\n\n[![Build Status](https://travis-ci.org/jshint/jshint.png?branch=master)](https://travis-ci.org/jshint/jshint)\n[![NPM version](https://badge.fury.io/js/jshint.png)](http://badge.fury.io/js/jshint)\n\nJSHint is a community-driven tool to detect errors and potential problems\nin JavaScript code and to enforce your team’s coding conventions. It is\nvery flexible so you can easily adjust it to your particular coding guidelines\nand the environment you expect your code to execute in.\n\n#### Reporting a bug\n\nTo report a bug simply create a\n[new GitHub Issue](https://github.com/jshint/jshint/issues/new) and describe\nyour problem or suggestion. We welcome all kind of feedback regarding\nJSHint including but not limited to:\n\n * When JSHint doesn\'t work as expected\n * When JSHint complains about valid JavaScript code that works in all browsers\n * When you simply want a new option or feature\n\nBefore reporting a bug look around to see if there are any open or closed tickets\nthat cover your issue. And remember the wisdom: pull request > bug report > tweet.\n\n\n#### License\n\nJSHint is distributed under the MIT License. One file and one file only\n(src/stable/jshint.js) is distributed under the slightly modified MIT License.\n\n\n#### Thank you!\n\nWe really appreciate all kind of feedback and contributions. Thanks for using and supporting JSHint!\n',
2575 silly resolved     readmeFilename: 'README.md',
2575 silly resolved     _id: 'jshint@2.1.11',
2575 silly resolved     dist: { shasum: '5f623707bf58e74a82ab170dd9e7818a6c8f626a' },
2575 silly resolved     _from: 'jshint@~2.1.10',
2575 silly resolved     _resolved: 'https://registry.npmjs.org/jshint/-/jshint-2.1.11.tgz' } ]
2576 info install jshint@2.1.11 into /var/www/sites/marker/http/node_modules/grunt-contrib-jshint
2577 info installOne jshint@2.1.11
2578 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint unbuild
2579 verbose tar unpack /home/ahmad/.npm/jshint/2.1.11/package.tgz
2580 silly lockFile 53b917f6-ntrib-jshint-node-modules-jshint tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
2581 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint /home/ahmad/.npm/53b917f6-ntrib-jshint-node-modules-jshint.lock
2582 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2583 verbose lock tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz /home/ahmad/.npm/4b81ba14-ad-npm-jshint-2-1-11-package-tgz.lock
2584 silly gunzTarPerm modes [ '755', '644' ]
2585 silly gunzTarPerm extractEntry package.json
2586 silly gunzTarPerm extractEntry README.md
2587 silly gunzTarPerm extractEntry bin/apply
2588 silly gunzTarPerm extractEntry bin/build
2589 silly gunzTarPerm extractEntry bin/changelog
2590 silly gunzTarPerm extractEntry bin/jshint
2591 silly gunzTarPerm extractEntry bin/land
2592 silly gunzTarPerm extractEntry src/cli.js
2593 silly gunzTarPerm extractEntry src/jshint.js
2594 silly gunzTarPerm extractEntry src/lex.js
2595 silly gunzTarPerm extractEntry src/messages.js
2596 silly gunzTarPerm extractEntry src/reg.js
2597 silly gunzTarPerm extractEntry src/state.js
2598 silly gunzTarPerm extractEntry src/style.js
2599 silly gunzTarPerm extractEntry src/vars.js
2600 silly gunzTarPerm extractEntry src/platforms/rhino.js
2601 silly gunzTarPerm extractEntry src/reporters/checkstyle.js
2602 silly gunzTarPerm extractEntry src/reporters/default.js
2603 silly gunzTarPerm extractEntry src/reporters/jslint_xml.js
2604 silly gunzTarPerm extractEntry src/reporters/non_error.js
2605 silly lockFile 53b917f6-ntrib-jshint-node-modules-jshint tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
2606 silly lockFile 53b917f6-ntrib-jshint-node-modules-jshint tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
2607 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2608 silly lockFile 4b81ba14-ad-npm-jshint-2-1-11-package-tgz tar:///home/ahmad/.npm/jshint/2.1.11/package.tgz
2609 info preinstall jshint@2.1.11
2610 verbose readDependencies using package.json deps
2611 verbose readDependencies using package.json deps
2612 verbose cache add [ 'underscore@1.4.x', null ]
2613 verbose cache add name=undefined spec="underscore@1.4.x" args=["underscore@1.4.x",null]
2614 verbose parsed url { protocol: null,
2614 verbose parsed url   slashes: null,
2614 verbose parsed url   auth: null,
2614 verbose parsed url   host: null,
2614 verbose parsed url   port: null,
2614 verbose parsed url   hostname: null,
2614 verbose parsed url   hash: null,
2614 verbose parsed url   search: null,
2614 verbose parsed url   query: null,
2614 verbose parsed url   pathname: 'underscore@1.4.x',
2614 verbose parsed url   path: 'underscore@1.4.x',
2614 verbose parsed url   href: 'underscore@1.4.x' }
2615 verbose cache add name="underscore" spec="1.4.x" args=["underscore","1.4.x"]
2616 verbose parsed url { protocol: null,
2616 verbose parsed url   slashes: null,
2616 verbose parsed url   auth: null,
2616 verbose parsed url   host: null,
2616 verbose parsed url   port: null,
2616 verbose parsed url   hostname: null,
2616 verbose parsed url   hash: null,
2616 verbose parsed url   search: null,
2616 verbose parsed url   query: null,
2616 verbose parsed url   pathname: '1.4.x',
2616 verbose parsed url   path: '1.4.x',
2616 verbose parsed url   href: '1.4.x' }
2617 verbose addNamed [ 'underscore', '1.4.x' ]
2618 verbose addNamed [ null, '>=1.4.0-0 <1.5.0-0' ]
2619 silly lockFile 53dcd9dd-underscore-1-4-x underscore@1.4.x
2620 verbose lock underscore@1.4.x /home/ahmad/.npm/53dcd9dd-underscore-1-4-x.lock
2621 verbose cache add [ 'cli@0.4.x', null ]
2622 verbose cache add name=undefined spec="cli@0.4.x" args=["cli@0.4.x",null]
2623 verbose parsed url { protocol: null,
2623 verbose parsed url   slashes: null,
2623 verbose parsed url   auth: null,
2623 verbose parsed url   host: null,
2623 verbose parsed url   port: null,
2623 verbose parsed url   hostname: null,
2623 verbose parsed url   hash: null,
2623 verbose parsed url   search: null,
2623 verbose parsed url   query: null,
2623 verbose parsed url   pathname: 'cli@0.4.x',
2623 verbose parsed url   path: 'cli@0.4.x',
2623 verbose parsed url   href: 'cli@0.4.x' }
2624 verbose cache add name="cli" spec="0.4.x" args=["cli","0.4.x"]
2625 verbose parsed url { protocol: null,
2625 verbose parsed url   slashes: null,
2625 verbose parsed url   auth: null,
2625 verbose parsed url   host: null,
2625 verbose parsed url   port: null,
2625 verbose parsed url   hostname: null,
2625 verbose parsed url   hash: null,
2625 verbose parsed url   search: null,
2625 verbose parsed url   query: null,
2625 verbose parsed url   pathname: '0.4.x',
2625 verbose parsed url   path: '0.4.x',
2625 verbose parsed url   href: '0.4.x' }
2626 verbose addNamed [ 'cli', '0.4.x' ]
2627 verbose addNamed [ null, '>=0.4.0-0 <0.5.0-0' ]
2628 silly lockFile c9212ae8-cli-0-4-x cli@0.4.x
2629 verbose lock cli@0.4.x /home/ahmad/.npm/c9212ae8-cli-0-4-x.lock
2630 verbose cache add [ 'console-browserify@0.1.x', null ]
2631 verbose cache add name=undefined spec="console-browserify@0.1.x" args=["console-browserify@0.1.x",null]
2632 verbose parsed url { protocol: null,
2632 verbose parsed url   slashes: null,
2632 verbose parsed url   auth: null,
2632 verbose parsed url   host: null,
2632 verbose parsed url   port: null,
2632 verbose parsed url   hostname: null,
2632 verbose parsed url   hash: null,
2632 verbose parsed url   search: null,
2632 verbose parsed url   query: null,
2632 verbose parsed url   pathname: 'console-browserify@0.1.x',
2632 verbose parsed url   path: 'console-browserify@0.1.x',
2632 verbose parsed url   href: 'console-browserify@0.1.x' }
2633 verbose cache add name="console-browserify" spec="0.1.x" args=["console-browserify","0.1.x"]
2634 verbose parsed url { protocol: null,
2634 verbose parsed url   slashes: null,
2634 verbose parsed url   auth: null,
2634 verbose parsed url   host: null,
2634 verbose parsed url   port: null,
2634 verbose parsed url   hostname: null,
2634 verbose parsed url   hash: null,
2634 verbose parsed url   search: null,
2634 verbose parsed url   query: null,
2634 verbose parsed url   pathname: '0.1.x',
2634 verbose parsed url   path: '0.1.x',
2634 verbose parsed url   href: '0.1.x' }
2635 verbose addNamed [ 'console-browserify', '0.1.x' ]
2636 verbose addNamed [ null, '>=0.1.0-0 <0.2.0-0' ]
2637 silly lockFile e69eec4c-console-browserify-0-1-x console-browserify@0.1.x
2638 verbose lock console-browserify@0.1.x /home/ahmad/.npm/e69eec4c-console-browserify-0-1-x.lock
2639 verbose cache add [ 'minimatch@0.x.x', null ]
2640 verbose cache add name=undefined spec="minimatch@0.x.x" args=["minimatch@0.x.x",null]
2641 verbose parsed url { protocol: null,
2641 verbose parsed url   slashes: null,
2641 verbose parsed url   auth: null,
2641 verbose parsed url   host: null,
2641 verbose parsed url   port: null,
2641 verbose parsed url   hostname: null,
2641 verbose parsed url   hash: null,
2641 verbose parsed url   search: null,
2641 verbose parsed url   query: null,
2641 verbose parsed url   pathname: 'minimatch@0.x.x',
2641 verbose parsed url   path: 'minimatch@0.x.x',
2641 verbose parsed url   href: 'minimatch@0.x.x' }
2642 verbose cache add name="minimatch" spec="0.x.x" args=["minimatch","0.x.x"]
2643 verbose parsed url { protocol: null,
2643 verbose parsed url   slashes: null,
2643 verbose parsed url   auth: null,
2643 verbose parsed url   host: null,
2643 verbose parsed url   port: null,
2643 verbose parsed url   hostname: null,
2643 verbose parsed url   hash: null,
2643 verbose parsed url   search: null,
2643 verbose parsed url   query: null,
2643 verbose parsed url   pathname: '0.x.x',
2643 verbose parsed url   path: '0.x.x',
2643 verbose parsed url   href: '0.x.x' }
2644 verbose addNamed [ 'minimatch', '0.x.x' ]
2645 verbose addNamed [ null, '>=0.0.0-0 <1.0.0-0' ]
2646 silly lockFile 38c78372-minimatch-0-x-x minimatch@0.x.x
2647 verbose lock minimatch@0.x.x /home/ahmad/.npm/38c78372-minimatch-0-x-x.lock
2648 silly addNameRange { name: 'underscore',
2648 silly addNameRange   range: '>=1.4.0-0 <1.5.0-0',
2648 silly addNameRange   hasData: false }
2649 verbose cache add [ 'shelljs@0.1.x', null ]
2650 verbose cache add name=undefined spec="shelljs@0.1.x" args=["shelljs@0.1.x",null]
2651 verbose parsed url { protocol: null,
2651 verbose parsed url   slashes: null,
2651 verbose parsed url   auth: null,
2651 verbose parsed url   host: null,
2651 verbose parsed url   port: null,
2651 verbose parsed url   hostname: null,
2651 verbose parsed url   hash: null,
2651 verbose parsed url   search: null,
2651 verbose parsed url   query: null,
2651 verbose parsed url   pathname: 'shelljs@0.1.x',
2651 verbose parsed url   path: 'shelljs@0.1.x',
2651 verbose parsed url   href: 'shelljs@0.1.x' }
2652 verbose cache add name="shelljs" spec="0.1.x" args=["shelljs","0.1.x"]
2653 verbose parsed url { protocol: null,
2653 verbose parsed url   slashes: null,
2653 verbose parsed url   auth: null,
2653 verbose parsed url   host: null,
2653 verbose parsed url   port: null,
2653 verbose parsed url   hostname: null,
2653 verbose parsed url   hash: null,
2653 verbose parsed url   search: null,
2653 verbose parsed url   query: null,
2653 verbose parsed url   pathname: '0.1.x',
2653 verbose parsed url   path: '0.1.x',
2653 verbose parsed url   href: '0.1.x' }
2654 verbose addNamed [ 'shelljs', '0.1.x' ]
2655 verbose addNamed [ null, '>=0.1.0-0 <0.2.0-0' ]
2656 silly lockFile cc65d7ed-shelljs-0-1-x shelljs@0.1.x
2657 verbose lock shelljs@0.1.x /home/ahmad/.npm/cc65d7ed-shelljs-0-1-x.lock
2658 silly addNameRange { name: 'cli', range: '>=0.4.0-0 <0.5.0-0', hasData: false }
2659 silly addNameRange { name: 'console-browserify',
2659 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
2659 silly addNameRange   hasData: false }
2660 silly addNameRange { name: 'minimatch',
2660 silly addNameRange   range: '>=0.0.0-0 <1.0.0-0',
2660 silly addNameRange   hasData: false }
2661 verbose url raw cli
2662 verbose url resolving [ 'https://registry.npmjs.org/', './cli' ]
2663 verbose url resolved https://registry.npmjs.org/cli
2664 info trying registry request attempt 1 at 23:48:00
2665 http GET https://registry.npmjs.org/cli
2666 verbose url raw console-browserify
2667 verbose url resolving [ 'https://registry.npmjs.org/', './console-browserify' ]
2668 verbose url resolved https://registry.npmjs.org/console-browserify
2669 info trying registry request attempt 1 at 23:48:00
2670 http GET https://registry.npmjs.org/console-browserify
2671 silly addNameRange { name: 'shelljs', range: '>=0.1.0-0 <0.2.0-0', hasData: false }
2672 verbose url raw shelljs
2673 verbose url resolving [ 'https://registry.npmjs.org/', './shelljs' ]
2674 verbose url resolved https://registry.npmjs.org/shelljs
2675 info trying registry request attempt 1 at 23:48:00
2676 http GET https://registry.npmjs.org/shelljs
2677 verbose url raw underscore
2678 verbose url resolving [ 'https://registry.npmjs.org/', './underscore' ]
2679 verbose url resolved https://registry.npmjs.org/underscore
2680 info trying registry request attempt 1 at 23:48:00
2681 verbose etag "5B5TFBCUD4EE1HARVYGBG8GFE"
2682 http GET https://registry.npmjs.org/underscore
2683 verbose url raw minimatch
2684 verbose url resolving [ 'https://registry.npmjs.org/', './minimatch' ]
2685 verbose url resolved https://registry.npmjs.org/minimatch
2686 info trying registry request attempt 1 at 23:48:00
2687 verbose etag "433GUXE31BY78MEUH5M7CIXOG"
2688 http GET https://registry.npmjs.org/minimatch
2689 http 304 https://registry.npmjs.org/underscore
2690 silly registry.get cb [ 304,
2690 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2690 silly registry.get     etag: '"5B5TFBCUD4EE1HARVYGBG8GFE"',
2690 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:00 GMT',
2690 silly registry.get     'content-length': '0' } ]
2691 verbose etag underscore from cache
2692 http 304 https://registry.npmjs.org/underscore.string
2693 silly registry.get cb [ 304,
2693 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
2693 silly registry.get     etag: '"82KONBUKGVFGLKPUIJ91QHEA4"',
2693 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:00 GMT',
2693 silly registry.get     'content-length': '0' } ]
2694 verbose etag underscore.string from cache
2695 silly addNameRange number 2 { name: 'underscore',
2695 silly addNameRange   range: '>=1.4.3-0 <1.5.0-0',
2695 silly addNameRange   hasData: true }
2696 silly addNameRange versions [ 'underscore',
2696 silly addNameRange   [ '1.0.3',
2696 silly addNameRange     '1.0.4',
2696 silly addNameRange     '1.1.0',
2696 silly addNameRange     '1.1.1',
2696 silly addNameRange     '1.1.2',
2696 silly addNameRange     '1.1.3',
2696 silly addNameRange     '1.1.4',
2696 silly addNameRange     '1.1.5',
2696 silly addNameRange     '1.1.6',
2696 silly addNameRange     '1.1.7',
2696 silly addNameRange     '1.2.0',
2696 silly addNameRange     '1.2.1',
2696 silly addNameRange     '1.2.2',
2696 silly addNameRange     '1.2.3',
2696 silly addNameRange     '1.2.4',
2696 silly addNameRange     '1.3.0',
2696 silly addNameRange     '1.3.1',
2696 silly addNameRange     '1.3.2',
2696 silly addNameRange     '1.3.3',
2696 silly addNameRange     '1.4.0',
2696 silly addNameRange     '1.4.1',
2696 silly addNameRange     '1.4.2',
2696 silly addNameRange     '1.4.3',
2696 silly addNameRange     '1.4.4',
2696 silly addNameRange     '1.5.0',
2696 silly addNameRange     '1.5.1',
2696 silly addNameRange     '1.5.2' ] ]
2697 verbose addNamed [ 'underscore', '1.4.4' ]
2698 verbose addNamed [ '1.4.4', '1.4.4' ]
2699 silly lockFile c6b5e825-underscore-1-4-4 underscore@1.4.4
2700 verbose lock underscore@1.4.4 /home/ahmad/.npm/c6b5e825-underscore-1-4-4.lock
2701 silly addNameRange number 2 { name: 'underscore.string',
2701 silly addNameRange   range: '>=2.3.1-0 <2.4.0-0',
2701 silly addNameRange   hasData: true }
2702 silly addNameRange versions [ 'underscore.string',
2702 silly addNameRange   [ '0.9.2',
2702 silly addNameRange     '1.0.0',
2702 silly addNameRange     '1.1.3',
2702 silly addNameRange     '1.1.4',
2702 silly addNameRange     '1.1.5',
2702 silly addNameRange     '1.1.6',
2702 silly addNameRange     '2.0.0',
2702 silly addNameRange     '2.1.0',
2702 silly addNameRange     '2.1.1',
2702 silly addNameRange     '2.3.0',
2702 silly addNameRange     '2.3.1',
2702 silly addNameRange     '2.3.2',
2702 silly addNameRange     '2.2.1',
2702 silly addNameRange     '2.2.0-rc',
2702 silly addNameRange     '2.3.3' ] ]
2703 verbose addNamed [ 'underscore.string', '2.3.3' ]
2704 verbose addNamed [ '2.3.3', '2.3.3' ]
2705 silly lockFile a37b16cb-underscore-string-2-3-3 underscore.string@2.3.3
2706 verbose lock underscore.string@2.3.3 /home/ahmad/.npm/a37b16cb-underscore-string-2-3-3.lock
2707 silly lockFile c6b5e825-underscore-1-4-4 underscore@1.4.4
2708 silly lockFile c6b5e825-underscore-1-4-4 underscore@1.4.4
2709 silly lockFile a37b16cb-underscore-string-2-3-3 underscore.string@2.3.3
2710 silly lockFile a37b16cb-underscore-string-2-3-3 underscore.string@2.3.3
2711 silly lockFile 9d86996d-underscore-1-4-3 underscore@~1.4.3
2712 silly lockFile 9d86996d-underscore-1-4-3 underscore@~1.4.3
2713 silly lockFile b2b19648-underscore-string-2-3-1 underscore.string@~2.3.1
2714 silly lockFile b2b19648-underscore-string-2-3-1 underscore.string@~2.3.1
2715 silly resolved [ { name: 'underscore',
2715 silly resolved     description: 'JavaScript\'s functional programming helper library.',
2715 silly resolved     homepage: 'http://underscorejs.org',
2715 silly resolved     keywords: [ 'util', 'functional', 'server', 'client', 'browser' ],
2715 silly resolved     author: { name: 'Jeremy Ashkenas', email: 'jeremy@documentcloud.org' },
2715 silly resolved     repository:
2715 silly resolved      { type: 'git',
2715 silly resolved        url: 'git://github.com/documentcloud/underscore.git' },
2715 silly resolved     main: 'underscore.js',
2715 silly resolved     version: '1.4.4',
2715 silly resolved     devDependencies: { phantomjs: '0.2.2' },
2715 silly resolved     scripts: { test: 'phantomjs test/vendor/runner.js test/index.html?noglobals=true' },
2715 silly resolved     readme: '                       __\n                      /\\ \\                                                         __\n     __  __    ___    \\_\\ \\     __   _ __   ____    ___    ___   _ __    __       /\\_\\    ____\n    /\\ \\/\\ \\ /\' _ `\\  /\'_  \\  /\'__`\\/\\  __\\/ ,__\\  / ___\\ / __`\\/\\  __\\/\'__`\\     \\/\\ \\  /\',__\\\n    \\ \\ \\_\\ \\/\\ \\/\\ \\/\\ \\ \\ \\/\\  __/\\ \\ \\//\\__, `\\/\\ \\__//\\ \\ \\ \\ \\ \\//\\  __/  __  \\ \\ \\/\\__, `\\\n     \\ \\____/\\ \\_\\ \\_\\ \\___,_\\ \\____\\\\ \\_\\\\/\\____/\\ \\____\\ \\____/\\ \\_\\\\ \\____\\/\\_\\ _\\ \\ \\/\\____/\n      \\/___/  \\/_/\\/_/\\/__,_ /\\/____/ \\/_/ \\/___/  \\/____/\\/___/  \\/_/ \\/____/\\/_//\\ \\_\\ \\/___/\n                                                                                  \\ \\____/\n                                                                                   \\/___/\n\nUnderscore.js is a utility-belt library for JavaScript that provides\nsupport for the usual functional suspects (each, map, reduce, filter...)\nwithout extending any core JavaScript objects.\n\nFor Docs, License, Tests, and pre-packed downloads, see:\nhttp://underscorejs.org\n\nMany thanks to our contributors:\nhttps://github.com/documentcloud/underscore/contributors\n',
2715 silly resolved     readmeFilename: 'README.md',
2715 silly resolved     bugs: { url: 'https://github.com/documentcloud/underscore/issues' },
2715 silly resolved     _id: 'underscore@1.4.4',
2715 silly resolved     _from: 'underscore@~1.4.3' },
2715 silly resolved   { name: 'underscore.string',
2715 silly resolved     version: '2.3.3',
2715 silly resolved     description: 'String manipulation extensions for Underscore.js javascript library.',
2715 silly resolved     homepage: 'http://epeli.github.com/underscore.string/',
2715 silly resolved     contributors:
2715 silly resolved      [ [Object],
2715 silly resolved        [Object],
2715 silly resolved        [Object],
2715 silly resolved        [Object],
2715 silly resolved        [Object],
2715 silly resolved        [Object],
2715 silly resolved        [Object],
2715 silly resolved        [Object] ],
2715 silly resolved     keywords: [ 'underscore', 'string' ],
2715 silly resolved     main: './lib/underscore.string',
2715 silly resolved     directories: { lib: './lib' },
2715 silly resolved     engines: { node: '*' },
2715 silly resolved     repository:
2715 silly resolved      { type: 'git',
2715 silly resolved        url: 'https://github.com/epeli/underscore.string.git' },
2715 silly resolved     bugs: { url: 'https://github.com/epeli/underscore.string/issues' },
2715 silly resolved     licenses: [ [Object] ],
2715 silly resolved     readme: '# Underscore.string [![Build Status](https://secure.travis-ci.org/epeli/underscore.string.png?branch=master)](http://travis-ci.org/epeli/underscore.string) #\n\n\n\nJavascript lacks complete string manipulation operations.\nThis an attempt to fill that gap. List of build-in methods can be found\nfor example from [Dive Into JavaScript][d].\n\n[d]: http://www.diveintojavascript.com/core-javascript-reference/the-string-object\n\n\nAs name states this an extension for [Underscore.js][u], but it can be used\nindependently from **_s**-global variable. But with Underscore.js you can\nuse Object-Oriented style and chaining:\n\n[u]: http://documentcloud.github.com/underscore/\n\n```javascript\n_("   epeli  ").chain().trim().capitalize().value()\n=> "Epeli"\n```\n\n## Download ##\n\n  * [Development version](https://raw.github.com/epeli/underscore.string/master/lib/underscore.string.js) *Uncompressed with Comments 18kb*\n  * [Production version](https://github.com/epeli/underscore.string/raw/master/dist/underscore.string.min.js) *Minified 7kb*\n\n\n## Node.js installation ##\n\n**npm package**\n\n    npm install underscore.string\n\n**Standalone usage**:\n\n```javascript\nvar _s = require(\'underscore.string\');\n```\n\n**Integrate with Underscore.js**:\n\n```javascript\nvar _  = require(\'underscore\');\n\n// Import Underscore.string to separate object, because there are conflict functions (include, reverse, contains)\n_.str = require(\'underscore.string\');\n\n// Mix in non-conflict functions to Underscore namespace if you want\n_.mixin(_.str.exports());\n\n// All functions, include conflict, will be available through _.str object\n_.str.include(\'Underscore.string\', \'string\'); // => true\n```\n\n**Or Integrate with Underscore.js without module loading**\n\nRun the following expression after Underscore.js and Underscore.string are loaded\n```javascript\n// _.str becomes a global variable if no module loading is detected\n// Mix in non-conflict functions to Underscore namespace\n_.mixin(_.str.exports());\n```\n\n## String Functions ##\n\nFor availability of functions in this way you need to mix in Underscore.string functions:\n\n```javascript\n_.mixin(_.string.exports());\n```\n\notherwise functions from examples will be available through _.string or _.str objects:\n\n```javascript\n_.str.capitalize(\'epeli\')\n=> "Epeli"\n```\n\n**numberFormat** _.numberFormat(number, [ decimals=0, decimalSeparator=\'.\', orderSeparator=\',\'])\n\nFormats the numbers.\n\n```javascript\n_.numberFormat(1000, 2)\n=> "1,000.00"\n\n_.numberFormat(123456789.123, 5, \'.\', \',\')\n=> "123,456,789.12300"\n```\n\n\n**levenshtein** _.levenshtein(string1, string2)\n\nCalculates [Levenshtein distance][ld] between two strings.\n[ld]: http://en.wikipedia.org/wiki/Levenshtein_distance\n\n```javascript\n_.levenshtein(\'kitten\', \'kittah\')\n=> 2\n```\n\n**capitalize** _.capitalize(string)\n\nConverts first letter of the string to uppercase.\n\n```javascript\n_.capitalize("foo Bar")\n=> "Foo Bar"\n```\n\n**chop** _.chop(string, step)\n\n```javascript\n_.chop(\'whitespace\', 3)\n=> [\'whi\',\'tes\',\'pac\',\'e\']\n```\n\n**clean** _.clean(str)\n\nCompress some whitespaces to one.\n\n```javascript\n_.clean(" foo    bar   ")\n=> \'foo bar\'\n```\n\n**chars** _.chars(str)\n\n```javascript\n_.chars(\'Hello\')\n=> [\'H\',\'e\',\'l\',\'l\',\'o\']\n```\n\n**swapCase** _.swapCase(str)\n\nReturns a copy of the string in which all the case-based characters have had their case swapped.\n\n```javascript\n_.swapCase(\'hELLO\')\n=> \'Hello\'\n```\n\n**include** available only through _.str object, because Underscore has function with the same name.\n\n```javascript\n_.str.include("foobar", "ob")\n=> true\n```\n\n(removed) **includes** _.includes(string, substring)\n\nTests if string contains a substring.\n\n```javascript\n_.includes("foobar", "ob")\n=> true\n```\n\n**includes** function was removed\n\nBut you can create it in this way, for compatibility with previous versions:\n\n```javascript\n_.includes = _.str.include\n```\n\n**count** _.count(string, substring)\n\n```javascript\n_(\'Hello world\').count(\'l\')\n=> 3\n```\n\n**escapeHTML** _.escapeHTML(string)\n\nConverts HTML special characters to their entity equivalents.\n\n```javascript\n_(\'<div>Blah blah blah</div>\').escapeHTML();\n=> \'&lt;div&gt;Blah blah blah&lt;/div&gt;\'\n```\n\n**unescapeHTML** _.unescapeHTML(string)\n\nConverts entity characters to HTML equivalents.\n\n```javascript\n_(\'&lt;div&gt;Blah blah blah&lt;/div&gt;\').unescapeHTML();\n=> \'<div>Blah blah blah</div>\'\n```\n\n**insert** _.insert(string, index, substing)\n\n```javascript\n_(\'Hello \').insert(6, \'world\')\n=> \'Hello world\'\n```\n\n**isBlank** _.isBlank(string)\n\n```javascript\n_(\'\').isBlank(); // => true\n_(\'\\n\').isBlank(); // => true\n_(\' \').isBlank(); // => true\n_(\'a\').isBlank(); // => false\n```\n\n**join** _.join(separator, *strings)\n\nJoins strings together with given separator\n\n```javascript\n_.join(" ", "foo", "bar")\n=> "foo bar"\n```\n\n**lines** _.lines(str)\n\n```javascript\n_.lines("Hello\\nWorld")\n=> ["Hello", "World"]\n```\n\n**reverse** available only through _.str object, because Underscore has function with the same name.\n\nReturn reversed string:\n\n```javascript\n_.str.reverse("foobar")\n=> \'raboof\'\n```\n\n**splice**  _.splice(string, index, howmany, substring)\n\nLike a array splice.\n\n```javascript\n_(\'https://edtsech@bitbucket.org/edtsech/underscore.strings\').splice(30, 7, \'epeli\')\n=> \'https://edtsech@bitbucket.org/epeli/underscore.strings\'\n```\n\n**startsWith** _.startsWith(string, starts)\n\nThis method checks whether string starts with starts.\n\n```javascript\n_("image.gif").startsWith("image")\n=> true\n```\n\n**endsWith** _.endsWith(string, ends)\n\nThis method checks whether string ends with ends.\n\n```javascript\n_("image.gif").endsWith("gif")\n=> true\n```\n\n**succ**  _.succ(str)\n\nReturns the successor to str.\n\n```javascript\n_(\'a\').succ()\n=> \'b\'\n\n_(\'A\').succ()\n=> \'B\'\n```\n\n**supplant**\n\nSupplant function was removed, use Underscore.js [template function][p].\n\n[p]: http://documentcloud.github.com/underscore/#template\n\n**strip** alias for *trim*\n\n**lstrip** alias for *ltrim*\n\n**rstrip** alias for *rtrim*\n\n**titleize** _.titleize(string)\n\n```javascript\n_(\'my name is epeli\').titleize()\n=> \'My Name Is Epeli\'\n```\n\n**camelize** _.camelize(string)\n\nConverts underscored or dasherized string to a camelized one\n\n```javascript\n_(\'-moz-transform\').camelize()\n=> \'MozTransform\'\n```\n\n**classify** _.classify(string)\n\nConverts string to camelized class name\n\n```javascript\n_(\'some_class_name\').classify()\n=> \'SomeClassName\'\n```\n\n**underscored** _.underscored(string)\n\nConverts a camelized or dasherized string into an underscored one\n\n```javascript\n_(\'MozTransform\').underscored()\n=> \'moz_transform\'\n```\n\n**dasherize** _.dasherize(string)\n\nConverts a underscored or camelized string into an dasherized one\n\n```javascript\n_(\'MozTransform\').dasherize()\n=> \'-moz-transform\'\n```\n\n**humanize** _.humanize(string)\n\nConverts an underscored, camelized, or dasherized string into a humanized one.\nAlso removes beginning and ending whitespace, and removes the postfix \'_id\'.\n\n```javascript\n_(\'  capitalize dash-CamelCase_underscore trim  \').humanize()\n=> \'Capitalize dash camel case underscore trim\'\n```\n\n**trim** _.trim(string, [characters])\n\ntrims defined characters from begining and ending of the string.\nDefaults to whitespace characters.\n\n```javascript\n_.trim("  foobar   ")\n=> "foobar"\n\n_.trim("_-foobar-_", "_-")\n=> "foobar"\n```\n\n\n**ltrim** _.ltrim(string, [characters])\n\nLeft trim. Similar to trim, but only for left side.\n\n\n**rtrim** _.rtrim(string, [characters])\n\nRight trim. Similar to trim, but only for right side.\n\n**truncate** _.truncate(string, length, truncateString)\n\n```javascript\n_(\'Hello world\').truncate(5)\n=> \'Hello...\'\n\n_(\'Hello\').truncate(10)\n=> \'Hello\'\n```\n\n**prune** _.prune(string, length, pruneString)\n\nElegant version of truncate.\nMakes sure the pruned string does not exceed the original length.\nAvoid half-chopped words when truncating.\n\n```javascript\n_(\'Hello, world\').prune(5)\n=> \'Hello...\'\n\n_(\'Hello, world\').prune(8)\n=> \'Hello...\'\n\n_(\'Hello, world\').prune(5, \' (read a lot more)\')\n=> \'Hello, world\' (as adding "(read a lot more)" would be longer than the original string)\n\n_(\'Hello, cruel world\').prune(15)\n=> \'Hello, cruel...\'\n\n_(\'Hello\').prune(10)\n=> \'Hello\'\n```\n\n**words** _.words(str, delimiter=/\\s+/)\n\nSplit string by delimiter (String or RegExp), /\\s+/ by default.\n\n```javascript\n_.words("   I   love   you   ")\n=> ["I","love","you"]\n\n_.words("I_love_you", "_")\n=> ["I","love","you"]\n\n_.words("I-love-you", /-/)\n=> ["I","love","you"]\n\n_.words("   ")\n=> []\n```\n\n**sprintf** _.sprintf(string format, *arguments)\n\nC like string formatting.\nCredits goes to [Alexandru Marasteanu][o].\nFor more detailed documentation, see the [original page][o].\n\n[o]: http://www.diveintojavascript.com/projects/sprintf-for-javascript\n\n```javascript\n_.sprintf("%.1f", 1.17)\n"1.2"\n```\n\n**pad** _.pad(str, length, [padStr, type])\n\npads the `str` with characters until the total string length is equal to the passed `length` parameter. By default, pads on the **left** with the space char (`" "`). `padStr` is truncated to a single character if necessary.\n\n```javascript\n_.pad("1", 8)\n-> "       1";\n\n_.pad("1", 8, \'0\')\n-> "00000001";\n\n_.pad("1", 8, \'0\', \'right\')\n-> "10000000";\n\n_.pad("1", 8, \'0\', \'both\')\n-> "00001000";\n\n_.pad("1", 8, \'bleepblorp\', \'both\')\n-> "bbbb1bbb";\n```\n\n**lpad** _.lpad(str, length, [padStr])\n\nleft-pad a string. Alias for `pad(str, length, padStr, \'left\')`\n\n```javascript\n_.lpad("1", 8, \'0\')\n-> "00000001";\n```\n\n**rpad** _.rpad(str, length, [padStr])\n\nright-pad a string. Alias for `pad(str, length, padStr, \'right\')`\n\n```javascript\n_.rpad("1", 8, \'0\')\n-> "10000000";\n```\n\n**lrpad** _.lrpad(str, length, [padStr])\n\nleft/right-pad a string. Alias for `pad(str, length, padStr, \'both\')`\n\n```javascript\n_.lrpad("1", 8, \'0\')\n-> "00001000";\n```\n\n**center** alias for **lrpad**\n\n**ljust** alias for *rpad*\n\n**rjust** alias for *lpad*\n\n**toNumber**  _.toNumber(string, [decimals])\n\nParse string to number. Returns NaN if string can\'t be parsed to number.\n\n```javascript\n_(\'2.556\').toNumber()\n=> 3\n\n_(\'2.556\').toNumber(1)\n=> 2.6\n```\n\n**strRight**  _.strRight(string, pattern)\n\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strRight(\'_\')\n=> "is_a_test_string";\n```\n\n**strRightBack**  _.strRightBack(string, pattern)\n\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the right of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strRightBack(\'_\')\n=> "string";\n```\n\n**strLeft**  _.strLeft(string, pattern)\n\nSearches a string from left to right for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strLeft(\'_\')\n=> "This";\n```\n\n**strLeftBack**  _.strLeftBack(string, pattern)\n\nSearches a string from right to left for a pattern and returns a substring consisting of the characters in the string that are to the left of the pattern or all string if no match found.\n\n```javascript\n_(\'This_is_a_test_string\').strLeftBack(\'_\')\n=> "This_is_a_test";\n```\n\n**stripTags**\n\nRemoves all html tags from string.\n\n```javascript\n_(\'a <a href="#">link</a>\').stripTags()\n=> \'a link\'\n\n_(\'a <a href="#">link</a><script>alert("hello world!")</script>\').stripTags()\n=> \'a linkalert("hello world!")\'\n```\n\n**toSentence**  _.toSentence(array, [delimiter, lastDelimiter])\n\nJoin an array into a human readable sentence.\n\n```javascript\n_.toSentence([\'jQuery\', \'Mootools\', \'Prototype\'])\n=> \'jQuery, Mootools and Prototype\';\n\n_.toSentence([\'jQuery\', \'Mootools\', \'Prototype\'], \', \', \' unt \')\n=> \'jQuery, Mootools unt Prototype\';\n```\n\n**toSentenceSerial**  _.toSentenceSerial(array, [delimiter, lastDelimiter])\n\nThe same as `toSentence`, but adjusts delimeters to use [Serial comma](http://en.wikipedia.org/wiki/Serial_comma).\n\n```javascript\n_.toSentenceSerial([\'jQuery\', \'Mootools\'])\n=> \'jQuery and Mootools\';\n\n_.toSentenceSerial([\'jQuery\', \'Mootools\', \'Prototype\'])\n=> \'jQuery, Mootools, and Prototype\'\n\n_.toSentenceSerial([\'jQuery\', \'Mootools\', \'Prototype\'], \', \', \' unt \');\n=> \'jQuery, Mootools, unt Prototype\';\n```\n\n**repeat** _.repeat(string, count, [separator])\n\nRepeats a string count times.\n\n```javascript\n_.repeat("foo", 3)\n=> \'foofoofoo\';\n\n_.repeat("foo", 3, "bar")\n=> \'foobarfoobarfoo\'\n```\n\n**surround** _.surround(string, wrap)\n\nSurround a string with another string.\n\n```javascript\n_.surround("foo", "ab")\n=> \'abfooab\';\n```\n\n**quote** _.quote(string, quoteChar) or _.q(string, quoteChar)\n\nQuotes a string. `quoteChar` defaults to `"`.\n\n```javascript\n_.quote(\'foo\', quoteChar)\n=> \'"foo"\';\n```\n**unquote** _.unquote(string, quoteChar)\n\nUnquotes a string. `quoteChar` defaults to `"`.\n\n```javascript\n_.unquote(\'"foo"\')\n=> \'foo\';\n_.unquote("\'foo\'", "\'")\n=> \'foo\';\n```\n\n\n**slugify** _.slugify(string)\n\nTransform text into a URL slug. Replaces whitespaces, accentuated, and special characters with a dash.\n\n```javascript\n_.slugify("Un éléphant à l\'orée du bois")\n=> \'un-elephant-a-loree-du-bois\';\n```\n\n***Caution: this function is charset dependent***\n\n**naturalCmp** array.sort(_.naturalCmp)\n\nNaturally sort strings like humans would do.\n\n```javascript\n[\'foo20\', \'foo5\'].sort(_.naturalCmp)\n=> [ \'foo5\', \'foo20\' ]\n```\n\n**toBoolean** _.toBoolean(string) or _.toBool(string)\n\nTurn strings that can be commonly considered as booleas to real booleans. Such as "true", "false", "1" and "0". This function is case insensitive.\n\n```javascript\n_.toBoolean("true")\n=> true\n_.toBoolean("FALSE")\n=> false\n_.toBoolean("random")\n=> undefined\n```\n\nIt can be customized by giving arrays of truth and falsy value matcher as parameters. Matchers can be also RegExp objects.\n\n```javascript\n_.toBoolean("truthy", ["truthy"], ["falsy"])\n=> true\n_.toBoolean("true only at start", [/^true/])\n=> true\n```\n\n## Roadmap ##\n\nAny suggestions or bug reports are welcome. Just email me or more preferably open an issue.\n\n#### Problems\n\nWe lose two things for `include` and `reverse` methods from `_.string`:\n\n* Calls like `_(\'foobar\').include(\'bar\')` aren\'t available;\n* Chaining isn\'t available too.\n\nBut if you need this functionality you can create aliases for conflict functions which will be convenient for you:\n\n```javascript\n_.mixin({\n    includeString: _.str.include,\n    reverseString: _.str.reverse\n})\n\n// Now wrapper calls and chaining are available.\n_(\'foobar\').chain().reverseString().includeString(\'rab\').value()\n```\n\n#### Standalone Usage\n\nIf you are using Underscore.string without Underscore. You also have `_.string` namespace for it and `_.str` alias\nBut of course you can just reassign `_` variable with `_.string`\n\n```javascript\n_ = _.string\n```\n\n## Changelog ##\n\n### 2.3.3 ###\n\n* Add `toBoolean`\n* Add `unquote`\n* Add quote char option to `quote`\n* Support dash-separated words in `titleize`\n\n### 2.3.2 ###\n\n* Add `naturalCmp`\n* Bug fix to `camelize`\n* Add ă, ș, ț and ś to `slugify`\n* Doc updates\n* Add support for [component](http://component.io/)\n* [Full changelog](https://github.com/epeli/underscore.string/compare/v2.3.1...v2.3.2)\n\n### 2.3.1 ###\n\n* Bug fixes to `escapeHTML`, `classify`, `substr`\n* Faster `count`\n* Documentation fixes\n* [Full changelog](https://github.com/epeli/underscore.string/compare/v2.3.0...v2.3.1)\n\n### 2.3.0 ###\n\n* Added `numberformat` method\n* Added `levenshtein` method (Levenshtein distance calculation)\n* Added `swapCase` method\n* Changed default behavior of `words` method\n* Added `toSentenceSerial` method\n* Added `surround` and `quote` methods\n\n### 2.2.1 ###\n\n* Same as 2.2.0 (2.2.0rc on npm) to fix some npm drama\n\n### 2.2.0 ###\n\n* Capitalize method behavior changed\n* Various perfomance tweaks\n\n### 2.1.1###\n\n* Fixed words method bug\n* Added classify method\n\n### 2.1.0 ###\n\n* AMD support\n* Added toSentence method\n* Added slugify method\n* Lots of speed optimizations\n\n### 2.0.0 ###\n\n* Added prune, humanize functions\n* Added _.string (_.str) namespace for Underscore.string library\n* Removed includes function\n\nFor upgrading to this version you need to mix in Underscore.string library to Underscore object:\n\n```javascript\n_.mixin(_.string.exports());\n```\n\nand all non-conflict Underscore.string functions will be available through Underscore object.\nAlso function `includes` has been removed, you should replace this function by `_.str.include`\nor create alias `_.includes = _.str.include` and all your code will work fine.\n\n### 1.1.6 ###\n\n* Fixed reverse and truncate\n* Added isBlank, stripTags, inlude(alias for includes)\n* Added uglifier compression\n\n### 1.1.5 ###\n\n* Added strRight, strRightBack, strLeft, strLeftBack\n\n### 1.1.4 ###\n\n* Added pad, lpad, rpad, lrpad methods and aliases center, ljust, rjust\n* Integration with Underscore 1.1.6\n\n### 1.1.3 ###\n\n* Added methods: underscored, camelize, dasherize\n* Support newer version of npm\n\n### 1.1.2 ###\n\n* Created functions: lines, chars, words functions\n\n### 1.0.2 ###\n\n* Created integration test suite with underscore.js 1.1.4 (now it\'s absolutely compatible)\n* Removed \'reverse\' function, because this function override underscore.js \'reverse\'\n\n## Contribute ##\n\n* Fork & pull request. Don\'t forget about tests.\n* If you planning add some feature please create issue before.\n\nOtherwise changes will be rejected.\n\n## Contributors list ##\n[Can be found here](https://github.com/epeli/underscore.string/graphs/contributors).\n\n\n## Licence ##\n\nThe MIT License\n\nCopyright (c) 2011 Esa-Matti Suuronen esa-matti@suuronen.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n',
2715 silly resolved     readmeFilename: 'README.markdown',
2715 silly resolved     _id: 'underscore.string@2.3.3',
2715 silly resolved     _from: 'underscore.string@~2.3.1' } ]
2716 info install underscore@1.4.4 into /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2717 info install underscore.string@2.3.3 into /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2718 info installOne underscore@1.4.4
2719 info installOne underscore.string@2.3.3
2720 info /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore unbuild
2721 info /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string unbuild
2722 verbose tar unpack /home/ahmad/.npm/underscore/1.4.4/package.tgz
2723 silly lockFile 61da0a03-argparse-node-modules-underscore tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore
2724 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore /home/ahmad/.npm/61da0a03-argparse-node-modules-underscore.lock
2725 silly lockFile be39a566-npm-underscore-1-4-4-package-tgz tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz
2726 verbose lock tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz /home/ahmad/.npm/be39a566-npm-underscore-1-4-4-package-tgz.lock
2727 verbose tar unpack /home/ahmad/.npm/underscore.string/2.3.3/package.tgz
2728 silly lockFile 88a7f30a-e-node-modules-underscore-string tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string
2729 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string /home/ahmad/.npm/88a7f30a-e-node-modules-underscore-string.lock
2730 silly lockFile 31a5ed9e-erscore-string-2-3-3-package-tgz tar:///home/ahmad/.npm/underscore.string/2.3.3/package.tgz
2731 verbose lock tar:///home/ahmad/.npm/underscore.string/2.3.3/package.tgz /home/ahmad/.npm/31a5ed9e-erscore-string-2-3-3-package-tgz.lock
2732 silly gunzTarPerm modes [ '755', '644' ]
2733 silly gunzTarPerm modes [ '755', '644' ]
2734 silly gunzTarPerm extractEntry package.json
2735 silly gunzTarPerm extractEntry package.json
2736 silly gunzTarPerm extractEntry .npmignore
2737 silly gunzTarPerm extractEntry README.md
2738 silly gunzTarPerm extractEntry component.json
2739 silly gunzTarPerm extractEntry Gemfile.lock
2740 silly gunzTarPerm extractEntry LICENSE
2741 silly gunzTarPerm extractEntry underscore-min.js
2742 silly gunzTarPerm extractEntry README.markdown
2743 silly gunzTarPerm extractEntry Rakefile
2744 silly gunzTarPerm extractEntry index.js
2745 silly gunzTarPerm extractEntry Gemfile
2746 silly gunzTarPerm extractEntry dist/underscore.string.min.js
2747 silly gunzTarPerm extractEntry underscore.js
2748 silly gunzTarPerm extractEntry index.html
2749 silly gunzTarPerm extractEntry lib/underscore.string.js
2750 silly gunzTarPerm extractEntry libpeerconnection.log
2751 silly gunzTarPerm extractEntry .travis.yml
2752 silly gunzTarPerm extractEntry CONTRIBUTING.md
2753 silly gunzTarPerm extractEntry CNAME
2754 silly gunzTarPerm extractEntry favicon.ico
2755 silly gunzTarPerm extractEntry .travis.yml
2756 silly gunzTarPerm extractEntry test/run-qunit.js
2757 silly gunzTarPerm extractEntry test/speed.js
2758 silly gunzTarPerm extractEntry test/strings.js
2759 silly gunzTarPerm extractEntry test/strings_standalone.js
2760 silly gunzTarPerm extractEntry test/underscore.js
2761 silly gunzTarPerm extractEntry test/test.html
2762 silly gunzTarPerm extractEntry test/test_standalone.html
2763 silly gunzTarPerm extractEntry test/test_underscore/arrays.js
2764 silly gunzTarPerm extractEntry test/test_underscore/chaining.js
2765 silly gunzTarPerm extractEntry test/test_underscore/collections.js
2766 silly gunzTarPerm extractEntry test/test_underscore/functions.js
2767 silly gunzTarPerm extractEntry test/test_underscore/objects.js
2768 silly gunzTarPerm extractEntry test/test_underscore/speed.js
2769 silly gunzTarPerm extractEntry test/test_underscore/utility.js
2770 silly gunzTarPerm extractEntry test/test_underscore/index.html
2771 silly gunzTarPerm extractEntry test/test_underscore/vendor/jquery.js
2772 silly gunzTarPerm extractEntry test/test_underscore/vendor/jslitmus.js
2773 silly gunzTarPerm extractEntry test/test_underscore/vendor/qunit.js
2774 silly gunzTarPerm extractEntry test/test_underscore/vendor/qunit.css
2775 silly lockFile 61da0a03-argparse-node-modules-underscore tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore
2776 silly lockFile 61da0a03-argparse-node-modules-underscore tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore
2777 silly lockFile be39a566-npm-underscore-1-4-4-package-tgz tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz
2778 silly lockFile be39a566-npm-underscore-1-4-4-package-tgz tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz
2779 info preinstall underscore@1.4.4
2780 verbose readDependencies using package.json deps
2781 verbose readDependencies using package.json deps
2782 silly resolved []
2783 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore
2784 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore
2785 verbose linkStuff [ false,
2785 verbose linkStuff   false,
2785 verbose linkStuff   false,
2785 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules' ]
2786 info linkStuff underscore@1.4.4
2787 verbose linkBins underscore@1.4.4
2788 verbose linkMans underscore@1.4.4
2789 verbose rebuildBundles underscore@1.4.4
2790 info install underscore@1.4.4
2791 info postinstall underscore@1.4.4
2792 silly lockFile 88a7f30a-e-node-modules-underscore-string tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string
2793 silly lockFile 88a7f30a-e-node-modules-underscore-string tar:///var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string
2794 silly lockFile 31a5ed9e-erscore-string-2-3-3-package-tgz tar:///home/ahmad/.npm/underscore.string/2.3.3/package.tgz
2795 silly lockFile 31a5ed9e-erscore-string-2-3-3-package-tgz tar:///home/ahmad/.npm/underscore.string/2.3.3/package.tgz
2796 info preinstall underscore.string@2.3.3
2797 verbose readDependencies using package.json deps
2798 verbose readDependencies using package.json deps
2799 silly resolved []
2800 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string
2801 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules/underscore.string
2802 verbose linkStuff [ false,
2802 verbose linkStuff   false,
2802 verbose linkStuff   false,
2802 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse/node_modules' ]
2803 info linkStuff underscore.string@2.3.3
2804 verbose linkBins underscore.string@2.3.3
2805 verbose linkMans underscore.string@2.3.3
2806 verbose rebuildBundles underscore.string@2.3.3
2807 info install underscore.string@2.3.3
2808 info postinstall underscore.string@2.3.3
2809 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2810 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules/argparse
2811 verbose linkStuff [ false,
2811 verbose linkStuff   false,
2811 verbose linkStuff   false,
2811 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml/node_modules' ]
2812 info linkStuff argparse@0.1.15
2813 verbose linkBins argparse@0.1.15
2814 verbose linkMans argparse@0.1.15
2815 verbose rebuildBundles argparse@0.1.15
2816 verbose rebuildBundles [ 'underscore', 'underscore.string' ]
2817 info install argparse@0.1.15
2818 info postinstall argparse@0.1.15
2819 verbose about to build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
2820 info build /var/www/sites/marker/http/node_modules/grunt/node_modules/js-yaml
2821 verbose linkStuff [ false,
2821 verbose linkStuff   false,
2821 verbose linkStuff   false,
2821 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt/node_modules' ]
2822 info linkStuff js-yaml@2.0.5
2823 verbose linkBins js-yaml@2.0.5
2824 verbose link bins [ { 'js-yaml': 'bin/js-yaml.js' },
2824 verbose link bins   '/var/www/sites/marker/http/node_modules/grunt/node_modules/.bin',
2824 verbose link bins   false ]
2825 verbose linkMans js-yaml@2.0.5
2826 verbose rebuildBundles js-yaml@2.0.5
2827 verbose rebuildBundles [ '.bin', 'argparse', 'esprima' ]
2828 info install js-yaml@2.0.5
2829 info postinstall js-yaml@2.0.5
2830 verbose about to build /var/www/sites/marker/http/node_modules/grunt
2831 info build /var/www/sites/marker/http/node_modules/grunt
2832 verbose linkStuff [ false, false, false, '/var/www/sites/marker/http/node_modules' ]
2833 info linkStuff grunt@0.4.1
2834 verbose linkBins grunt@0.4.1
2835 verbose linkMans grunt@0.4.1
2836 verbose rebuildBundles grunt@0.4.1
2837 verbose rebuildBundles [ '.bin',
2837 verbose rebuildBundles   'async',
2837 verbose rebuildBundles   'coffee-script',
2837 verbose rebuildBundles   'colors',
2837 verbose rebuildBundles   'dateformat',
2837 verbose rebuildBundles   'eventemitter2',
2837 verbose rebuildBundles   'findup-sync',
2837 verbose rebuildBundles   'glob',
2837 verbose rebuildBundles   'hooker',
2837 verbose rebuildBundles   'iconv-lite',
2837 verbose rebuildBundles   'js-yaml',
2837 verbose rebuildBundles   'lodash',
2837 verbose rebuildBundles   'minimatch',
2837 verbose rebuildBundles   'nopt',
2837 verbose rebuildBundles   'rimraf',
2837 verbose rebuildBundles   'underscore.string',
2837 verbose rebuildBundles   'which' ]
2838 info install grunt@0.4.1
2839 info postinstall grunt@0.4.1
2840 http 304 https://registry.npmjs.org/underscore
2841 silly registry.get cb [ 304,
2841 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
2841 silly registry.get     etag: '"5B5TFBCUD4EE1HARVYGBG8GFE"',
2841 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:02 GMT',
2841 silly registry.get     'content-length': '0' } ]
2842 verbose etag underscore from cache
2843 silly addNameRange number 2 { name: 'underscore',
2843 silly addNameRange   range: '>=1.4.0-0 <1.5.0-0',
2843 silly addNameRange   hasData: true }
2844 silly addNameRange versions [ 'underscore',
2844 silly addNameRange   [ '1.0.3',
2844 silly addNameRange     '1.0.4',
2844 silly addNameRange     '1.1.0',
2844 silly addNameRange     '1.1.1',
2844 silly addNameRange     '1.1.2',
2844 silly addNameRange     '1.1.3',
2844 silly addNameRange     '1.1.4',
2844 silly addNameRange     '1.1.5',
2844 silly addNameRange     '1.1.6',
2844 silly addNameRange     '1.1.7',
2844 silly addNameRange     '1.2.0',
2844 silly addNameRange     '1.2.1',
2844 silly addNameRange     '1.2.2',
2844 silly addNameRange     '1.2.3',
2844 silly addNameRange     '1.2.4',
2844 silly addNameRange     '1.3.0',
2844 silly addNameRange     '1.3.1',
2844 silly addNameRange     '1.3.2',
2844 silly addNameRange     '1.3.3',
2844 silly addNameRange     '1.4.0',
2844 silly addNameRange     '1.4.1',
2844 silly addNameRange     '1.4.2',
2844 silly addNameRange     '1.4.3',
2844 silly addNameRange     '1.4.4',
2844 silly addNameRange     '1.5.0',
2844 silly addNameRange     '1.5.1',
2844 silly addNameRange     '1.5.2' ] ]
2845 verbose addNamed [ 'underscore', '1.4.4' ]
2846 verbose addNamed [ '1.4.4', '1.4.4' ]
2847 silly lockFile c6b5e825-underscore-1-4-4 underscore@1.4.4
2848 verbose lock underscore@1.4.4 /home/ahmad/.npm/c6b5e825-underscore-1-4-4.lock
2849 silly lockFile c6b5e825-underscore-1-4-4 underscore@1.4.4
2850 silly lockFile c6b5e825-underscore-1-4-4 underscore@1.4.4
2851 silly lockFile 53dcd9dd-underscore-1-4-x underscore@1.4.x
2852 silly lockFile 53dcd9dd-underscore-1-4-x underscore@1.4.x
2853 http 304 https://registry.npmjs.org/minimatch
2854 silly registry.get cb [ 304,
2854 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
2854 silly registry.get     etag: '"433GUXE31BY78MEUH5M7CIXOG"',
2854 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:04 GMT',
2854 silly registry.get     'content-length': '0' } ]
2855 verbose etag minimatch from cache
2856 silly addNameRange number 2 { name: 'minimatch', range: '>=0.0.0-0 <1.0.0-0', hasData: true }
2857 silly addNameRange versions [ 'minimatch',
2857 silly addNameRange   [ '0.0.1',
2857 silly addNameRange     '0.0.2',
2857 silly addNameRange     '0.0.4',
2857 silly addNameRange     '0.0.5',
2857 silly addNameRange     '0.1.1',
2857 silly addNameRange     '0.1.2',
2857 silly addNameRange     '0.1.3',
2857 silly addNameRange     '0.1.4',
2857 silly addNameRange     '0.1.5',
2857 silly addNameRange     '0.2.0',
2857 silly addNameRange     '0.2.2',
2857 silly addNameRange     '0.2.3',
2857 silly addNameRange     '0.2.4',
2857 silly addNameRange     '0.2.5',
2857 silly addNameRange     '0.2.6',
2857 silly addNameRange     '0.2.7',
2857 silly addNameRange     '0.2.8',
2857 silly addNameRange     '0.2.9',
2857 silly addNameRange     '0.2.10',
2857 silly addNameRange     '0.2.11',
2857 silly addNameRange     '0.2.12' ] ]
2858 verbose addNamed [ 'minimatch', '0.2.12' ]
2859 verbose addNamed [ '0.2.12', '0.2.12' ]
2860 silly lockFile 16b89810-minimatch-0-2-12 minimatch@0.2.12
2861 verbose lock minimatch@0.2.12 /home/ahmad/.npm/16b89810-minimatch-0-2-12.lock
2862 silly lockFile 16b89810-minimatch-0-2-12 minimatch@0.2.12
2863 silly lockFile 16b89810-minimatch-0-2-12 minimatch@0.2.12
2864 silly lockFile 38c78372-minimatch-0-x-x minimatch@0.x.x
2865 silly lockFile 38c78372-minimatch-0-x-x minimatch@0.x.x
2866 http 200 https://registry.npmjs.org/uglify-js
2867 silly registry.get cb [ 200,
2867 silly registry.get   { vary: 'Accept',
2867 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2867 silly registry.get     etag: '"8F2LII37BZLUX0TAQX8OBKYDU"',
2867 silly registry.get     date: 'Sun, 17 Nov 2013 21:47:28 GMT',
2867 silly registry.get     'content-type': 'application/json',
2867 silly registry.get     'content-length': '548750' } ]
2868 silly addNameRange number 2 { name: 'uglify-js', range: '>=2.4.0-0 <2.5.0-0', hasData: true }
2869 silly addNameRange versions [ 'uglify-js',
2869 silly addNameRange   [ '0.0.1',
2869 silly addNameRange     '0.0.2',
2869 silly addNameRange     '0.0.3',
2869 silly addNameRange     '0.0.4',
2869 silly addNameRange     '0.0.5',
2869 silly addNameRange     '1.0.1',
2869 silly addNameRange     '1.0.2',
2869 silly addNameRange     '1.0.3',
2869 silly addNameRange     '1.0.4',
2869 silly addNameRange     '1.0.5',
2869 silly addNameRange     '1.0.6',
2869 silly addNameRange     '1.0.7',
2869 silly addNameRange     '1.1.0',
2869 silly addNameRange     '1.1.1',
2869 silly addNameRange     '1.2.0',
2869 silly addNameRange     '1.2.1',
2869 silly addNameRange     '1.2.2',
2869 silly addNameRange     '1.2.3',
2869 silly addNameRange     '1.2.4',
2869 silly addNameRange     '1.2.5',
2869 silly addNameRange     '1.2.6',
2869 silly addNameRange     '1.3.0',
2869 silly addNameRange     '1.3.1',
2869 silly addNameRange     '1.3.2',
2869 silly addNameRange     '1.3.3',
2869 silly addNameRange     '1.3.4',
2869 silly addNameRange     '2.2.0',
2869 silly addNameRange     '2.2.1',
2869 silly addNameRange     '2.2.2',
2869 silly addNameRange     '2.2.3',
2869 silly addNameRange     '2.2.4',
2869 silly addNameRange     '2.2.5',
2869 silly addNameRange     '2.3.0',
2869 silly addNameRange     '2.3.1',
2869 silly addNameRange     '2.3.2',
2869 silly addNameRange     '2.3.3',
2869 silly addNameRange     '2.3.4',
2869 silly addNameRange     '2.3.5',
2869 silly addNameRange     '2.3.6',
2869 silly addNameRange     '1.3.5',
2869 silly addNameRange     '2.4.0',
2869 silly addNameRange     '2.4.1',
2869 silly addNameRange     '2.4.2',
2869 silly addNameRange     '2.4.3' ] ]
2870 verbose addNamed [ 'uglify-js', '2.4.3' ]
2871 verbose addNamed [ '2.4.3', '2.4.3' ]
2872 silly lockFile efa364d0-uglify-js-2-4-3 uglify-js@2.4.3
2873 verbose lock uglify-js@2.4.3 /home/ahmad/.npm/efa364d0-uglify-js-2-4-3.lock
2874 silly lockFile 3344164f-rg-uglify-js-uglify-js-2-4-3-tgz https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz
2875 verbose lock https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz /home/ahmad/.npm/3344164f-rg-uglify-js-uglify-js-2-4-3-tgz.lock
2876 verbose addRemoteTarball [ 'https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz',
2876 verbose addRemoteTarball   '6883cd4b837a4d004191c9ea05394cfa596c3748' ]
2877 info retry fetch attempt 1 at 23:48:22
2878 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/tmp.tgz
2879 http GET https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz
2880 http 200 https://registry.npmjs.org/console-browserify
2881 silly registry.get cb [ 200,
2881 silly registry.get   { vary: 'Accept',
2881 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
2881 silly registry.get     etag: '"A6FUTX76X8Y0BIXTD4F10KYVN"',
2881 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:16 GMT',
2881 silly registry.get     'content-type': 'application/json',
2881 silly registry.get     'content-length': '18503' } ]
2882 silly addNameRange number 2 { name: 'console-browserify',
2882 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
2882 silly addNameRange   hasData: true }
2883 silly addNameRange versions [ 'console-browserify',
2883 silly addNameRange   [ '0.1.0',
2883 silly addNameRange     '0.1.1',
2883 silly addNameRange     '0.1.2',
2883 silly addNameRange     '0.1.3',
2883 silly addNameRange     '0.1.4',
2883 silly addNameRange     '0.1.5',
2883 silly addNameRange     '0.1.6',
2883 silly addNameRange     '1.0.1' ] ]
2884 verbose addNamed [ 'console-browserify', '0.1.6' ]
2885 verbose addNamed [ '0.1.6', '0.1.6' ]
2886 silly lockFile f41566ee-console-browserify-0-1-6 console-browserify@0.1.6
2887 verbose lock console-browserify@0.1.6 /home/ahmad/.npm/f41566ee-console-browserify-0-1-6.lock
2888 silly lockFile 1199cf87-ify-console-browserify-0-1-6-tgz https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz
2889 verbose lock https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz /home/ahmad/.npm/1199cf87-ify-console-browserify-0-1-6-tgz.lock
2890 verbose addRemoteTarball [ 'https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz',
2890 verbose addRemoteTarball   'd128a3c0bb88350eb5626c6e7c71a6f0fd48983c' ]
2891 info retry fetch attempt 1 at 23:48:24
2892 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/tmp.tgz
2893 http GET https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz
2894 http 200 https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz
2895 http 200 https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz
2896 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/tmp.tgz
2897 silly lockFile 536d351c-904465-0-780641203513369-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2898 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package /home/ahmad/.npm/536d351c-904465-0-780641203513369-package.lock
2899 silly lockFile 125b0acc-904465-0-780641203513369-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/tmp.tgz
2900 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/tmp.tgz /home/ahmad/.npm/125b0acc-904465-0-780641203513369-tmp-tgz.lock
2901 silly gunzTarPerm modes [ '755', '644' ]
2902 silly gunzTarPerm extractEntry package.json
2903 silly gunzTarPerm extractEntry .npmignore
2904 silly gunzTarPerm extractEntry README.md
2905 silly gunzTarPerm extractEntry LICENCE
2906 silly gunzTarPerm extractEntry index.js
2907 silly gunzTarPerm extractEntry .testem.json
2908 silly gunzTarPerm extractEntry test/index.js
2909 silly gunzTarPerm extractEntry test/static/test-adapter.js
2910 silly gunzTarPerm extractEntry test/static/index.html
2911 silly gunzTarPerm extractEntry .travis.yml
2912 silly lockFile 536d351c-904465-0-780641203513369-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2913 silly lockFile 536d351c-904465-0-780641203513369-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2914 silly lockFile 125b0acc-904465-0-780641203513369-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/tmp.tgz
2915 silly lockFile 125b0acc-904465-0-780641203513369-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/tmp.tgz
2916 verbose tar pack [ '/home/ahmad/.npm/console-browserify/0.1.6/package.tgz',
2916 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package' ]
2917 verbose tarball /home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2918 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2919 silly lockFile 536d351c-904465-0-780641203513369-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2920 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package /home/ahmad/.npm/536d351c-904465-0-780641203513369-package.lock
2921 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2922 verbose lock tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz /home/ahmad/.npm/1904875e-ole-browserify-0-1-6-package-tgz.lock
2923 silly lockFile 536d351c-904465-0-780641203513369-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2924 silly lockFile 536d351c-904465-0-780641203513369-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724904465-0.780641203513369/package
2925 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2926 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2927 silly lockFile fff1d0c5-console-browserify-0-1-6-package /home/ahmad/.npm/console-browserify/0.1.6/package
2928 verbose lock /home/ahmad/.npm/console-browserify/0.1.6/package /home/ahmad/.npm/fff1d0c5-console-browserify-0-1-6-package.lock
2929 silly lockFile fff1d0c5-console-browserify-0-1-6-package /home/ahmad/.npm/console-browserify/0.1.6/package
2930 silly lockFile fff1d0c5-console-browserify-0-1-6-package /home/ahmad/.npm/console-browserify/0.1.6/package
2931 verbose tar unpack /home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2932 silly lockFile 9c2357b1-console-browserify-0-1-6-package tar:///home/ahmad/.npm/console-browserify/0.1.6/package
2933 verbose lock tar:///home/ahmad/.npm/console-browserify/0.1.6/package /home/ahmad/.npm/9c2357b1-console-browserify-0-1-6-package.lock
2934 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2935 verbose lock tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz /home/ahmad/.npm/1904875e-ole-browserify-0-1-6-package-tgz.lock
2936 silly gunzTarPerm modes [ '755', '644' ]
2937 silly gunzTarPerm extractEntry package.json
2938 silly gunzTarPerm extractEntry .npmignore
2939 silly gunzTarPerm extractEntry README.md
2940 silly gunzTarPerm extractEntry LICENCE
2941 silly gunzTarPerm extractEntry index.js
2942 silly gunzTarPerm extractEntry .testem.json
2943 silly gunzTarPerm extractEntry .travis.yml
2944 silly gunzTarPerm extractEntry test/index.js
2945 silly gunzTarPerm extractEntry test/static/test-adapter.js
2946 silly gunzTarPerm extractEntry test/static/index.html
2947 silly lockFile 9c2357b1-console-browserify-0-1-6-package tar:///home/ahmad/.npm/console-browserify/0.1.6/package
2948 silly lockFile 9c2357b1-console-browserify-0-1-6-package tar:///home/ahmad/.npm/console-browserify/0.1.6/package
2949 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2950 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
2951 verbose chmod /home/ahmad/.npm/console-browserify/0.1.6/package.tgz 644
2952 verbose chown /home/ahmad/.npm/console-browserify/0.1.6/package.tgz [ 1000, 1000 ]
2953 silly lockFile 1199cf87-ify-console-browserify-0-1-6-tgz https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz
2954 silly lockFile 1199cf87-ify-console-browserify-0-1-6-tgz https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz
2955 silly lockFile f41566ee-console-browserify-0-1-6 console-browserify@0.1.6
2956 silly lockFile f41566ee-console-browserify-0-1-6 console-browserify@0.1.6
2957 silly lockFile e69eec4c-console-browserify-0-1-x console-browserify@0.1.x
2958 silly lockFile e69eec4c-console-browserify-0-1-x console-browserify@0.1.x
2959 http 200 https://registry.npmjs.org/cli
2960 silly registry.get cb [ 200,
2960 silly registry.get   { vary: 'Accept',
2960 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
2960 silly registry.get     etag: '"22PZAKGQ2TRANTUMT2LYDK4ZS"',
2960 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:16 GMT',
2960 silly registry.get     'content-type': 'application/json',
2960 silly registry.get     'content-length': '89695' } ]
2961 silly addNameRange number 2 { name: 'cli', range: '>=0.4.0-0 <0.5.0-0', hasData: true }
2962 silly addNameRange versions [ 'cli',
2962 silly addNameRange   [ '0.1.0',
2962 silly addNameRange     '0.1.1',
2962 silly addNameRange     '0.1.3',
2962 silly addNameRange     '0.1.4',
2962 silly addNameRange     '0.1.5',
2962 silly addNameRange     '0.1.6',
2962 silly addNameRange     '0.1.7',
2962 silly addNameRange     '0.1.8',
2962 silly addNameRange     '0.1.9',
2962 silly addNameRange     '0.2.0',
2962 silly addNameRange     '0.2.1-1',
2962 silly addNameRange     '0.2.2-1',
2962 silly addNameRange     '0.2.3-1',
2962 silly addNameRange     '0.2.3-2',
2962 silly addNameRange     '0.2.3-3',
2962 silly addNameRange     '0.2.3-4',
2962 silly addNameRange     '0.2.3-5',
2962 silly addNameRange     '0.2.4-1',
2962 silly addNameRange     '0.2.4-2',
2962 silly addNameRange     '0.2.5',
2962 silly addNameRange     '0.2.6',
2962 silly addNameRange     '0.2.7',
2962 silly addNameRange     '0.2.8',
2962 silly addNameRange     '0.3.0',
2962 silly addNameRange     '0.3.1',
2962 silly addNameRange     '0.3.2',
2962 silly addNameRange     '0.3.3',
2962 silly addNameRange     '0.3.4',
2962 silly addNameRange     '0.3.5',
2962 silly addNameRange     '0.3.6',
2962 silly addNameRange     '0.3.7',
2962 silly addNameRange     '0.3.8',
2962 silly addNameRange     '0.3.9',
2962 silly addNameRange     '0.4.0',
2962 silly addNameRange     '0.4.1',
2962 silly addNameRange     '0.4.2',
2962 silly addNameRange     '0.4.3',
2962 silly addNameRange     '0.4.4',
2962 silly addNameRange     '0.4.4-1',
2962 silly addNameRange     '0.4.4-2',
2962 silly addNameRange     '0.4.5' ] ]
2963 verbose addNamed [ 'cli', '0.4.5' ]
2964 verbose addNamed [ '0.4.5', '0.4.5' ]
2965 silly lockFile f66b4835-cli-0-4-5 cli@0.4.5
2966 verbose lock cli@0.4.5 /home/ahmad/.npm/f66b4835-cli-0-4-5.lock
2967 silly lockFile 7d319445-stry-npmjs-org-cli-cli-0-4-5-tgz https://registry.npmjs.org/cli/-/cli-0.4.5.tgz
2968 verbose lock https://registry.npmjs.org/cli/-/cli-0.4.5.tgz /home/ahmad/.npm/7d319445-stry-npmjs-org-cli-cli-0-4-5-tgz.lock
2969 verbose addRemoteTarball [ 'https://registry.npmjs.org/cli/-/cli-0.4.5.tgz',
2969 verbose addRemoteTarball   '78f9485cd161b566e9a6c72d7170c4270e81db61' ]
2970 info retry fetch attempt 1 at 23:48:46
2971 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/tmp.tgz
2972 http GET https://registry.npmjs.org/cli/-/cli-0.4.5.tgz
2973 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/tmp.tgz
2974 silly lockFile d9c1003f-02631-0-9908489040099084-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
2975 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package /home/ahmad/.npm/d9c1003f-02631-0-9908489040099084-package.lock
2976 silly lockFile 2346cffd-02631-0-9908489040099084-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/tmp.tgz
2977 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/tmp.tgz /home/ahmad/.npm/2346cffd-02631-0-9908489040099084-tmp-tgz.lock
2978 silly gunzTarPerm modes [ '755', '644' ]
2979 silly gunzTarPerm extractEntry package.json
2980 silly gunzTarPerm extractEntry .npmignore
2981 silly gunzTarPerm extractEntry README.md
2982 silly gunzTarPerm extractEntry LICENSE
2983 silly gunzTarPerm extractEntry .travis.yml
2984 silly gunzTarPerm extractEntry bin/uglifyjs
2985 silly gunzTarPerm extractEntry lib/ast.js
2986 silly gunzTarPerm extractEntry lib/compress.js
2987 silly gunzTarPerm extractEntry lib/mozilla-ast.js
2988 silly gunzTarPerm extractEntry lib/output.js
2989 silly gunzTarPerm extractEntry lib/parse.js
2990 silly gunzTarPerm extractEntry lib/scope.js
2991 silly gunzTarPerm extractEntry lib/sourcemap.js
2992 silly gunzTarPerm extractEntry lib/transform.js
2993 silly gunzTarPerm extractEntry lib/utils.js
2994 silly gunzTarPerm extractEntry test/run-tests.js
2995 silly gunzTarPerm extractEntry test/compress/arrays.js
2996 silly gunzTarPerm extractEntry test/compress/issue-12.js
2997 silly gunzTarPerm extractEntry test/compress/issue-126.js
2998 silly gunzTarPerm extractEntry test/compress/issue-143.js
2999 silly gunzTarPerm extractEntry test/compress/issue-105.js
3000 silly gunzTarPerm extractEntry test/compress/issue-267.js
3001 silly gunzTarPerm extractEntry test/compress/issue-269.js
3002 silly gunzTarPerm extractEntry test/compress/issue-44.js
3003 silly gunzTarPerm extractEntry test/compress/issue-59.js
3004 silly gunzTarPerm extractEntry test/compress/labels.js
3005 silly gunzTarPerm extractEntry test/compress/drop-unused.js
3006 silly gunzTarPerm extractEntry test/compress/loops.js
3007 silly gunzTarPerm extractEntry test/compress/debugger.js
3008 silly gunzTarPerm extractEntry test/compress/negate-iife.js
3009 silly gunzTarPerm extractEntry test/compress/dead-code.js
3010 silly gunzTarPerm extractEntry test/compress/properties.js
3011 silly gunzTarPerm extractEntry test/compress/conditionals.js
3012 silly gunzTarPerm extractEntry test/compress/sequences.js
3013 silly gunzTarPerm extractEntry test/compress/concat-strings.js
3014 silly gunzTarPerm extractEntry test/compress/switch.js
3015 silly gunzTarPerm extractEntry test/compress/blocks.js
3016 silly gunzTarPerm extractEntry test/compress/typeof.js
3017 silly gunzTarPerm extractEntry test/compress/issue-22.js
3018 silly gunzTarPerm extractEntry tools/node.js
3019 silly lockFile d9c1003f-02631-0-9908489040099084-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
3020 silly lockFile d9c1003f-02631-0-9908489040099084-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
3021 silly lockFile 2346cffd-02631-0-9908489040099084-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/tmp.tgz
3022 silly lockFile 2346cffd-02631-0-9908489040099084-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/tmp.tgz
3023 verbose tar pack [ '/home/ahmad/.npm/uglify-js/2.4.3/package.tgz',
3023 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package' ]
3024 verbose tarball /home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3025 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
3026 silly lockFile d9c1003f-02631-0-9908489040099084-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
3027 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package /home/ahmad/.npm/d9c1003f-02631-0-9908489040099084-package.lock
3028 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3029 verbose lock tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz /home/ahmad/.npm/bb61a8ba--npm-uglify-js-2-4-3-package-tgz.lock
3030 silly lockFile d9c1003f-02631-0-9908489040099084-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
3031 silly lockFile d9c1003f-02631-0-9908489040099084-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724902631-0.9908489040099084/package
3032 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3033 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3034 silly lockFile b40a6ca7-hmad-npm-uglify-js-2-4-3-package /home/ahmad/.npm/uglify-js/2.4.3/package
3035 verbose lock /home/ahmad/.npm/uglify-js/2.4.3/package /home/ahmad/.npm/b40a6ca7-hmad-npm-uglify-js-2-4-3-package.lock
3036 silly lockFile b40a6ca7-hmad-npm-uglify-js-2-4-3-package /home/ahmad/.npm/uglify-js/2.4.3/package
3037 silly lockFile b40a6ca7-hmad-npm-uglify-js-2-4-3-package /home/ahmad/.npm/uglify-js/2.4.3/package
3038 verbose tar unpack /home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3039 silly lockFile 47370593-hmad-npm-uglify-js-2-4-3-package tar:///home/ahmad/.npm/uglify-js/2.4.3/package
3040 verbose lock tar:///home/ahmad/.npm/uglify-js/2.4.3/package /home/ahmad/.npm/47370593-hmad-npm-uglify-js-2-4-3-package.lock
3041 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3042 verbose lock tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz /home/ahmad/.npm/bb61a8ba--npm-uglify-js-2-4-3-package-tgz.lock
3043 silly gunzTarPerm modes [ '755', '644' ]
3044 silly gunzTarPerm extractEntry package.json
3045 silly gunzTarPerm extractEntry .npmignore
3046 silly gunzTarPerm extractEntry README.md
3047 silly gunzTarPerm extractEntry LICENSE
3048 silly gunzTarPerm extractEntry .travis.yml
3049 silly gunzTarPerm extractEntry bin/uglifyjs
3050 silly gunzTarPerm extractEntry lib/ast.js
3051 silly gunzTarPerm extractEntry lib/compress.js
3052 silly gunzTarPerm extractEntry lib/mozilla-ast.js
3053 silly gunzTarPerm extractEntry lib/output.js
3054 silly gunzTarPerm extractEntry lib/parse.js
3055 silly gunzTarPerm extractEntry lib/scope.js
3056 silly gunzTarPerm extractEntry lib/sourcemap.js
3057 silly gunzTarPerm extractEntry lib/transform.js
3058 silly gunzTarPerm extractEntry lib/utils.js
3059 silly gunzTarPerm extractEntry test/run-tests.js
3060 silly gunzTarPerm extractEntry test/compress/arrays.js
3061 silly gunzTarPerm extractEntry test/compress/issue-12.js
3062 silly gunzTarPerm extractEntry test/compress/issue-126.js
3063 silly gunzTarPerm extractEntry test/compress/issue-143.js
3064 silly gunzTarPerm extractEntry test/compress/issue-105.js
3065 silly gunzTarPerm extractEntry test/compress/issue-267.js
3066 silly gunzTarPerm extractEntry test/compress/issue-269.js
3067 silly gunzTarPerm extractEntry test/compress/issue-44.js
3068 silly gunzTarPerm extractEntry test/compress/issue-59.js
3069 silly gunzTarPerm extractEntry test/compress/labels.js
3070 silly gunzTarPerm extractEntry test/compress/drop-unused.js
3071 silly gunzTarPerm extractEntry test/compress/loops.js
3072 silly gunzTarPerm extractEntry test/compress/debugger.js
3073 silly gunzTarPerm extractEntry test/compress/negate-iife.js
3074 silly gunzTarPerm extractEntry test/compress/dead-code.js
3075 silly gunzTarPerm extractEntry test/compress/properties.js
3076 silly gunzTarPerm extractEntry test/compress/conditionals.js
3077 silly gunzTarPerm extractEntry test/compress/sequences.js
3078 silly gunzTarPerm extractEntry test/compress/concat-strings.js
3079 silly gunzTarPerm extractEntry test/compress/switch.js
3080 silly gunzTarPerm extractEntry test/compress/blocks.js
3081 silly gunzTarPerm extractEntry test/compress/typeof.js
3082 silly gunzTarPerm extractEntry test/compress/issue-22.js
3083 silly gunzTarPerm extractEntry tools/node.js
3084 silly lockFile 47370593-hmad-npm-uglify-js-2-4-3-package tar:///home/ahmad/.npm/uglify-js/2.4.3/package
3085 silly lockFile 47370593-hmad-npm-uglify-js-2-4-3-package tar:///home/ahmad/.npm/uglify-js/2.4.3/package
3086 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3087 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3088 verbose chmod /home/ahmad/.npm/uglify-js/2.4.3/package.tgz 644
3089 verbose chown /home/ahmad/.npm/uglify-js/2.4.3/package.tgz [ 1000, 1000 ]
3090 silly lockFile 3344164f-rg-uglify-js-uglify-js-2-4-3-tgz https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz
3091 silly lockFile 3344164f-rg-uglify-js-uglify-js-2-4-3-tgz https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz
3092 silly lockFile efa364d0-uglify-js-2-4-3 uglify-js@2.4.3
3093 silly lockFile efa364d0-uglify-js-2-4-3 uglify-js@2.4.3
3094 silly lockFile 1d881e0f-uglify-js-2-4-0 uglify-js@~2.4.0
3095 silly lockFile 1d881e0f-uglify-js-2-4-0 uglify-js@~2.4.0
3096 silly resolved [ { name: 'grunt-lib-contrib',
3096 silly resolved     description: 'Common functionality shared across grunt-contrib tasks.',
3096 silly resolved     version: '0.6.1',
3096 silly resolved     homepage: 'http://github.com/gruntjs/grunt-lib-contrib',
3096 silly resolved     author: { name: 'Grunt Team', url: 'http://gruntjs.com/' },
3096 silly resolved     repository:
3096 silly resolved      { type: 'git',
3096 silly resolved        url: 'git://github.com/gruntjs/grunt-lib-contrib.git' },
3096 silly resolved     bugs: { url: 'https://github.com/gruntjs/grunt-lib-contrib/issues' },
3096 silly resolved     licenses: [ [Object] ],
3096 silly resolved     engines: { node: '>= 0.8.0' },
3096 silly resolved     scripts: { test: 'grunt test' },
3096 silly resolved     devDependencies:
3096 silly resolved      { 'grunt-contrib-jshint': '~0.1.1',
3096 silly resolved        'grunt-contrib-nodeunit': '~0.1.2',
3096 silly resolved        grunt: '~0.4.0' },
3096 silly resolved     main: 'lib/contrib',
3096 silly resolved     dependencies: { 'zlib-browserify': '0.0.1' },
3096 silly resolved     contributors: [ [Object], [Object], [Object], [Object] ],
3096 silly resolved     readme: '# grunt-lib-contrib [![Build Status](https://secure.travis-ci.org/gruntjs/grunt-lib-contrib.png?branch=master)](http://travis-ci.org/gruntjs/grunt-lib-contrib)\n\n> Common functionality shared across grunt-contrib tasks.\n\nThe purpose of grunt-lib-contrib is to explore solutions to common problems task writers encounter, and to ease the upgrade path for contrib tasks.\n\n**These APIs should be considered highly unstable. Depend on them at your own risk!**\n\n_Over time, some of the functionality provided here may be incorporated directly into grunt for mainstream use. Until then, you may require `grunt-lib-contrib` as a dependency in your projects, but be very careful to specify an exact version number instead of a range, as backwards-incompatible changes are likely to be introduced._\n\n### Helper Functions\n\n#### getNamespaceDeclaration(ns)\n\nThis helper is used to build JS namespace declarations.\n\n#### optsToArgs(options)\n\nConvert an object to an array of CLI arguments, which can be used with `child_process.spawn()`.\n\n```js\n// Example\n{\n  fooBar: \'a\',        // [\'--foo-bar\', \'a\']\n  fooBar: 1,          // [\'--foo-bar\', \'1\']\n  fooBar: true,       // [\'--foo-bar\']\n  fooBar: false,      //\n  fooBar: [\'a\', \'b\']  // [\'--foo-bar\', \'a\', \'--foo-bar\', \'b\']\n}\n```\n\n#### stripPath(pth, strip)\n\nStrip a path from a path. normalize both paths for best results.\n\n#### minMaxInfo(min, max, report)\n\nHelper for logging compressed, uncompressed and gzipped sizes of strings.\n\n#### report\nChoices: `false`, `\'min\'`, `\'gzip\'`\nDefault: `false`\n\nEither do not report anything, report only minification result, or report minification and gzip results.\n\n**Important** Including `\'gzip\'` results can make this task 5-10x slower depending on the size of the file.\n\n\n```js\nvar max = grunt.file.read(\'max.js\');\nvar min = minify(max);\nminMaxInfo(min, max, \'gzip\');\n```\n\nWould print:\n\n```\nOriginal: 495 bytes.\nMinified: 396 bytes.\nGzipped: 36 bytes.\n```\n\n--\n\n*Lib submitted by [Tyler Kellen](https://goingslowly.com/).*',
3096 silly resolved     readmeFilename: 'README.md',
3096 silly resolved     _id: 'grunt-lib-contrib@0.6.1',
3096 silly resolved     dist: { shasum: 'c6a4da4b015c20d309dfbad25cd809ecca23ed80' },
3096 silly resolved     _from: 'grunt-lib-contrib@~0.6.1',
3096 silly resolved     _resolved: 'https://registry.npmjs.org/grunt-lib-contrib/-/grunt-lib-contrib-0.6.1.tgz' },
3096 silly resolved   { name: 'uglify-js',
3096 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
3096 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
3096 silly resolved     main: 'tools/node.js',
3096 silly resolved     version: '2.4.3',
3096 silly resolved     engines: { node: '>=0.4.0' },
3096 silly resolved     maintainers: [ [Object] ],
3096 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
3096 silly resolved     dependencies:
3096 silly resolved      { async: '~0.2.6',
3096 silly resolved        'source-map': '~0.1.7',
3096 silly resolved        optimist: '~0.3.5',
3096 silly resolved        'uglify-to-browserify': '~1.0.0' },
3096 silly resolved     browserify: { transform: [Object] },
3096 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
3096 silly resolved     scripts: { test: 'node test/run-tests.js' },
3096 silly resolved     readme: 'UglifyJS 2\n==========\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nThe available options are:\n\n```\n  --source-map       Specify an output file where to generate source map.\n                                                                        [string]\n  --source-map-root  The path to the original source to be included in the\n                     source map.                                        [string]\n  --source-map-url   The path to the source map to be added in //#\n                     sourceMappingURL.  Defaults to the value passed with\n                     --source-map.                                      [string]\n  --in-source-map    Input source map, useful if you\'re compressing JS that was\n                     generated from some other original code.\n  --screw-ie8        Pass this flag if you don\'t care about full compliance\n                     with Internet Explorer 6-8 quirks (by default UglifyJS\n                     will try to be IE-proof).                         [boolean]\n  --expr             Parse a single expression, rather than a program (for\n                     parsing JSON)                                     [boolean]\n  -p, --prefix       Skip prefix for original filenames that appear in source\n                     maps. For example -p 3 will drop 3 directories from file\n                     names and ensure they are relative paths. You can also\n                     specify -p relative, which will make UglifyJS figure out\n                     itself the relative paths between original sources, the\n                     source map and the output file.                    [string]\n  -o, --output       Output file (default STDOUT).\n  -b, --beautify     Beautify output/specify output options.            [string]\n  -m, --mangle       Mangle names/pass mangler options.                 [string]\n  -r, --reserved     Reserved names to exclude from mangling.\n  -c, --compress     Enable compressor/pass compressor options. Pass options\n                     like -c hoist_vars=false,if_return=false. Use -c with no\n                     argument to use the default compression options.   [string]\n  -d, --define       Global definitions                                 [string]\n  -e, --enclose      Embed everything in a big function, with a configurable\n                     parameter/argument list.                           [string]\n  --comments         Preserve copyright comments in the output. By default this\n                     works like Google Closure, keeping JSDoc-style comments\n                     that contain "@license" or "@preserve". You can optionally\n                     pass one of the following arguments to this flag:\n                     - "all" to keep all comments\n                     - a valid JS regexp (needs to start with a slash) to keep\n                     only comments that match.\n                     Note that currently not *all* comments can be kept when\n                     compression is on, because of dead code removal or\n                     cascading statements into sequences.               [string]\n  --preamble         Preamble to prepend to the output.  You can use this to\n                     insert a comment, for example for licensing information.\n                     This will not be parsed, but the source map will adjust\n                     for its presence.\n  --stats            Display operations run time on STDERR.            [boolean]\n  --acorn            Use Acorn for parsing.                            [boolean]\n  --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\n                                                                       [boolean]\n  --self             Build itself (UglifyJS2) as a library (implies\n                     --wrap=UglifyJS --export-all)                     [boolean]\n  --wrap             Embed everything in a big function, making the “exports”\n                     and “global” variables available. You need to pass an\n                     argument to this option to specify the name that your\n                     module will take when included in, say, a browser.\n                                                                        [string]\n  --export-all       Only used when --wrap, this tells UglifyJS to add code to\n                     automatically export all globals.                 [boolean]\n  --lint             Display some scope warnings                       [boolean]\n  -v, --verbose      Verbose                                           [boolean]\n  -V, --version      Print version number and exit.                    [boolean]\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `sort` — to assign shorter names to most frequently used variables.  This\n  saves a few hundred bytes on jQuery before gzip, but the output is\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\n  on) therefore it\'s not enabled by default.\n\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\n  default).\n\n- `eval` — mangle names visible in scopes where `eval` or `when` are used\n  (disabled by default).\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\n- `sequences` -- join consecutive simple statements using the comma operator\n\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n\n- `dead_code` -- remove unreachable code\n\n- `drop_debugger` -- remove `debugger;` statements\n\n- `unsafe` (default: false) -- apply "unsafe" transformations (discussion below)\n\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n\n- `evaluate` -- attempt to evaluate constant expressions\n\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n\n- `unused` -- drop unreferenced functions and variables\n\n- `hoist_funs` -- hoist function declarations\n\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` -- optimizations for if/return and if/continue\n\n- `join_vars` -- join consecutive `var` statements\n\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n- `negate_iife` -- negate "Immediately-Called Function Expressions"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `pure_getters` -- the default is `false`.  If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo["bar"]`) doesn\'t have any side effects.\n\n- `pure_funcs` -- default `null`.  You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ \'Math.floor\' ]` to let it know that this\n  function won\'t produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower).\n\n### The `unsafe` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here\'s what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `"" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n- `typeof foo == "undefined"` → `foo === void 0`\n- `void 0` → `undefined` (if there is a variable named "undefined" in\n  scope; we do it because the variable name will be mangled, typically\n  reduced to a single character).\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n\tconsole.log("debug stuff");\n}\n```\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nconst DEBUG = false;\nconst PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The possible downside of this approach is that the build\nwill contain the `const` declarations.\n\n<a name="codegen-options"></a>\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n\t/** @preserve Foo Bar */\n\tfunction g() {\n\t  // this function is never called\n\t}\n\treturn something();\n}\n```\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require("uglify-js");\n```\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n```javascript\nvar result = UglifyJS.minify("/path/to/file.js");\nconsole.log(result.code); // minified output\n// if you need to pass code instead of file name\nvar result = UglifyJS.minify("var b = function () {};", {fromString: true});\n```\n\nYou can also compress multiple files:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\nconsole.log(result.code);\n```\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map"\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);\n```\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map",\n\tsourceRoot: "http://example.com/src"\n});\n```\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: "compiled.js.map",\n\toutSourceMap: "minified.js.map"\n});\n// same as before, it returns `code` and `map`\n```\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n```javascript\nvar toplevel_ast = UglifyJS.parse(code, options);\n```\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n```javascript\nvar toplevel = null;\nfiles.forEach(function(file){\n\tvar code = fs.readFileSync(file);\n\ttoplevel = UglifyJS.parse(code, {\n\t\tfilename: file,\n\t\ttoplevel: toplevel\n\t});\n});\n```\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n```javascript\ntoplevel.figure_out_scope()\n```\n\n#### Compression\n\nLike this:\n```javascript\nvar compressor = UglifyJS.Compressor(options);\nvar compressed_ast = toplevel.transform(compressor);\n```\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n```javascript\ncompressed_ast.figure_out_scope();\ncompressed_ast.compute_char_frequency();\ncompressed_ast.mangle_names();\n```\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n```javascript\nvar stream = UglifyJS.OutputStream(options);\ncompressed_ast.print(stream);\nvar code = stream.toString(); // this is your minified code\n```\n\nor, for a shortcut you can do:\n```javascript\nvar code = compressed_ast.print_to_string(options);\n```\n\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n```javascript\nvar source_map = UglifyJS.SourceMap(source_map_options);\nvar stream = UglifyJS.OutputStream({\n\t...\n\tsource_map: source_map\n});\ncompressed_ast.print(stream);\n\nvar code = stream.toString();\nvar map = source_map.toString(); // json output for your source map\n```\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/marijnh/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n',
3096 silly resolved     readmeFilename: 'README.md',
3096 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
3096 silly resolved     _id: 'uglify-js@2.4.3',
3096 silly resolved     dist: { shasum: '6883cd4b837a4d004191c9ea05394cfa596c3748' },
3096 silly resolved     _from: 'uglify-js@~2.4.0',
3096 silly resolved     _resolved: 'https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.3.tgz' } ]
3097 info install grunt-lib-contrib@0.6.1 into /var/www/sites/marker/http/node_modules/grunt-contrib-uglify
3098 info install uglify-js@2.4.3 into /var/www/sites/marker/http/node_modules/grunt-contrib-uglify
3099 info installOne grunt-lib-contrib@0.6.1
3100 info installOne uglify-js@2.4.3
3101 info /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib unbuild
3102 info /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js unbuild
3103 verbose tar unpack /home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
3104 silly lockFile 043b7ab9-y-node-modules-grunt-lib-contrib tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib
3105 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib /home/ahmad/.npm/043b7ab9-y-node-modules-grunt-lib-contrib.lock
3106 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
3107 verbose lock tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz /home/ahmad/.npm/6e7f71a4-nt-lib-contrib-0-6-1-package-tgz.lock
3108 verbose tar unpack /home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3109 silly lockFile 2dd3e480-ib-uglify-node-modules-uglify-js tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js
3110 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js /home/ahmad/.npm/2dd3e480-ib-uglify-node-modules-uglify-js.lock
3111 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3112 verbose lock tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz /home/ahmad/.npm/bb61a8ba--npm-uglify-js-2-4-3-package-tgz.lock
3113 silly gunzTarPerm modes [ '755', '644' ]
3114 silly gunzTarPerm modes [ '755', '644' ]
3115 silly gunzTarPerm extractEntry package.json
3116 silly gunzTarPerm extractEntry package.json
3117 silly gunzTarPerm extractEntry .npmignore
3118 silly gunzTarPerm extractEntry README.md
3119 silly gunzTarPerm extractEntry .npmignore
3120 silly gunzTarPerm extractEntry README.md
3121 silly gunzTarPerm extractEntry Gruntfile.js
3122 silly gunzTarPerm extractEntry AUTHORS
3123 silly gunzTarPerm extractEntry LICENSE
3124 silly gunzTarPerm extractEntry CHANGELOG
3125 silly gunzTarPerm extractEntry .jshintrc
3126 silly gunzTarPerm extractEntry .travis.yml
3127 silly gunzTarPerm extractEntry bin/uglifyjs
3128 silly gunzTarPerm extractEntry LICENSE-MIT
3129 silly gunzTarPerm extractEntry .gitattributes
3130 silly gunzTarPerm extractEntry lib/contrib.js
3131 silly gunzTarPerm extractEntry .travis.yml
3132 silly gunzTarPerm extractEntry test/lib_test.js
3133 silly gunzTarPerm extractEntry lib/ast.js
3134 silly gunzTarPerm extractEntry lib/compress.js
3135 silly gunzTarPerm extractEntry lib/mozilla-ast.js
3136 silly gunzTarPerm extractEntry lib/output.js
3137 silly gunzTarPerm extractEntry lib/parse.js
3138 silly gunzTarPerm extractEntry lib/scope.js
3139 silly gunzTarPerm extractEntry lib/sourcemap.js
3140 silly lockFile 043b7ab9-y-node-modules-grunt-lib-contrib tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib
3141 silly lockFile 043b7ab9-y-node-modules-grunt-lib-contrib tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib
3142 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
3143 silly lockFile 6e7f71a4-nt-lib-contrib-0-6-1-package-tgz tar:///home/ahmad/.npm/grunt-lib-contrib/0.6.1/package.tgz
3144 info preinstall grunt-lib-contrib@0.6.1
3145 verbose readDependencies using package.json deps
3146 verbose readDependencies using package.json deps
3147 verbose cache add [ 'zlib-browserify@0.0.1', null ]
3148 verbose cache add name=undefined spec="zlib-browserify@0.0.1" args=["zlib-browserify@0.0.1",null]
3149 verbose parsed url { protocol: null,
3149 verbose parsed url   slashes: null,
3149 verbose parsed url   auth: null,
3149 verbose parsed url   host: null,
3149 verbose parsed url   port: null,
3149 verbose parsed url   hostname: null,
3149 verbose parsed url   hash: null,
3149 verbose parsed url   search: null,
3149 verbose parsed url   query: null,
3149 verbose parsed url   pathname: 'zlib-browserify@0.0.1',
3149 verbose parsed url   path: 'zlib-browserify@0.0.1',
3149 verbose parsed url   href: 'zlib-browserify@0.0.1' }
3150 verbose cache add name="zlib-browserify" spec="0.0.1" args=["zlib-browserify","0.0.1"]
3151 verbose parsed url { protocol: null,
3151 verbose parsed url   slashes: null,
3151 verbose parsed url   auth: null,
3151 verbose parsed url   host: null,
3151 verbose parsed url   port: null,
3151 verbose parsed url   hostname: null,
3151 verbose parsed url   hash: null,
3151 verbose parsed url   search: null,
3151 verbose parsed url   query: null,
3151 verbose parsed url   pathname: '0.0.1',
3151 verbose parsed url   path: '0.0.1',
3151 verbose parsed url   href: '0.0.1' }
3152 verbose addNamed [ 'zlib-browserify', '0.0.1' ]
3153 verbose addNamed [ '0.0.1', '0.0.1' ]
3154 silly lockFile 84e77944-zlib-browserify-0-0-1 zlib-browserify@0.0.1
3155 verbose lock zlib-browserify@0.0.1 /home/ahmad/.npm/84e77944-zlib-browserify-0-0-1.lock
3156 verbose url raw zlib-browserify/0.0.1
3157 verbose url resolving [ 'https://registry.npmjs.org/', './zlib-browserify/0.0.1' ]
3158 verbose url resolved https://registry.npmjs.org/zlib-browserify/0.0.1
3159 info trying registry request attempt 1 at 23:48:55
3160 http GET https://registry.npmjs.org/zlib-browserify/0.0.1
3161 silly gunzTarPerm extractEntry lib/transform.js
3162 silly gunzTarPerm extractEntry lib/utils.js
3163 silly gunzTarPerm extractEntry test/run-tests.js
3164 silly gunzTarPerm extractEntry test/compress/arrays.js
3165 silly gunzTarPerm extractEntry test/compress/issue-12.js
3166 silly gunzTarPerm extractEntry test/compress/issue-126.js
3167 silly gunzTarPerm extractEntry test/compress/issue-143.js
3168 silly gunzTarPerm extractEntry test/compress/issue-105.js
3169 silly gunzTarPerm extractEntry test/compress/issue-267.js
3170 silly gunzTarPerm extractEntry test/compress/issue-269.js
3171 silly gunzTarPerm extractEntry test/compress/issue-44.js
3172 silly gunzTarPerm extractEntry test/compress/issue-59.js
3173 silly gunzTarPerm extractEntry test/compress/labels.js
3174 silly gunzTarPerm extractEntry test/compress/drop-unused.js
3175 silly gunzTarPerm extractEntry test/compress/loops.js
3176 silly gunzTarPerm extractEntry test/compress/debugger.js
3177 silly gunzTarPerm extractEntry test/compress/negate-iife.js
3178 silly gunzTarPerm extractEntry test/compress/dead-code.js
3179 silly gunzTarPerm extractEntry test/compress/properties.js
3180 silly gunzTarPerm extractEntry test/compress/conditionals.js
3181 silly gunzTarPerm extractEntry test/compress/sequences.js
3182 silly gunzTarPerm extractEntry test/compress/concat-strings.js
3183 silly gunzTarPerm extractEntry test/compress/switch.js
3184 silly gunzTarPerm extractEntry test/compress/blocks.js
3185 silly gunzTarPerm extractEntry test/compress/typeof.js
3186 silly gunzTarPerm extractEntry test/compress/issue-22.js
3187 silly gunzTarPerm extractEntry tools/node.js
3188 silly lockFile 2dd3e480-ib-uglify-node-modules-uglify-js tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js
3189 silly lockFile 2dd3e480-ib-uglify-node-modules-uglify-js tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js
3190 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3191 silly lockFile bb61a8ba--npm-uglify-js-2-4-3-package-tgz tar:///home/ahmad/.npm/uglify-js/2.4.3/package.tgz
3192 info preinstall uglify-js@2.4.3
3193 verbose readDependencies using package.json deps
3194 verbose readDependencies using package.json deps
3195 verbose cache add [ 'async@~0.2.6', null ]
3196 verbose cache add name=undefined spec="async@~0.2.6" args=["async@~0.2.6",null]
3197 verbose parsed url { protocol: null,
3197 verbose parsed url   slashes: null,
3197 verbose parsed url   auth: null,
3197 verbose parsed url   host: null,
3197 verbose parsed url   port: null,
3197 verbose parsed url   hostname: null,
3197 verbose parsed url   hash: null,
3197 verbose parsed url   search: null,
3197 verbose parsed url   query: null,
3197 verbose parsed url   pathname: 'async@~0.2.6',
3197 verbose parsed url   path: 'async@~0.2.6',
3197 verbose parsed url   href: 'async@~0.2.6' }
3198 verbose cache add name="async" spec="~0.2.6" args=["async","~0.2.6"]
3199 verbose parsed url { protocol: null,
3199 verbose parsed url   slashes: null,
3199 verbose parsed url   auth: null,
3199 verbose parsed url   host: null,
3199 verbose parsed url   port: null,
3199 verbose parsed url   hostname: null,
3199 verbose parsed url   hash: null,
3199 verbose parsed url   search: null,
3199 verbose parsed url   query: null,
3199 verbose parsed url   pathname: '~0.2.6',
3199 verbose parsed url   path: '~0.2.6',
3199 verbose parsed url   href: '~0.2.6' }
3200 verbose addNamed [ 'async', '~0.2.6' ]
3201 verbose addNamed [ null, '>=0.2.6-0 <0.3.0-0' ]
3202 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
3203 verbose lock async@~0.2.6 /home/ahmad/.npm/e00b1d77-async-0-2-6.lock
3204 verbose cache add [ 'source-map@~0.1.7', null ]
3205 verbose cache add name=undefined spec="source-map@~0.1.7" args=["source-map@~0.1.7",null]
3206 verbose parsed url { protocol: null,
3206 verbose parsed url   slashes: null,
3206 verbose parsed url   auth: null,
3206 verbose parsed url   host: null,
3206 verbose parsed url   port: null,
3206 verbose parsed url   hostname: null,
3206 verbose parsed url   hash: null,
3206 verbose parsed url   search: null,
3206 verbose parsed url   query: null,
3206 verbose parsed url   pathname: 'source-map@~0.1.7',
3206 verbose parsed url   path: 'source-map@~0.1.7',
3206 verbose parsed url   href: 'source-map@~0.1.7' }
3207 verbose cache add name="source-map" spec="~0.1.7" args=["source-map","~0.1.7"]
3208 verbose parsed url { protocol: null,
3208 verbose parsed url   slashes: null,
3208 verbose parsed url   auth: null,
3208 verbose parsed url   host: null,
3208 verbose parsed url   port: null,
3208 verbose parsed url   hostname: null,
3208 verbose parsed url   hash: null,
3208 verbose parsed url   search: null,
3208 verbose parsed url   query: null,
3208 verbose parsed url   pathname: '~0.1.7',
3208 verbose parsed url   path: '~0.1.7',
3208 verbose parsed url   href: '~0.1.7' }
3209 verbose addNamed [ 'source-map', '~0.1.7' ]
3210 verbose addNamed [ null, '>=0.1.7-0 <0.2.0-0' ]
3211 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
3212 verbose lock source-map@~0.1.7 /home/ahmad/.npm/19b4245f-source-map-0-1-7.lock
3213 verbose cache add [ 'optimist@~0.3.5', null ]
3214 verbose cache add name=undefined spec="optimist@~0.3.5" args=["optimist@~0.3.5",null]
3215 verbose parsed url { protocol: null,
3215 verbose parsed url   slashes: null,
3215 verbose parsed url   auth: null,
3215 verbose parsed url   host: null,
3215 verbose parsed url   port: null,
3215 verbose parsed url   hostname: null,
3215 verbose parsed url   hash: null,
3215 verbose parsed url   search: null,
3215 verbose parsed url   query: null,
3215 verbose parsed url   pathname: 'optimist@~0.3.5',
3215 verbose parsed url   path: 'optimist@~0.3.5',
3215 verbose parsed url   href: 'optimist@~0.3.5' }
3216 verbose cache add name="optimist" spec="~0.3.5" args=["optimist","~0.3.5"]
3217 verbose parsed url { protocol: null,
3217 verbose parsed url   slashes: null,
3217 verbose parsed url   auth: null,
3217 verbose parsed url   host: null,
3217 verbose parsed url   port: null,
3217 verbose parsed url   hostname: null,
3217 verbose parsed url   hash: null,
3217 verbose parsed url   search: null,
3217 verbose parsed url   query: null,
3217 verbose parsed url   pathname: '~0.3.5',
3217 verbose parsed url   path: '~0.3.5',
3217 verbose parsed url   href: '~0.3.5' }
3218 verbose addNamed [ 'optimist', '~0.3.5' ]
3219 verbose addNamed [ null, '>=0.3.5-0 <0.4.0-0' ]
3220 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
3221 verbose lock optimist@~0.3.5 /home/ahmad/.npm/a1f99b53-optimist-0-3-5.lock
3222 silly addNameRange { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: false }
3223 verbose cache add [ 'uglify-to-browserify@~1.0.0', null ]
3224 verbose cache add name=undefined spec="uglify-to-browserify@~1.0.0" args=["uglify-to-browserify@~1.0.0",null]
3225 verbose parsed url { protocol: null,
3225 verbose parsed url   slashes: null,
3225 verbose parsed url   auth: null,
3225 verbose parsed url   host: null,
3225 verbose parsed url   port: null,
3225 verbose parsed url   hostname: null,
3225 verbose parsed url   hash: null,
3225 verbose parsed url   search: null,
3225 verbose parsed url   query: null,
3225 verbose parsed url   pathname: 'uglify-to-browserify@~1.0.0',
3225 verbose parsed url   path: 'uglify-to-browserify@~1.0.0',
3225 verbose parsed url   href: 'uglify-to-browserify@~1.0.0' }
3226 verbose cache add name="uglify-to-browserify" spec="~1.0.0" args=["uglify-to-browserify","~1.0.0"]
3227 verbose parsed url { protocol: null,
3227 verbose parsed url   slashes: null,
3227 verbose parsed url   auth: null,
3227 verbose parsed url   host: null,
3227 verbose parsed url   port: null,
3227 verbose parsed url   hostname: null,
3227 verbose parsed url   hash: null,
3227 verbose parsed url   search: null,
3227 verbose parsed url   query: null,
3227 verbose parsed url   pathname: '~1.0.0',
3227 verbose parsed url   path: '~1.0.0',
3227 verbose parsed url   href: '~1.0.0' }
3228 verbose addNamed [ 'uglify-to-browserify', '~1.0.0' ]
3229 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
3230 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
3231 verbose lock uglify-to-browserify@~1.0.0 /home/ahmad/.npm/8d4498e3-uglify-to-browserify-1-0-0.lock
3232 silly addNameRange { name: 'source-map',
3232 silly addNameRange   range: '>=0.1.7-0 <0.2.0-0',
3232 silly addNameRange   hasData: false }
3233 silly addNameRange { name: 'optimist', range: '>=0.3.5-0 <0.4.0-0', hasData: false }
3234 verbose url raw source-map
3235 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
3236 verbose url resolved https://registry.npmjs.org/source-map
3237 info trying registry request attempt 1 at 23:48:55
3238 http GET https://registry.npmjs.org/source-map
3239 silly addNameRange { name: 'uglify-to-browserify',
3239 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
3239 silly addNameRange   hasData: false }
3240 verbose url raw optimist
3241 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
3242 verbose url resolved https://registry.npmjs.org/optimist
3243 info trying registry request attempt 1 at 23:48:55
3244 http GET https://registry.npmjs.org/optimist
3245 verbose url raw uglify-to-browserify
3246 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-to-browserify' ]
3247 verbose url resolved https://registry.npmjs.org/uglify-to-browserify
3248 info trying registry request attempt 1 at 23:48:55
3249 http GET https://registry.npmjs.org/uglify-to-browserify
3250 verbose url raw async
3251 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
3252 verbose url resolved https://registry.npmjs.org/async
3253 info trying registry request attempt 1 at 23:48:55
3254 verbose etag "2B1Y1C2HQ67I3WVSBVWN4MMV1"
3255 http GET https://registry.npmjs.org/async
3256 http 200 https://registry.npmjs.org/cli/-/cli-0.4.5.tgz
3257 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/tmp.tgz
3258 silly lockFile d7ce82b8-6023-0-29879950103349984-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3259 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package /home/ahmad/.npm/d7ce82b8-6023-0-29879950103349984-package.lock
3260 silly lockFile 15b8ff67-6023-0-29879950103349984-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/tmp.tgz
3261 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/tmp.tgz /home/ahmad/.npm/15b8ff67-6023-0-29879950103349984-tmp-tgz.lock
3262 silly gunzTarPerm modes [ '755', '644' ]
3263 silly gunzTarPerm extractEntry package.json
3264 silly gunzTarPerm extractEntry README.md
3265 silly gunzTarPerm extractEntry cli.js
3266 silly gunzTarPerm extractEntry index.js
3267 silly gunzTarPerm extractEntry examples/cat.js
3268 silly gunzTarPerm extractEntry examples/command.js
3269 silly gunzTarPerm extractEntry examples/echo.js
3270 silly gunzTarPerm extractEntry examples/glob.js
3271 silly gunzTarPerm extractEntry examples/long_desc.js
3272 silly gunzTarPerm extractEntry examples/progress.js
3273 silly gunzTarPerm extractEntry examples/sort.js
3274 silly gunzTarPerm extractEntry examples/spinner.js
3275 silly gunzTarPerm extractEntry examples/static.js
3276 silly gunzTarPerm extractEntry examples/static.coffee
3277 silly lockFile d7ce82b8-6023-0-29879950103349984-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3278 silly lockFile d7ce82b8-6023-0-29879950103349984-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3279 silly lockFile 15b8ff67-6023-0-29879950103349984-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/tmp.tgz
3280 silly lockFile 15b8ff67-6023-0-29879950103349984-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/tmp.tgz
3281 verbose tar pack [ '/home/ahmad/.npm/cli/0.4.5/package.tgz',
3281 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package' ]
3282 verbose tarball /home/ahmad/.npm/cli/0.4.5/package.tgz
3283 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3284 silly lockFile d7ce82b8-6023-0-29879950103349984-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3285 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package /home/ahmad/.npm/d7ce82b8-6023-0-29879950103349984-package.lock
3286 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3287 verbose lock tar:///home/ahmad/.npm/cli/0.4.5/package.tgz /home/ahmad/.npm/597c9cef--ahmad-npm-cli-0-4-5-package-tgz.lock
3288 silly lockFile d7ce82b8-6023-0-29879950103349984-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3289 silly lockFile d7ce82b8-6023-0-29879950103349984-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724926023-0.29879950103349984/package
3290 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3291 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3292 silly lockFile 28f7046a-home-ahmad-npm-cli-0-4-5-package /home/ahmad/.npm/cli/0.4.5/package
3293 verbose lock /home/ahmad/.npm/cli/0.4.5/package /home/ahmad/.npm/28f7046a-home-ahmad-npm-cli-0-4-5-package.lock
3294 silly lockFile 28f7046a-home-ahmad-npm-cli-0-4-5-package /home/ahmad/.npm/cli/0.4.5/package
3295 silly lockFile 28f7046a-home-ahmad-npm-cli-0-4-5-package /home/ahmad/.npm/cli/0.4.5/package
3296 verbose tar unpack /home/ahmad/.npm/cli/0.4.5/package.tgz
3297 silly lockFile 7327f421-home-ahmad-npm-cli-0-4-5-package tar:///home/ahmad/.npm/cli/0.4.5/package
3298 verbose lock tar:///home/ahmad/.npm/cli/0.4.5/package /home/ahmad/.npm/7327f421-home-ahmad-npm-cli-0-4-5-package.lock
3299 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3300 verbose lock tar:///home/ahmad/.npm/cli/0.4.5/package.tgz /home/ahmad/.npm/597c9cef--ahmad-npm-cli-0-4-5-package-tgz.lock
3301 silly gunzTarPerm modes [ '755', '644' ]
3302 silly gunzTarPerm extractEntry package.json
3303 silly gunzTarPerm extractEntry README.md
3304 silly gunzTarPerm extractEntry cli.js
3305 silly gunzTarPerm extractEntry index.js
3306 silly gunzTarPerm extractEntry examples/cat.js
3307 silly gunzTarPerm extractEntry examples/command.js
3308 silly gunzTarPerm extractEntry examples/echo.js
3309 silly gunzTarPerm extractEntry examples/glob.js
3310 silly gunzTarPerm extractEntry examples/long_desc.js
3311 silly gunzTarPerm extractEntry examples/progress.js
3312 silly gunzTarPerm extractEntry examples/sort.js
3313 silly gunzTarPerm extractEntry examples/spinner.js
3314 silly gunzTarPerm extractEntry examples/static.js
3315 silly gunzTarPerm extractEntry examples/static.coffee
3316 silly lockFile 7327f421-home-ahmad-npm-cli-0-4-5-package tar:///home/ahmad/.npm/cli/0.4.5/package
3317 silly lockFile 7327f421-home-ahmad-npm-cli-0-4-5-package tar:///home/ahmad/.npm/cli/0.4.5/package
3318 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3319 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3320 verbose chmod /home/ahmad/.npm/cli/0.4.5/package.tgz 644
3321 verbose chown /home/ahmad/.npm/cli/0.4.5/package.tgz [ 1000, 1000 ]
3322 silly lockFile 7d319445-stry-npmjs-org-cli-cli-0-4-5-tgz https://registry.npmjs.org/cli/-/cli-0.4.5.tgz
3323 silly lockFile 7d319445-stry-npmjs-org-cli-cli-0-4-5-tgz https://registry.npmjs.org/cli/-/cli-0.4.5.tgz
3324 silly lockFile f66b4835-cli-0-4-5 cli@0.4.5
3325 silly lockFile f66b4835-cli-0-4-5 cli@0.4.5
3326 silly lockFile c9212ae8-cli-0-4-x cli@0.4.x
3327 silly lockFile c9212ae8-cli-0-4-x cli@0.4.x
3328 http 200 https://registry.npmjs.org/uglify-to-browserify
3329 silly registry.get cb [ 200,
3329 silly registry.get   { vary: 'Accept',
3329 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
3329 silly registry.get     etag: '"9P5P8PAAUQI16CE3E1JIIS31J"',
3329 silly registry.get     date: 'Sun, 17 Nov 2013 21:49:01 GMT',
3329 silly registry.get     'content-type': 'application/json',
3329 silly registry.get     'content-length': '6048' } ]
3330 silly addNameRange number 2 { name: 'uglify-to-browserify',
3330 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
3330 silly addNameRange   hasData: true }
3331 silly addNameRange versions [ 'uglify-to-browserify', [ '0.0.1', '1.0.0', '1.0.1' ] ]
3332 verbose addNamed [ 'uglify-to-browserify', '1.0.1' ]
3333 verbose addNamed [ '1.0.1', '1.0.1' ]
3334 silly lockFile 7ae28580-uglify-to-browserify-1-0-1 uglify-to-browserify@1.0.1
3335 verbose lock uglify-to-browserify@1.0.1 /home/ahmad/.npm/7ae28580-uglify-to-browserify-1-0-1.lock
3336 silly lockFile 1c860f2b-y-uglify-to-browserify-1-0-1-tgz https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz
3337 verbose lock https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz /home/ahmad/.npm/1c860f2b-y-uglify-to-browserify-1-0-1-tgz.lock
3338 verbose addRemoteTarball [ 'https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz',
3338 verbose addRemoteTarball   '0e9ada5d4ca358a59a00bb33c8061e2f40ef97d2' ]
3339 info retry fetch attempt 1 at 23:49:07
3340 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/tmp.tgz
3341 http GET https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz
3342 http 304 https://registry.npmjs.org/async
3343 silly registry.get cb [ 304,
3343 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
3343 silly registry.get     etag: '"2B1Y1C2HQ67I3WVSBVWN4MMV1"',
3343 silly registry.get     date: 'Sun, 17 Nov 2013 21:49:07 GMT',
3343 silly registry.get     'content-length': '0' } ]
3344 verbose etag async from cache
3345 silly addNameRange number 2 { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: true }
3346 silly addNameRange versions [ 'async',
3346 silly addNameRange   [ '0.1.0',
3346 silly addNameRange     '0.1.1',
3346 silly addNameRange     '0.1.2',
3346 silly addNameRange     '0.1.3',
3346 silly addNameRange     '0.1.4',
3346 silly addNameRange     '0.1.5',
3346 silly addNameRange     '0.1.6',
3346 silly addNameRange     '0.1.7',
3346 silly addNameRange     '0.1.8',
3346 silly addNameRange     '0.1.9',
3346 silly addNameRange     '0.1.10',
3346 silly addNameRange     '0.1.11',
3346 silly addNameRange     '0.1.12',
3346 silly addNameRange     '0.1.13',
3346 silly addNameRange     '0.1.14',
3346 silly addNameRange     '0.1.15',
3346 silly addNameRange     '0.1.16',
3346 silly addNameRange     '0.1.17',
3346 silly addNameRange     '0.1.18',
3346 silly addNameRange     '0.1.19',
3346 silly addNameRange     '0.1.20',
3346 silly addNameRange     '0.1.21',
3346 silly addNameRange     '0.1.22',
3346 silly addNameRange     '0.2.0',
3346 silly addNameRange     '0.2.1',
3346 silly addNameRange     '0.2.2',
3346 silly addNameRange     '0.2.3',
3346 silly addNameRange     '0.2.4',
3346 silly addNameRange     '0.2.5',
3346 silly addNameRange     '0.2.6',
3346 silly addNameRange     '0.2.7',
3346 silly addNameRange     '0.2.8',
3346 silly addNameRange     '0.2.9' ] ]
3347 verbose addNamed [ 'async', '0.2.9' ]
3348 verbose addNamed [ '0.2.9', '0.2.9' ]
3349 silly lockFile be62480b-async-0-2-9 async@0.2.9
3350 verbose lock async@0.2.9 /home/ahmad/.npm/be62480b-async-0-2-9.lock
3351 silly lockFile c060db57--npmjs-org-async-async-0-2-9-tgz https://registry.npmjs.org/async/-/async-0.2.9.tgz
3352 verbose lock https://registry.npmjs.org/async/-/async-0.2.9.tgz /home/ahmad/.npm/c060db57--npmjs-org-async-async-0-2-9-tgz.lock
3353 verbose addRemoteTarball [ 'https://registry.npmjs.org/async/-/async-0.2.9.tgz',
3353 verbose addRemoteTarball   'df63060fbf3d33286a76aaf6d55a2986d9ff8619' ]
3354 info retry fetch attempt 1 at 23:49:08
3355 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/tmp.tgz
3356 http GET https://registry.npmjs.org/async/-/async-0.2.9.tgz
3357 http 200 https://registry.npmjs.org/zlib-browserify/0.0.1
3358 silly registry.get cb [ 200,
3358 silly registry.get   { vary: 'Accept',
3358 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
3358 silly registry.get     etag: '"GY58R7QRINTUX67GBI8TKMWV"',
3358 silly registry.get     date: 'Sun, 17 Nov 2013 21:49:10 GMT',
3358 silly registry.get     'content-type': 'application/json',
3358 silly registry.get     'content-length': '904' } ]
3359 silly lockFile cb2295c0-serify-zlib-browserify-0-0-1-tgz https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz
3360 verbose lock https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz /home/ahmad/.npm/cb2295c0-serify-zlib-browserify-0-0-1-tgz.lock
3361 verbose addRemoteTarball [ 'https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz',
3361 verbose addRemoteTarball   '4fa6a45d00dbc15f318a4afa1d9afc0258e176cc' ]
3362 info retry fetch attempt 1 at 23:49:11
3363 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/tmp.tgz
3364 http GET https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz
3365 http 200 https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz
3366 http 200 https://registry.npmjs.org/optimist
3367 silly registry.get cb [ 200,
3367 silly registry.get   { vary: 'Accept',
3367 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
3367 silly registry.get     etag: '"C6WALVG4JDQ8FM5PEBIWUUKZ9"',
3367 silly registry.get     date: 'Sun, 17 Nov 2013 21:49:01 GMT',
3367 silly registry.get     'content-type': 'application/json',
3367 silly registry.get     'content-length': '123896' } ]
3368 silly addNameRange number 2 { name: 'optimist', range: '>=0.3.5-0 <0.4.0-0', hasData: true }
3369 silly addNameRange versions [ 'optimist',
3369 silly addNameRange   [ '0.0.1',
3369 silly addNameRange     '0.0.2',
3369 silly addNameRange     '0.0.4',
3369 silly addNameRange     '0.0.5',
3369 silly addNameRange     '0.0.6',
3369 silly addNameRange     '0.0.7',
3369 silly addNameRange     '0.1.0',
3369 silly addNameRange     '0.1.1',
3369 silly addNameRange     '0.1.2',
3369 silly addNameRange     '0.1.3',
3369 silly addNameRange     '0.1.4',
3369 silly addNameRange     '0.1.5',
3369 silly addNameRange     '0.1.6',
3369 silly addNameRange     '0.1.7',
3369 silly addNameRange     '0.1.8',
3369 silly addNameRange     '0.1.9',
3369 silly addNameRange     '0.0.3',
3369 silly addNameRange     '0.2.0',
3369 silly addNameRange     '0.2.1',
3369 silly addNameRange     '0.2.2',
3369 silly addNameRange     '0.2.3',
3369 silly addNameRange     '0.2.4',
3369 silly addNameRange     '0.2.5',
3369 silly addNameRange     '0.2.6',
3369 silly addNameRange     '0.2.7',
3369 silly addNameRange     '0.2.8',
3369 silly addNameRange     '0.3.0',
3369 silly addNameRange     '0.3.1',
3369 silly addNameRange     '0.3.3',
3369 silly addNameRange     '0.3.4',
3369 silly addNameRange     '0.3.5',
3369 silly addNameRange     '0.3.6',
3369 silly addNameRange     '0.3.7',
3369 silly addNameRange     '0.4.0',
3369 silly addNameRange     '0.5.0',
3369 silly addNameRange     '0.5.1',
3369 silly addNameRange     '0.5.2',
3369 silly addNameRange     '0.6.0' ] ]
3370 verbose addNamed [ 'optimist', '0.3.7' ]
3371 verbose addNamed [ '0.3.7', '0.3.7' ]
3372 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
3373 verbose lock optimist@0.3.7 /home/ahmad/.npm/090e1d8d-optimist-0-3-7.lock
3374 silly lockFile 03b2dd13--org-optimist-optimist-0-3-7-tgz https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz
3375 verbose lock https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz /home/ahmad/.npm/03b2dd13--org-optimist-optimist-0-3-7-tgz.lock
3376 verbose addRemoteTarball [ 'https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz',
3376 verbose addRemoteTarball   'c90941ad59e4273328923074d2cf2e7cbc6ec0d9' ]
3377 info retry fetch attempt 1 at 23:49:16
3378 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/tmp.tgz
3379 http GET https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz
3380 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/tmp.tgz
3381 silly lockFile 7abb4fcd-47667-0-9595237844623625-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3382 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package /home/ahmad/.npm/7abb4fcd-47667-0-9595237844623625-package.lock
3383 silly lockFile 1e5af196-47667-0-9595237844623625-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/tmp.tgz
3384 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/tmp.tgz /home/ahmad/.npm/1e5af196-47667-0-9595237844623625-tmp-tgz.lock
3385 silly gunzTarPerm modes [ '755', '644' ]
3386 http 200 https://registry.npmjs.org/async/-/async-0.2.9.tgz
3387 silly gunzTarPerm extractEntry package.json
3388 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
3389 silly gunzTarPerm extractEntry .npmignore
3390 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
3391 silly gunzTarPerm extractEntry README.md
3392 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
3393 silly gunzTarPerm extractEntry LICENSE
3394 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
3395 silly gunzTarPerm extractEntry index.js
3396 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
3397 silly gunzTarPerm extractEntry .travis.yml
3398 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
3399 silly gunzTarPerm extractEntry test/index.js
3400 silly gunzTarPerm modified mode [ 'test/index.js', 438, 420 ]
3401 silly lockFile 7abb4fcd-47667-0-9595237844623625-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3402 silly lockFile 7abb4fcd-47667-0-9595237844623625-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3403 silly lockFile 1e5af196-47667-0-9595237844623625-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/tmp.tgz
3404 silly lockFile 1e5af196-47667-0-9595237844623625-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/tmp.tgz
3405 verbose tar pack [ '/home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz',
3405 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package' ]
3406 verbose tarball /home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3407 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3408 silly lockFile 7abb4fcd-47667-0-9595237844623625-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3409 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package /home/ahmad/.npm/7abb4fcd-47667-0-9595237844623625-package.lock
3410 silly lockFile ea26ad96--to-browserify-1-0-1-package-tgz tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3411 verbose lock tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz /home/ahmad/.npm/ea26ad96--to-browserify-1-0-1-package-tgz.lock
3412 silly lockFile 7abb4fcd-47667-0-9595237844623625-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3413 silly lockFile 7abb4fcd-47667-0-9595237844623625-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724947667-0.9595237844623625/package
3414 silly lockFile ea26ad96--to-browserify-1-0-1-package-tgz tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3415 silly lockFile ea26ad96--to-browserify-1-0-1-package-tgz tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3416 silly lockFile 2b7d5d73-lify-to-browserify-1-0-1-package /home/ahmad/.npm/uglify-to-browserify/1.0.1/package
3417 verbose lock /home/ahmad/.npm/uglify-to-browserify/1.0.1/package /home/ahmad/.npm/2b7d5d73-lify-to-browserify-1-0-1-package.lock
3418 silly lockFile 2b7d5d73-lify-to-browserify-1-0-1-package /home/ahmad/.npm/uglify-to-browserify/1.0.1/package
3419 silly lockFile 2b7d5d73-lify-to-browserify-1-0-1-package /home/ahmad/.npm/uglify-to-browserify/1.0.1/package
3420 verbose tar unpack /home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3421 silly lockFile d614657e-lify-to-browserify-1-0-1-package tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package
3422 verbose lock tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package /home/ahmad/.npm/d614657e-lify-to-browserify-1-0-1-package.lock
3423 silly lockFile ea26ad96--to-browserify-1-0-1-package-tgz tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3424 verbose lock tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz /home/ahmad/.npm/ea26ad96--to-browserify-1-0-1-package-tgz.lock
3425 silly gunzTarPerm modes [ '755', '644' ]
3426 silly gunzTarPerm extractEntry package.json
3427 silly gunzTarPerm extractEntry .npmignore
3428 silly gunzTarPerm extractEntry README.md
3429 silly gunzTarPerm extractEntry LICENSE
3430 silly gunzTarPerm extractEntry index.js
3431 silly gunzTarPerm extractEntry .travis.yml
3432 silly gunzTarPerm extractEntry test/index.js
3433 silly lockFile d614657e-lify-to-browserify-1-0-1-package tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package
3434 silly lockFile d614657e-lify-to-browserify-1-0-1-package tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package
3435 silly lockFile ea26ad96--to-browserify-1-0-1-package-tgz tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3436 silly lockFile ea26ad96--to-browserify-1-0-1-package-tgz tar:///home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz
3437 verbose chmod /home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz 644
3438 verbose chown /home/ahmad/.npm/uglify-to-browserify/1.0.1/package.tgz [ 1000, 1000 ]
3439 silly lockFile 1c860f2b-y-uglify-to-browserify-1-0-1-tgz https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz
3440 silly lockFile 1c860f2b-y-uglify-to-browserify-1-0-1-tgz https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.1.tgz
3441 silly lockFile 7ae28580-uglify-to-browserify-1-0-1 uglify-to-browserify@1.0.1
3442 silly lockFile 7ae28580-uglify-to-browserify-1-0-1 uglify-to-browserify@1.0.1
3443 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
3444 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
3445 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/tmp.tgz
3446 silly lockFile 1b62838d-48946-0-5480874567292631-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3447 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package /home/ahmad/.npm/1b62838d-48946-0-5480874567292631-package.lock
3448 silly lockFile 68a7e973-48946-0-5480874567292631-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/tmp.tgz
3449 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/tmp.tgz /home/ahmad/.npm/68a7e973-48946-0-5480874567292631-tmp-tgz.lock
3450 silly gunzTarPerm modes [ '755', '644' ]
3451 silly gunzTarPerm extractEntry package.json
3452 silly gunzTarPerm extractEntry README.md
3453 silly gunzTarPerm extractEntry LICENSE
3454 silly gunzTarPerm extractEntry component.json
3455 silly gunzTarPerm extractEntry lib/async.js
3456 silly lockFile 1b62838d-48946-0-5480874567292631-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3457 silly lockFile 1b62838d-48946-0-5480874567292631-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3458 silly lockFile 68a7e973-48946-0-5480874567292631-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/tmp.tgz
3459 silly lockFile 68a7e973-48946-0-5480874567292631-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/tmp.tgz
3460 verbose tar pack [ '/home/ahmad/.npm/async/0.2.9/package.tgz',
3460 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package' ]
3461 verbose tarball /home/ahmad/.npm/async/0.2.9/package.tgz
3462 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3463 silly lockFile 1b62838d-48946-0-5480874567292631-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3464 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package /home/ahmad/.npm/1b62838d-48946-0-5480874567292631-package.lock
3465 silly lockFile 281bf0c4-hmad-npm-async-0-2-9-package-tgz tar:///home/ahmad/.npm/async/0.2.9/package.tgz
3466 verbose lock tar:///home/ahmad/.npm/async/0.2.9/package.tgz /home/ahmad/.npm/281bf0c4-hmad-npm-async-0-2-9-package-tgz.lock
3467 silly lockFile 1b62838d-48946-0-5480874567292631-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3468 silly lockFile 1b62838d-48946-0-5480874567292631-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724948946-0.5480874567292631/package
3469 silly lockFile 281bf0c4-hmad-npm-async-0-2-9-package-tgz tar:///home/ahmad/.npm/async/0.2.9/package.tgz
3470 silly lockFile 281bf0c4-hmad-npm-async-0-2-9-package-tgz tar:///home/ahmad/.npm/async/0.2.9/package.tgz
3471 silly lockFile d2acd693-me-ahmad-npm-async-0-2-9-package /home/ahmad/.npm/async/0.2.9/package
3472 verbose lock /home/ahmad/.npm/async/0.2.9/package /home/ahmad/.npm/d2acd693-me-ahmad-npm-async-0-2-9-package.lock
3473 silly lockFile d2acd693-me-ahmad-npm-async-0-2-9-package /home/ahmad/.npm/async/0.2.9/package
3474 silly lockFile d2acd693-me-ahmad-npm-async-0-2-9-package /home/ahmad/.npm/async/0.2.9/package
3475 verbose tar unpack /home/ahmad/.npm/async/0.2.9/package.tgz
3476 silly lockFile 48ed64d4-me-ahmad-npm-async-0-2-9-package tar:///home/ahmad/.npm/async/0.2.9/package
3477 verbose lock tar:///home/ahmad/.npm/async/0.2.9/package /home/ahmad/.npm/48ed64d4-me-ahmad-npm-async-0-2-9-package.lock
3478 silly lockFile 281bf0c4-hmad-npm-async-0-2-9-package-tgz tar:///home/ahmad/.npm/async/0.2.9/package.tgz
3479 verbose lock tar:///home/ahmad/.npm/async/0.2.9/package.tgz /home/ahmad/.npm/281bf0c4-hmad-npm-async-0-2-9-package-tgz.lock
3480 silly gunzTarPerm modes [ '755', '644' ]
3481 silly gunzTarPerm extractEntry package.json
3482 silly gunzTarPerm extractEntry README.md
3483 silly gunzTarPerm extractEntry LICENSE
3484 silly gunzTarPerm extractEntry component.json
3485 silly gunzTarPerm extractEntry lib/async.js
3486 silly lockFile 48ed64d4-me-ahmad-npm-async-0-2-9-package tar:///home/ahmad/.npm/async/0.2.9/package
3487 silly lockFile 48ed64d4-me-ahmad-npm-async-0-2-9-package tar:///home/ahmad/.npm/async/0.2.9/package
3488 silly lockFile 281bf0c4-hmad-npm-async-0-2-9-package-tgz tar:///home/ahmad/.npm/async/0.2.9/package.tgz
3489 silly lockFile 281bf0c4-hmad-npm-async-0-2-9-package-tgz tar:///home/ahmad/.npm/async/0.2.9/package.tgz
3490 verbose chmod /home/ahmad/.npm/async/0.2.9/package.tgz 644
3491 verbose chown /home/ahmad/.npm/async/0.2.9/package.tgz [ 1000, 1000 ]
3492 silly lockFile c060db57--npmjs-org-async-async-0-2-9-tgz https://registry.npmjs.org/async/-/async-0.2.9.tgz
3493 silly lockFile c060db57--npmjs-org-async-async-0-2-9-tgz https://registry.npmjs.org/async/-/async-0.2.9.tgz
3494 silly lockFile be62480b-async-0-2-9 async@0.2.9
3495 silly lockFile be62480b-async-0-2-9 async@0.2.9
3496 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
3497 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
3498 http 200 https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz
3499 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/tmp.tgz
3500 silly lockFile 26c65078-670-0-005025132559239864-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3501 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package /home/ahmad/.npm/26c65078-670-0-005025132559239864-package.lock
3502 silly lockFile 52e1ed52-670-0-005025132559239864-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/tmp.tgz
3503 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/tmp.tgz /home/ahmad/.npm/52e1ed52-670-0-005025132559239864-tmp-tgz.lock
3504 silly gunzTarPerm modes [ '755', '644' ]
3505 silly gunzTarPerm extractEntry package.json
3506 silly gunzTarPerm extractEntry .npmignore
3507 silly gunzTarPerm extractEntry index.js
3508 silly gunzTarPerm extractEntry zlib.js
3509 silly gunzTarPerm extractEntry readme.md
3510 silly gunzTarPerm extractEntry test/zlib.test.js
3511 silly lockFile 26c65078-670-0-005025132559239864-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3512 silly lockFile 26c65078-670-0-005025132559239864-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3513 silly lockFile 52e1ed52-670-0-005025132559239864-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/tmp.tgz
3514 silly lockFile 52e1ed52-670-0-005025132559239864-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/tmp.tgz
3515 verbose tar pack [ '/home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz',
3515 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package' ]
3516 verbose tarball /home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3517 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3518 silly lockFile 26c65078-670-0-005025132559239864-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3519 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package /home/ahmad/.npm/26c65078-670-0-005025132559239864-package.lock
3520 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3521 verbose lock tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz /home/ahmad/.npm/e99b891a-lib-browserify-0-0-1-package-tgz.lock
3522 silly lockFile 26c65078-670-0-005025132559239864-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3523 silly lockFile 26c65078-670-0-005025132559239864-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724951670-0.005025132559239864/package
3524 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3525 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3526 silly lockFile fbd07ce0-pm-zlib-browserify-0-0-1-package /home/ahmad/.npm/zlib-browserify/0.0.1/package
3527 verbose lock /home/ahmad/.npm/zlib-browserify/0.0.1/package /home/ahmad/.npm/fbd07ce0-pm-zlib-browserify-0-0-1-package.lock
3528 silly lockFile fbd07ce0-pm-zlib-browserify-0-0-1-package /home/ahmad/.npm/zlib-browserify/0.0.1/package
3529 silly lockFile fbd07ce0-pm-zlib-browserify-0-0-1-package /home/ahmad/.npm/zlib-browserify/0.0.1/package
3530 verbose tar unpack /home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3531 silly lockFile ffd0240a-pm-zlib-browserify-0-0-1-package tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package
3532 verbose lock tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package /home/ahmad/.npm/ffd0240a-pm-zlib-browserify-0-0-1-package.lock
3533 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3534 verbose lock tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz /home/ahmad/.npm/e99b891a-lib-browserify-0-0-1-package-tgz.lock
3535 silly gunzTarPerm modes [ '755', '644' ]
3536 silly gunzTarPerm extractEntry package.json
3537 silly gunzTarPerm extractEntry .npmignore
3538 silly gunzTarPerm extractEntry index.js
3539 silly gunzTarPerm extractEntry zlib.js
3540 silly gunzTarPerm extractEntry readme.md
3541 silly gunzTarPerm extractEntry test/zlib.test.js
3542 silly lockFile ffd0240a-pm-zlib-browserify-0-0-1-package tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package
3543 silly lockFile ffd0240a-pm-zlib-browserify-0-0-1-package tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package
3544 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3545 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3546 verbose chmod /home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz 644
3547 verbose chown /home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz [ 1000, 1000 ]
3548 silly lockFile cb2295c0-serify-zlib-browserify-0-0-1-tgz https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz
3549 silly lockFile cb2295c0-serify-zlib-browserify-0-0-1-tgz https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz
3550 silly lockFile 84e77944-zlib-browserify-0-0-1 zlib-browserify@0.0.1
3551 silly lockFile 84e77944-zlib-browserify-0-0-1 zlib-browserify@0.0.1
3552 silly resolved [ { name: 'zlib-browserify',
3552 silly resolved     version: '0.0.1',
3552 silly resolved     description: 'Wrapper for zlib.js to allow for browserifyication',
3552 silly resolved     main: 'index.js',
3552 silly resolved     directories: { test: 'test' },
3552 silly resolved     dependencies: {},
3552 silly resolved     devDependencies: { tap: '~0.3.3' },
3552 silly resolved     scripts: { test: './node_modules/tap test/*.test.js' },
3552 silly resolved     repository:
3552 silly resolved      { type: 'git',
3552 silly resolved        url: 'git://github.com/brianloveswords/zlib-browserify.git' },
3552 silly resolved     keywords: [ 'zlib', 'browserify' ],
3552 silly resolved     author: { name: 'Brian J. Brennan' },
3552 silly resolved     license: 'MIT',
3552 silly resolved     gitHead: '4be9419f0e8e9dec9629c8a538b33a4efd7df17b',
3552 silly resolved     readmeFilename: 'readme.md',
3552 silly resolved     readme: 'Zlib in yo\' browser.\n',
3552 silly resolved     bugs: { url: 'https://github.com/brianloveswords/zlib-browserify/issues' },
3552 silly resolved     homepage: 'https://github.com/brianloveswords/zlib-browserify',
3552 silly resolved     _id: 'zlib-browserify@0.0.1',
3552 silly resolved     dist: { shasum: '7dad2915b314e9b1ea14f5be8211213f0cc2cf86' },
3552 silly resolved     _from: 'zlib-browserify@0.0.1',
3552 silly resolved     _resolved: 'https://registry.npmjs.org/zlib-browserify/-/zlib-browserify-0.0.1.tgz' } ]
3553 info install zlib-browserify@0.0.1 into /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib
3554 info installOne zlib-browserify@0.0.1
3555 info /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify unbuild
3556 verbose tar unpack /home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3557 silly lockFile 1eb79b7f-rib-node-modules-zlib-browserify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify
3558 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify /home/ahmad/.npm/1eb79b7f-rib-node-modules-zlib-browserify.lock
3559 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3560 verbose lock tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz /home/ahmad/.npm/e99b891a-lib-browserify-0-0-1-package-tgz.lock
3561 silly gunzTarPerm modes [ '755', '644' ]
3562 silly gunzTarPerm extractEntry package.json
3563 silly gunzTarPerm extractEntry .npmignore
3564 silly gunzTarPerm extractEntry index.js
3565 silly gunzTarPerm extractEntry zlib.js
3566 silly gunzTarPerm extractEntry readme.md
3567 silly gunzTarPerm extractEntry test/zlib.test.js
3568 silly lockFile 1eb79b7f-rib-node-modules-zlib-browserify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify
3569 silly lockFile 1eb79b7f-rib-node-modules-zlib-browserify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify
3570 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3571 silly lockFile e99b891a-lib-browserify-0-0-1-package-tgz tar:///home/ahmad/.npm/zlib-browserify/0.0.1/package.tgz
3572 info preinstall zlib-browserify@0.0.1
3573 verbose readDependencies using package.json deps
3574 verbose readDependencies using package.json deps
3575 silly resolved []
3576 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify
3577 info build /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules/zlib-browserify
3578 verbose linkStuff [ false,
3578 verbose linkStuff   false,
3578 verbose linkStuff   false,
3578 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib/node_modules' ]
3579 info linkStuff zlib-browserify@0.0.1
3580 verbose linkBins zlib-browserify@0.0.1
3581 verbose linkMans zlib-browserify@0.0.1
3582 verbose rebuildBundles zlib-browserify@0.0.1
3583 info install zlib-browserify@0.0.1
3584 info postinstall zlib-browserify@0.0.1
3585 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib
3586 info build /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/grunt-lib-contrib
3587 verbose linkStuff [ false,
3587 verbose linkStuff   false,
3587 verbose linkStuff   false,
3587 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules' ]
3588 info linkStuff grunt-lib-contrib@0.6.1
3589 verbose linkBins grunt-lib-contrib@0.6.1
3590 verbose linkMans grunt-lib-contrib@0.6.1
3591 verbose rebuildBundles grunt-lib-contrib@0.6.1
3592 verbose rebuildBundles [ 'zlib-browserify' ]
3593 info install grunt-lib-contrib@0.6.1
3594 info postinstall grunt-lib-contrib@0.6.1
3595 http 200 https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz
3596 http 200 https://registry.npmjs.org/shelljs
3597 silly registry.get cb [ 200,
3597 silly registry.get   { vary: 'Accept',
3597 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
3597 silly registry.get     etag: '"8LM6K2VK8IQRPPB8EWJS2Q4X0"',
3597 silly registry.get     date: 'Sun, 17 Nov 2013 21:48:02 GMT',
3597 silly registry.get     'content-type': 'application/json',
3597 silly registry.get     'content-length': '250436' } ]
3598 silly addNameRange number 2 { name: 'shelljs', range: '>=0.1.0-0 <0.2.0-0', hasData: true }
3599 silly addNameRange versions [ 'shelljs',
3599 silly addNameRange   [ '0.0.1',
3599 silly addNameRange     '0.0.2',
3599 silly addNameRange     '0.0.3',
3599 silly addNameRange     '0.0.4',
3599 silly addNameRange     '0.0.5',
3599 silly addNameRange     '0.0.6',
3599 silly addNameRange     '0.0.7',
3599 silly addNameRange     '0.0.8',
3599 silly addNameRange     '0.0.9',
3599 silly addNameRange     '0.1.0',
3599 silly addNameRange     '0.1.1',
3599 silly addNameRange     '0.1.2',
3599 silly addNameRange     '0.1.3',
3599 silly addNameRange     '0.1.4',
3599 silly addNameRange     '0.2.0',
3599 silly addNameRange     '0.2.1',
3599 silly addNameRange     '0.2.2',
3599 silly addNameRange     '0.2.3',
3599 silly addNameRange     '0.2.4',
3599 silly addNameRange     '0.2.5',
3599 silly addNameRange     '0.2.6',
3599 silly addNameRange     '0.0.1-alpha1',
3599 silly addNameRange     '0.0.2-pre1',
3599 silly addNameRange     '0.0.4-pre1',
3599 silly addNameRange     '0.0.5-pre1',
3599 silly addNameRange     '0.0.5-pre2',
3599 silly addNameRange     '0.0.5-pre3',
3599 silly addNameRange     '0.0.5-pre4',
3599 silly addNameRange     '0.0.6-pre1',
3599 silly addNameRange     '0.0.6-pre2' ] ]
3600 verbose addNamed [ 'shelljs', '0.1.4' ]
3601 verbose addNamed [ '0.1.4', '0.1.4' ]
3602 silly lockFile 77595a32-shelljs-0-1-4 shelljs@0.1.4
3603 verbose lock shelljs@0.1.4 /home/ahmad/.npm/77595a32-shelljs-0-1-4.lock
3604 silly lockFile 018a1a85-js-org-shelljs-shelljs-0-1-4-tgz https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz
3605 verbose lock https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz /home/ahmad/.npm/018a1a85-js-org-shelljs-shelljs-0-1-4-tgz.lock
3606 verbose addRemoteTarball [ 'https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz',
3606 verbose addRemoteTarball   'dfbbe78d56c3c0168d2fb79e10ecd1dbcb07ec0e' ]
3607 info retry fetch attempt 1 at 23:49:34
3608 verbose fetch to= /home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/tmp.tgz
3609 http GET https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz
3610 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/tmp.tgz
3611 silly lockFile c01482ff-56688-0-8161849128082395-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3612 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package /home/ahmad/.npm/c01482ff-56688-0-8161849128082395-package.lock
3613 silly lockFile 91fc0aa2-56688-0-8161849128082395-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/tmp.tgz
3614 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/tmp.tgz /home/ahmad/.npm/91fc0aa2-56688-0-8161849128082395-tmp-tgz.lock
3615 silly gunzTarPerm modes [ '755', '644' ]
3616 silly gunzTarPerm extractEntry package.json
3617 silly gunzTarPerm extractEntry LICENSE
3618 silly gunzTarPerm extractEntry index.js
3619 silly gunzTarPerm extractEntry example/line_count_options.js
3620 silly gunzTarPerm extractEntry example/boolean_double.js
3621 silly gunzTarPerm extractEntry example/divide.js
3622 silly gunzTarPerm extractEntry example/nonopt.js
3623 silly gunzTarPerm extractEntry example/string.js
3624 silly gunzTarPerm extractEntry example/default_hash.js
3625 silly gunzTarPerm extractEntry example/reflect.js
3626 silly gunzTarPerm extractEntry example/default_singles.js
3627 silly gunzTarPerm extractEntry example/usage-options.js
3628 silly gunzTarPerm extractEntry example/bool.js
3629 silly gunzTarPerm extractEntry example/short.js
3630 silly gunzTarPerm extractEntry example/xup.js
3631 silly gunzTarPerm extractEntry example/boolean_single.js
3632 silly gunzTarPerm extractEntry example/line_count_wrap.js
3633 silly gunzTarPerm extractEntry example/line_count.js
3634 silly gunzTarPerm extractEntry readme.markdown
3635 silly gunzTarPerm extractEntry test/parse.js
3636 silly gunzTarPerm extractEntry test/_.js
3637 silly gunzTarPerm extractEntry test/usage.js
3638 silly gunzTarPerm extractEntry test/_/bin.js
3639 silly gunzTarPerm extractEntry test/_/argv.js
3640 silly gunzTarPerm extractEntry .travis.yml
3641 silly lockFile c01482ff-56688-0-8161849128082395-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3642 silly lockFile c01482ff-56688-0-8161849128082395-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3643 silly lockFile 91fc0aa2-56688-0-8161849128082395-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/tmp.tgz
3644 silly lockFile 91fc0aa2-56688-0-8161849128082395-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/tmp.tgz
3645 verbose tar pack [ '/home/ahmad/.npm/optimist/0.3.7/package.tgz',
3645 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package' ]
3646 verbose tarball /home/ahmad/.npm/optimist/0.3.7/package.tgz
3647 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3648 silly lockFile c01482ff-56688-0-8161849128082395-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3649 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package /home/ahmad/.npm/c01482ff-56688-0-8161849128082395-package.lock
3650 silly lockFile fee2d4ae-d-npm-optimist-0-3-7-package-tgz tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz
3651 verbose lock tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz /home/ahmad/.npm/fee2d4ae-d-npm-optimist-0-3-7-package-tgz.lock
3652 silly lockFile c01482ff-56688-0-8161849128082395-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3653 silly lockFile c01482ff-56688-0-8161849128082395-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724956688-0.8161849128082395/package
3654 silly lockFile fee2d4ae-d-npm-optimist-0-3-7-package-tgz tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz
3655 silly lockFile fee2d4ae-d-npm-optimist-0-3-7-package-tgz tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz
3656 silly lockFile 463586b0-ahmad-npm-optimist-0-3-7-package /home/ahmad/.npm/optimist/0.3.7/package
3657 verbose lock /home/ahmad/.npm/optimist/0.3.7/package /home/ahmad/.npm/463586b0-ahmad-npm-optimist-0-3-7-package.lock
3658 silly lockFile 463586b0-ahmad-npm-optimist-0-3-7-package /home/ahmad/.npm/optimist/0.3.7/package
3659 silly lockFile 463586b0-ahmad-npm-optimist-0-3-7-package /home/ahmad/.npm/optimist/0.3.7/package
3660 verbose tar unpack /home/ahmad/.npm/optimist/0.3.7/package.tgz
3661 silly lockFile 6c41c4a7-ahmad-npm-optimist-0-3-7-package tar:///home/ahmad/.npm/optimist/0.3.7/package
3662 verbose lock tar:///home/ahmad/.npm/optimist/0.3.7/package /home/ahmad/.npm/6c41c4a7-ahmad-npm-optimist-0-3-7-package.lock
3663 silly lockFile fee2d4ae-d-npm-optimist-0-3-7-package-tgz tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz
3664 verbose lock tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz /home/ahmad/.npm/fee2d4ae-d-npm-optimist-0-3-7-package-tgz.lock
3665 silly gunzTarPerm modes [ '755', '644' ]
3666 silly gunzTarPerm extractEntry package.json
3667 silly gunzTarPerm extractEntry LICENSE
3668 silly gunzTarPerm extractEntry index.js
3669 silly gunzTarPerm extractEntry .travis.yml
3670 silly gunzTarPerm extractEntry example/bool.js
3671 silly gunzTarPerm extractEntry example/default_singles.js
3672 silly gunzTarPerm extractEntry example/divide.js
3673 silly gunzTarPerm extractEntry example/line_count.js
3674 silly gunzTarPerm extractEntry example/default_hash.js
3675 silly gunzTarPerm extractEntry example/line_count_wrap.js
3676 silly gunzTarPerm extractEntry example/nonopt.js
3677 silly gunzTarPerm extractEntry example/reflect.js
3678 silly gunzTarPerm extractEntry example/short.js
3679 silly gunzTarPerm extractEntry example/string.js
3680 silly gunzTarPerm extractEntry example/boolean_single.js
3681 silly gunzTarPerm extractEntry example/usage-options.js
3682 silly gunzTarPerm extractEntry example/boolean_double.js
3683 silly gunzTarPerm extractEntry example/xup.js
3684 silly gunzTarPerm extractEntry example/line_count_options.js
3685 silly gunzTarPerm extractEntry readme.markdown
3686 silly gunzTarPerm extractEntry test/_.js
3687 silly gunzTarPerm extractEntry test/parse.js
3688 silly gunzTarPerm extractEntry test/usage.js
3689 silly gunzTarPerm extractEntry test/_/argv.js
3690 silly gunzTarPerm extractEntry test/_/bin.js
3691 silly lockFile 6c41c4a7-ahmad-npm-optimist-0-3-7-package tar:///home/ahmad/.npm/optimist/0.3.7/package
3692 silly lockFile 6c41c4a7-ahmad-npm-optimist-0-3-7-package tar:///home/ahmad/.npm/optimist/0.3.7/package
3693 silly lockFile fee2d4ae-d-npm-optimist-0-3-7-package-tgz tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz
3694 silly lockFile fee2d4ae-d-npm-optimist-0-3-7-package-tgz tar:///home/ahmad/.npm/optimist/0.3.7/package.tgz
3695 verbose chmod /home/ahmad/.npm/optimist/0.3.7/package.tgz 644
3696 verbose chown /home/ahmad/.npm/optimist/0.3.7/package.tgz [ 1000, 1000 ]
3697 silly lockFile 03b2dd13--org-optimist-optimist-0-3-7-tgz https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz
3698 silly lockFile 03b2dd13--org-optimist-optimist-0-3-7-tgz https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz
3699 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
3700 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
3701 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
3702 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
3703 http 200 https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz
3704 verbose tar unpack /home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/tmp.tgz
3705 silly lockFile 9e2bb88f-74697-0-6480828423518687-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3706 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package /home/ahmad/.npm/9e2bb88f-74697-0-6480828423518687-package.lock
3707 silly lockFile 8d9b1f98-74697-0-6480828423518687-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/tmp.tgz
3708 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/tmp.tgz /home/ahmad/.npm/8d9b1f98-74697-0-6480828423518687-tmp-tgz.lock
3709 silly gunzTarPerm modes [ '755', '644' ]
3710 silly gunzTarPerm extractEntry package.json
3711 silly gunzTarPerm extractEntry .npmignore
3712 silly gunzTarPerm extractEntry README.md
3713 silly gunzTarPerm extractEntry LICENSE
3714 silly gunzTarPerm extractEntry global.js
3715 silly gunzTarPerm extractEntry make.js
3716 silly gunzTarPerm extractEntry shell.js
3717 silly gunzTarPerm extractEntry bin/shjs
3718 silly gunzTarPerm extractEntry .documentup.json
3719 silly gunzTarPerm extractEntry jshint.json
3720 silly gunzTarPerm extractEntry scripts/docs.js
3721 silly gunzTarPerm extractEntry scripts/run-tests.js
3722 silly gunzTarPerm extractEntry .travis.yml
3723 silly gunzTarPerm extractEntry test/.npmignore
3724 silly gunzTarPerm extractEntry test/exec.js
3725 silly gunzTarPerm extractEntry test/find.js
3726 silly gunzTarPerm extractEntry test/grep.js
3727 silly gunzTarPerm extractEntry test/env.js
3728 silly gunzTarPerm extractEntry test/cat.js
3729 silly gunzTarPerm extractEntry test/mkdir.js
3730 silly gunzTarPerm extractEntry test/mv.js
3731 silly gunzTarPerm extractEntry test/popd.js
3732 silly gunzTarPerm extractEntry test/pushd.js
3733 silly gunzTarPerm extractEntry test/echo.js
3734 silly gunzTarPerm extractEntry test/pwd.js
3735 silly gunzTarPerm extractEntry test/dirs.js
3736 silly gunzTarPerm extractEntry test/to.js
3737 silly gunzTarPerm extractEntry test/cp.js
3738 silly gunzTarPerm extractEntry test/rm.js
3739 silly gunzTarPerm extractEntry test/config.js
3740 silly gunzTarPerm extractEntry test/sed.js
3741 silly gunzTarPerm extractEntry test/chmod.js
3742 silly gunzTarPerm extractEntry test/tempdir.js
3743 silly gunzTarPerm extractEntry test/cd.js
3744 silly gunzTarPerm extractEntry test/test.js
3745 silly gunzTarPerm extractEntry test/ls.js
3746 silly gunzTarPerm extractEntry test/which.js
3747 silly gunzTarPerm extractEntry test/make.js
3748 silly gunzTarPerm extractEntry test/resources/file1.js
3749 silly gunzTarPerm extractEntry test/resources/file2.js
3750 silly gunzTarPerm extractEntry test/resources/file2
3751 silly gunzTarPerm extractEntry test/resources/external/node_script.js
3752 silly gunzTarPerm extractEntry test/resources/file1
3753 silly gunzTarPerm extractEntry test/resources/a.txt
3754 silly gunzTarPerm extractEntry test/resources/file1.txt
3755 silly gunzTarPerm extractEntry test/resources/chmod/a/b/c/.npmignore
3756 silly gunzTarPerm extractEntry test/resources/chmod/b/a/b/.npmignore
3757 silly gunzTarPerm extractEntry test/resources/chmod/c/a/b/.npmignore
3758 silly gunzTarPerm extractEntry test/resources/chmod/file1
3759 silly gunzTarPerm extractEntry test/resources/cp/a
3760 silly gunzTarPerm extractEntry test/resources/cp/b
3761 silly gunzTarPerm extractEntry test/resources/cp/dir_a/z
3762 silly gunzTarPerm extractEntry test/resources/cp/dir_b/dir_b_a/dir_b_a_a/z
3763 silly gunzTarPerm extractEntry test/resources/file2.txt
3764 silly gunzTarPerm extractEntry test/resources/find/.hidden
3765 silly gunzTarPerm extractEntry test/resources/find/a
3766 silly gunzTarPerm extractEntry test/resources/find/b
3767 silly gunzTarPerm extractEntry test/resources/find/dir1/a_dir1
3768 silly gunzTarPerm extractEntry test/resources/find/dir1/dir11/a_dir11
3769 silly gunzTarPerm extractEntry test/resources/find/dir2/a_dir1
3770 silly gunzTarPerm extractEntry test/resources/issue44/main.js
3771 silly gunzTarPerm extractEntry test/resources/ls/file1.js
3772 silly gunzTarPerm extractEntry test/resources/ls/file2.js
3773 silly gunzTarPerm extractEntry test/resources/ls/.hidden_dir/nada
3774 silly gunzTarPerm extractEntry test/resources/ls/.hidden_file
3775 silly gunzTarPerm extractEntry test/resources/ls/a_dir/.hidden_dir/nada
3776 silly gunzTarPerm extractEntry test/resources/ls/a_dir/b_dir/z
3777 silly gunzTarPerm extractEntry test/resources/ls/a_dir/nada
3778 silly gunzTarPerm extractEntry test/resources/ls/file1
3779 silly gunzTarPerm extractEntry test/resources/ls/file2
3780 silly gunzTarPerm extractEntry test/resources/ls/filename(with)[chars$]^that.must+be-escaped
3781 silly gunzTarPerm extractEntry test/resources/pushd/a/dummy
3782 silly gunzTarPerm extractEntry test/resources/pushd/b/c/dummy
3783 silly lockFile 9e2bb88f-74697-0-6480828423518687-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3784 silly lockFile 9e2bb88f-74697-0-6480828423518687-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3785 silly lockFile 8d9b1f98-74697-0-6480828423518687-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/tmp.tgz
3786 silly lockFile 8d9b1f98-74697-0-6480828423518687-tmp-tgz tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/tmp.tgz
3787 verbose tar pack [ '/home/ahmad/.npm/shelljs/0.1.4/package.tgz',
3787 verbose tar pack   '/home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package' ]
3788 verbose tarball /home/ahmad/.npm/shelljs/0.1.4/package.tgz
3789 verbose folder /home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3790 silly lockFile 9e2bb88f-74697-0-6480828423518687-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3791 verbose lock tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package /home/ahmad/.npm/9e2bb88f-74697-0-6480828423518687-package.lock
3792 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3793 verbose lock tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz /home/ahmad/.npm/20ce3685-ad-npm-shelljs-0-1-4-package-tgz.lock
3794 silly lockFile 9e2bb88f-74697-0-6480828423518687-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3795 silly lockFile 9e2bb88f-74697-0-6480828423518687-package tar:///home/ahmad/tmp/npm-6318-TPEYLStU/1384724974697-0.6480828423518687/package
3796 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3797 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3798 silly lockFile d7c770d1--ahmad-npm-shelljs-0-1-4-package /home/ahmad/.npm/shelljs/0.1.4/package
3799 verbose lock /home/ahmad/.npm/shelljs/0.1.4/package /home/ahmad/.npm/d7c770d1--ahmad-npm-shelljs-0-1-4-package.lock
3800 silly lockFile d7c770d1--ahmad-npm-shelljs-0-1-4-package /home/ahmad/.npm/shelljs/0.1.4/package
3801 silly lockFile d7c770d1--ahmad-npm-shelljs-0-1-4-package /home/ahmad/.npm/shelljs/0.1.4/package
3802 verbose tar unpack /home/ahmad/.npm/shelljs/0.1.4/package.tgz
3803 silly lockFile b30130b0--ahmad-npm-shelljs-0-1-4-package tar:///home/ahmad/.npm/shelljs/0.1.4/package
3804 verbose lock tar:///home/ahmad/.npm/shelljs/0.1.4/package /home/ahmad/.npm/b30130b0--ahmad-npm-shelljs-0-1-4-package.lock
3805 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3806 verbose lock tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz /home/ahmad/.npm/20ce3685-ad-npm-shelljs-0-1-4-package-tgz.lock
3807 silly gunzTarPerm modes [ '755', '644' ]
3808 silly gunzTarPerm extractEntry package.json
3809 silly gunzTarPerm extractEntry .npmignore
3810 silly gunzTarPerm extractEntry README.md
3811 silly gunzTarPerm extractEntry LICENSE
3812 silly gunzTarPerm extractEntry global.js
3813 silly gunzTarPerm extractEntry make.js
3814 silly gunzTarPerm extractEntry shell.js
3815 silly gunzTarPerm extractEntry jshint.json
3816 silly gunzTarPerm extractEntry .travis.yml
3817 silly gunzTarPerm extractEntry bin/shjs
3818 silly gunzTarPerm extractEntry scripts/docs.js
3819 silly gunzTarPerm extractEntry scripts/run-tests.js
3820 silly gunzTarPerm extractEntry .documentup.json
3821 silly gunzTarPerm extractEntry test/.npmignore
3822 silly gunzTarPerm extractEntry test/exec.js
3823 silly gunzTarPerm extractEntry test/find.js
3824 silly gunzTarPerm extractEntry test/grep.js
3825 silly gunzTarPerm extractEntry test/env.js
3826 silly gunzTarPerm extractEntry test/cat.js
3827 silly gunzTarPerm extractEntry test/mkdir.js
3828 silly gunzTarPerm extractEntry test/mv.js
3829 silly gunzTarPerm extractEntry test/popd.js
3830 silly gunzTarPerm extractEntry test/pushd.js
3831 silly gunzTarPerm extractEntry test/echo.js
3832 silly gunzTarPerm extractEntry test/pwd.js
3833 silly gunzTarPerm extractEntry test/dirs.js
3834 silly gunzTarPerm extractEntry test/to.js
3835 silly gunzTarPerm extractEntry test/cp.js
3836 silly gunzTarPerm extractEntry test/rm.js
3837 silly gunzTarPerm extractEntry test/config.js
3838 silly gunzTarPerm extractEntry test/sed.js
3839 silly gunzTarPerm extractEntry test/chmod.js
3840 silly gunzTarPerm extractEntry test/tempdir.js
3841 silly gunzTarPerm extractEntry test/cd.js
3842 silly gunzTarPerm extractEntry test/test.js
3843 silly gunzTarPerm extractEntry test/ls.js
3844 silly gunzTarPerm extractEntry test/which.js
3845 silly gunzTarPerm extractEntry test/make.js
3846 silly gunzTarPerm extractEntry test/resources/file1.js
3847 silly gunzTarPerm extractEntry test/resources/file2.js
3848 silly gunzTarPerm extractEntry test/resources/file2
3849 silly gunzTarPerm extractEntry test/resources/external/node_script.js
3850 silly gunzTarPerm extractEntry test/resources/file1
3851 silly gunzTarPerm extractEntry test/resources/a.txt
3852 silly gunzTarPerm extractEntry test/resources/file1.txt
3853 silly gunzTarPerm extractEntry test/resources/chmod/a/b/c/.npmignore
3854 silly gunzTarPerm extractEntry test/resources/chmod/b/a/b/.npmignore
3855 silly gunzTarPerm extractEntry test/resources/chmod/c/a/b/.npmignore
3856 silly gunzTarPerm extractEntry test/resources/chmod/file1
3857 silly gunzTarPerm extractEntry test/resources/cp/a
3858 silly gunzTarPerm extractEntry test/resources/cp/b
3859 silly gunzTarPerm extractEntry test/resources/cp/dir_a/z
3860 silly gunzTarPerm extractEntry test/resources/cp/dir_b/dir_b_a/dir_b_a_a/z
3861 silly gunzTarPerm extractEntry test/resources/file2.txt
3862 silly gunzTarPerm extractEntry test/resources/find/.hidden
3863 silly gunzTarPerm extractEntry test/resources/find/a
3864 silly gunzTarPerm extractEntry test/resources/find/b
3865 silly gunzTarPerm extractEntry test/resources/find/dir1/a_dir1
3866 silly gunzTarPerm extractEntry test/resources/find/dir1/dir11/a_dir11
3867 silly gunzTarPerm extractEntry test/resources/find/dir2/a_dir1
3868 silly gunzTarPerm extractEntry test/resources/issue44/main.js
3869 silly gunzTarPerm extractEntry test/resources/ls/file1.js
3870 silly gunzTarPerm extractEntry test/resources/ls/file2.js
3871 silly gunzTarPerm extractEntry test/resources/ls/.hidden_dir/nada
3872 silly gunzTarPerm extractEntry test/resources/ls/.hidden_file
3873 silly gunzTarPerm extractEntry test/resources/ls/a_dir/.hidden_dir/nada
3874 silly gunzTarPerm extractEntry test/resources/ls/a_dir/b_dir/z
3875 silly gunzTarPerm extractEntry test/resources/ls/a_dir/nada
3876 silly gunzTarPerm extractEntry test/resources/ls/file1
3877 silly gunzTarPerm extractEntry test/resources/ls/file2
3878 silly gunzTarPerm extractEntry test/resources/ls/filename(with)[chars$]^that.must+be-escaped
3879 silly gunzTarPerm extractEntry test/resources/pushd/a/dummy
3880 silly gunzTarPerm extractEntry test/resources/pushd/b/c/dummy
3881 silly lockFile b30130b0--ahmad-npm-shelljs-0-1-4-package tar:///home/ahmad/.npm/shelljs/0.1.4/package
3882 silly lockFile b30130b0--ahmad-npm-shelljs-0-1-4-package tar:///home/ahmad/.npm/shelljs/0.1.4/package
3883 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3884 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3885 verbose chmod /home/ahmad/.npm/shelljs/0.1.4/package.tgz 644
3886 verbose chown /home/ahmad/.npm/shelljs/0.1.4/package.tgz [ 1000, 1000 ]
3887 silly lockFile 018a1a85-js-org-shelljs-shelljs-0-1-4-tgz https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz
3888 silly lockFile 018a1a85-js-org-shelljs-shelljs-0-1-4-tgz https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz
3889 silly lockFile 77595a32-shelljs-0-1-4 shelljs@0.1.4
3890 silly lockFile 77595a32-shelljs-0-1-4 shelljs@0.1.4
3891 silly lockFile cc65d7ed-shelljs-0-1-x shelljs@0.1.x
3892 silly lockFile cc65d7ed-shelljs-0-1-x shelljs@0.1.x
3893 silly resolved [ { name: 'underscore',
3893 silly resolved     description: 'JavaScript\'s functional programming helper library.',
3893 silly resolved     homepage: 'http://underscorejs.org',
3893 silly resolved     keywords: [ 'util', 'functional', 'server', 'client', 'browser' ],
3893 silly resolved     author: { name: 'Jeremy Ashkenas', email: 'jeremy@documentcloud.org' },
3893 silly resolved     repository:
3893 silly resolved      { type: 'git',
3893 silly resolved        url: 'git://github.com/documentcloud/underscore.git' },
3893 silly resolved     main: 'underscore.js',
3893 silly resolved     version: '1.4.4',
3893 silly resolved     devDependencies: { phantomjs: '0.2.2' },
3893 silly resolved     scripts: { test: 'phantomjs test/vendor/runner.js test/index.html?noglobals=true' },
3893 silly resolved     readme: '                       __\n                      /\\ \\                                                         __\n     __  __    ___    \\_\\ \\     __   _ __   ____    ___    ___   _ __    __       /\\_\\    ____\n    /\\ \\/\\ \\ /\' _ `\\  /\'_  \\  /\'__`\\/\\  __\\/ ,__\\  / ___\\ / __`\\/\\  __\\/\'__`\\     \\/\\ \\  /\',__\\\n    \\ \\ \\_\\ \\/\\ \\/\\ \\/\\ \\ \\ \\/\\  __/\\ \\ \\//\\__, `\\/\\ \\__//\\ \\ \\ \\ \\ \\//\\  __/  __  \\ \\ \\/\\__, `\\\n     \\ \\____/\\ \\_\\ \\_\\ \\___,_\\ \\____\\\\ \\_\\\\/\\____/\\ \\____\\ \\____/\\ \\_\\\\ \\____\\/\\_\\ _\\ \\ \\/\\____/\n      \\/___/  \\/_/\\/_/\\/__,_ /\\/____/ \\/_/ \\/___/  \\/____/\\/___/  \\/_/ \\/____/\\/_//\\ \\_\\ \\/___/\n                                                                                  \\ \\____/\n                                                                                   \\/___/\n\nUnderscore.js is a utility-belt library for JavaScript that provides\nsupport for the usual functional suspects (each, map, reduce, filter...)\nwithout extending any core JavaScript objects.\n\nFor Docs, License, Tests, and pre-packed downloads, see:\nhttp://underscorejs.org\n\nMany thanks to our contributors:\nhttps://github.com/documentcloud/underscore/contributors\n',
3893 silly resolved     readmeFilename: 'README.md',
3893 silly resolved     bugs: { url: 'https://github.com/documentcloud/underscore/issues' },
3893 silly resolved     _id: 'underscore@1.4.4',
3893 silly resolved     _from: 'underscore@1.4.x' },
3893 silly resolved   { author:
3893 silly resolved      { name: 'Isaac Z. Schlueter',
3893 silly resolved        email: 'i@izs.me',
3893 silly resolved        url: 'http://blog.izs.me' },
3893 silly resolved     name: 'minimatch',
3893 silly resolved     description: 'a glob matcher in javascript',
3893 silly resolved     version: '0.2.12',
3893 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/minimatch.git' },
3893 silly resolved     main: 'minimatch.js',
3893 silly resolved     scripts: { test: 'tap test' },
3893 silly resolved     engines: { node: '*' },
3893 silly resolved     dependencies: { 'lru-cache': '2', sigmund: '~1.0.0' },
3893 silly resolved     devDependencies: { tap: '' },
3893 silly resolved     license:
3893 silly resolved      { type: 'MIT',
3893 silly resolved        url: 'http://github.com/isaacs/minimatch/raw/master/LICENSE' },
3893 silly resolved     readme: '# minimatch\n\nA minimal matching utility.\n\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\n\n\nThis is the matching library used internally by npm.\n\nEventually, it will replace the C binding in node-glob.\n\nIt works by converting glob expressions into JavaScript `RegExp`\nobjects.\n\n## Usage\n\n```javascript\nvar minimatch = require("minimatch")\n\nminimatch("bar.foo", "*.foo") // true!\nminimatch("bar.foo", "*.bar") // false!\n```\n\n## Features\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* "Globstar" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n\n### Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between minimatch and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.  **Note that this is different from the way that `**` is\nhandled by ruby\'s `Dir` class.**\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen minimatch.match returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`minimatch.match([], "\\\\*a\\\\?")` will return `"\\\\*a\\\\?"` rather than\n`"*a?"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n\n## Minimatch Class\n\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\n\n```javascript\nvar Minimatch = require("minimatch").Minimatch\nvar mm = new Minimatch(pattern, options)\n```\n\n### Properties\n\n* `pattern` The original pattern the minimatch object represents.\n* `options` The options supplied to the constructor.\n* `set` A 2-dimensional array of regexp or string expressions.\n  Each row in the\n  array corresponds to a brace-expanded pattern.  Each item in the row\n  corresponds to a single path-part.  For example, the pattern\n  `{a,b/c}/d` would expand to a set of patterns like:\n\n        [ [ a, d ]\n        , [ b, c, d ] ]\n\n    If a portion of the pattern doesn\'t have any "magic" in it\n    (that is, it\'s something like `"foo"` rather than `fo*o?`), then it\n    will be left as a string rather than converted to a regular\n    expression.\n\n* `regexp` Created by the `makeRe` method.  A single regular expression\n  expressing the entire pattern.  This is useful in cases where you wish\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\n* `negate` True if the pattern is negated.\n* `comment` True if the pattern is a comment.\n* `empty` True if the pattern is `""`.\n\n### Methods\n\n* `makeRe` Generate the `regexp` member if necessary, and return it.\n  Will return `false` if the pattern is invalid.\n* `match(fname)` Return true if the filename matches the pattern, or\n  false otherwise.\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n  filename, and match it against a single row in the `regExpSet`.  This\n  method is mainly for internal use, but is exposed so that it can be\n  used by a glob-walker that needs to avoid excessive filesystem calls.\n\nAll other methods are internal, and will be called as necessary.\n\n## Functions\n\nThe top-level exported function has a `cache` property, which is an LRU\ncache set to store 100 items.  So, calling these methods repeatedly\nwith the same pattern and options will use the same Minimatch object,\nsaving the cost of parsing it multiple times.\n\n### minimatch(path, pattern, options)\n\nMain export.  Tests a path against the pattern using the options.\n\n```javascript\nvar isJS = minimatch(file, "*.js", { matchBase: true })\n```\n\n### minimatch.filter(pattern, options)\n\nReturns a function that tests its\nsupplied argument, suitable for use with `Array.filter`.  Example:\n\n```javascript\nvar javascripts = fileList.filter(minimatch.filter("*.js", {matchBase: true}))\n```\n\n### minimatch.match(list, pattern, options)\n\nMatch against the list of\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.\n\n```javascript\nvar javascripts = minimatch.match(fileList, "*.js", {matchBase: true}))\n```\n\n### minimatch.makeRe(pattern, options)\n\nMake a regular expression object from the pattern.\n\n## Options\n\nAll options are `false` by default.\n\n### debug\n\nDump a ton of stuff to stderr.\n\n### nobrace\n\nDo not expand `{a,b}` and `{1..3}` brace sets.\n\n### noglobstar\n\nDisable `**` matching against multiple folder names.\n\n### dot\n\nAllow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.\n\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\nis set.\n\n### noext\n\nDisable "extglob" style patterns like `+(a|b)`.\n\n### nocase\n\nPerform a case-insensitive match.\n\n### nonull\n\nWhen a match is not found by `minimatch.match`, return a list containing\nthe pattern itself.  When set, an empty list is returned if there are\nno matches.\n\n### matchBase\n\nIf set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes.  For example,\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n### nocomment\n\nSuppress the behavior of treating `#` at the start of a pattern as a\ncomment.\n\n### nonegate\n\nSuppress the behavior of treating a leading `!` character as negation.\n\n### flipNegate\n\nReturns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)\n',
3893 silly resolved     readmeFilename: 'README.md',
3893 silly resolved     bugs: { url: 'https://github.com/isaacs/minimatch/issues' },
3893 silly resolved     homepage: 'https://github.com/isaacs/minimatch',
3893 silly resolved     _id: 'minimatch@0.2.12',
3893 silly resolved     _from: 'minimatch@0.x.x' },
3893 silly resolved   { name: 'console-browserify',
3893 silly resolved     version: '0.1.6',
3893 silly resolved     description: 'Emulate console for all the browsers',
3893 silly resolved     keywords: [],
3893 silly resolved     author: { name: 'Raynos', email: 'raynos2@gmail.com' },
3893 silly resolved     repository:
3893 silly resolved      { type: 'git',
3893 silly resolved        url: 'git://github.com/Raynos/console-browserify.git' },
3893 silly resolved     main: 'index',
3893 silly resolved     homepage: 'https://github.com/Raynos/console-browserify',
3893 silly resolved     contributors: [ [Object] ],
3893 silly resolved     bugs:
3893 silly resolved      { url: 'https://github.com/Raynos/console-browserify/issues',
3893 silly resolved        email: 'raynos2@gmail.com' },
3893 silly resolved     dependencies: {},
3893 silly resolved     devDependencies:
3893 silly resolved      { tape: '~0.2.2',
3893 silly resolved        browserify: 'https://github.com/raynos/node-browserify/tarball/master',
3893 silly resolved        testem: '~0.2.55',
3893 silly resolved        jsonify: '0.0.0' },
3893 silly resolved     licenses: [ [Object] ],
3893 silly resolved     scripts:
3893 silly resolved      { test: 'node ./test',
3893 silly resolved        build: 'browserify test/index.js -o test/static/bundle.js',
3893 silly resolved        testem: 'testem' },
3893 silly resolved     testling: { files: 'test/index.js', browsers: [Object] },
3893 silly resolved     readme: '# console-browserify\n\n[![build status][1]][2]\n\n[![browser support][3]][4]\n\nEmulate console for all the browsers\n\n## Example\n\n```js\nvar console = require("console-browserify")\n\nconsole.log("hello world!")\n```\n\n## Installation\n\n`npm install console-browserify`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n\n\n  [1]: https://secure.travis-ci.org/Raynos/console-browserify.png\n  [2]: http://travis-ci.org/Raynos/console-browserify\n  [3]: http://ci.testling.com/Raynos/console-browserify.png\n  [4]: http://ci.testling.com/Raynos/console-browserify\n',
3893 silly resolved     readmeFilename: 'README.md',
3893 silly resolved     _id: 'console-browserify@0.1.6',
3893 silly resolved     dist: { shasum: 'f2acce09dd2f45b27534a4bdcebe95abe1aa410f' },
3893 silly resolved     _from: 'console-browserify@0.1.x',
3893 silly resolved     _resolved: 'https://registry.npmjs.org/console-browserify/-/console-browserify-0.1.6.tgz' },
3893 silly resolved   { name: 'cli',
3893 silly resolved     description: 'A tool for rapidly building command line apps',
3893 silly resolved     version: '0.4.5',
3893 silly resolved     homepage: 'http://github.com/chriso/cli',
3893 silly resolved     keywords:
3893 silly resolved      [ 'cli',
3893 silly resolved        'command line',
3893 silly resolved        'opts',
3893 silly resolved        'parseopt',
3893 silly resolved        'opt',
3893 silly resolved        'args',
3893 silly resolved        'console',
3893 silly resolved        'argsparse',
3893 silly resolved        'optparse',
3893 silly resolved        'daemon',
3893 silly resolved        'autocomplete',
3893 silly resolved        'command',
3893 silly resolved        'autocompletion' ],
3893 silly resolved     author: { name: 'Chris O\'Hara', email: 'cohara87@gmail.com' },
3893 silly resolved     main: 'cli.js',
3893 silly resolved     bugs: { url: 'http://github.com/chriso/cli/issues' },
3893 silly resolved     repository: { type: 'git', url: 'http://github.com/chriso/cli.git' },
3893 silly resolved     dependencies: { glob: '>= 3.1.4' },
3893 silly resolved     contributors: [ [Object] ],
3893 silly resolved     engines: { node: '>=0.2.5' },
3893 silly resolved     licenses: [ [Object] ],
3893 silly resolved     readme: '**cli is a toolkit for rapidly building command line apps - it includes:**\n\n- Full featured opts/args parser\n- Plugin support for adding common options and switches\n- Helper methods for working with input/output and spawning child processes\n- Output colored/styled messages, [progress bars](https://github.com/chriso/cli/blob/master/examples/progress.js) or [spinners](https://github.com/chriso/cli/blob/master/examples/spinner.js)\n- Command [auto-completion](https://github.com/chriso/cli/blob/master/examples/command.js) and [glob support](https://github.com/chriso/cli/blob/master/examples/glob.js)\n\nInstall using `npm install cli` or just bundle [cli.js](https://github.com/chriso/cli/raw/master/cli-min.js) with your app.\n\n## Example apps\n\n### sort.js\n\n```javascript\n#!/usr/bin/env node\nrequire(\'cli\').withStdinLines(function(lines, newline) {\n    this.output(lines.sort().join(newline));\n});\n```\n\nTry it out\n\n```bash\n$ ./sort.js < input.txt\n```\n\nLet\'s add support for an `-n` switch to use a numeric sort, and a `-r` switch to reverse output - only 5 extra lines of code (!)\n\n```javascript\nvar cli = require(\'cli\'), options = cli.parse();\n\ncli.withStdinLines(function(lines, newline) {\n    lines.sort(!options.n ? null : function(a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.r) lines.reverse();\n    this.output(lines.join(newline));\n});\n```\n\n### static.js\n\nLet\'s create a static file server with daemon support to see the opts parser + plugins in use - note: this requires `npm install creationix daemon`\n\n```javascript\nvar cli = require(\'cli\').enable(\'daemon\', \'status\'); //Enable 2 plugins\n\ncli.parse({\n    log:   [\'l\', \'Enable logging\'],\n    port:  [\'p\', \'Listen on this port\', \'number\', 8080],\n    serve: [false, \'Serve static files from PATH\', \'path\', \'./public\']\n});\n\ncli.main(function(args, options) {\n    var server, middleware = [];\n\n    if (options.log) {\n        this.debug(\'Enabling logging\');\n        middleware.push(require(\'creationix/log\')());\n    }\n\n    this.debug(\'Serving files from \' + options.serve);\n    middleware.push(require(\'creationix/static\')(\'/\', options.serve, \'index.html\'));\n\n    server = this.createServer(middleware).listen(options.port);\n\n    this.ok(\'Listening on port \' + options.port);\n});\n```\n\nTo output usage information\n\n```bash\n$ ./static.js --help\n```\n\nTo create a daemon that serves files from */tmp*, run\n\n```bash\n$ ./static.js -ld --serve=/tmp\n```\n\nFor more examples, see [./examples](https://github.com/chriso/cli/tree/master/examples)\n\n## Helper methods\n\ncli has methods that collect stdin (newline is autodetected as \\n or \\r\\n)\n\n```javascript\ncli.withStdin(callback);        //callback receives stdin as a string\ncli.withStdinLines(callback);   //callback receives stdin split into an array of lines (lines, newline)\n```\n\ncli also has a lower level method for working with input line by line (see [./examples/cat.js](https://github.com/chriso/cli/blob/master/examples/cat.js) for an example). \n\n```javascript\ncli.withInput(file, function (line, newline, eof) {\n    if (!eof) {\n        this.output(line + newline);\n    }\n});\n```\n\n*Note: `file` can be omitted if you want to work with stdin*\n\nTo output a progress bar, call\n\n```javascript\ncli.progress(progress); //Where 0 <= progress <= 1\n```\n\nTo spawn a child process, use\n\n```javascript\ncli.exec(cmd, callback); //callback receives the output of the process (split into lines)\n```\n\ncli also comes bundled with kof\'s [node-natives](https://github.com/kof/node-natives) (access with cli.native) and creationix\' [stack](https://github.com/creationix/stack) (access with cli.createServer)\n\n## Plugins\n\nPlugins are a way of adding common opts and can be enabled using \n\n```javascript\ncli.enable(plugin1, [plugin2, ...]);  //To disable, use the equivalent disable() method\n```\n\n**help** - *enabled by default*\n\nAdds `-h,--help` to output auto-generated usage information\n\n**version**\n\nAdds `-v,--version` to output version information for the app. cli will attempt to locate and parse a nearby *package.json*\n\nTo set your own app name and version, use `cli.setApp(app_name, version)`\n\n**status**\n\nAdds options to show/hide the stylized status messages that are output to the console when using one of these methods\n\n```javascript\ncli.debug(msg);  //Only shown when using --debug\ncli.error(msg);\ncli.fatal(msg);  //Exits the process after outputting msg\ncli.info(msg);\ncli.ok(msg);\n```\n\n`-k,--no-color` will omit ANSI color escapes from the output\n\n**glob**  - *requires* `npm install glob`\n\nEnables glob matching of arguments\n\n**daemon**  - *requires* `npm install daemon`\n\nAdds `-d,--daemon ARG` for daemonizing the process and controlling the resulting daemon\n\n`ARG` can be either start (default), stop, restart, pid (outputs the daemon\'s pid if it\'s running), or log (output the daemon\'s stdout+stderr)\n\n**timeout**\n\nAdds `-t,--timeout N` to exit the process after N seconds with an error\n\n**catchall**\n\nAdds `-c,--catch` to catch and output uncaughtExceptions and resume execution\n\n*Note: Plugins are automatically disabled if an option or switch of the same name is already defined*\n\n## LICENSE\n\n(MIT license)\n\nCopyright (c) 2010 Chris O\'Hara <cohara87@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n"Software"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
3893 silly resolved     readmeFilename: 'README.md',
3893 silly resolved     _id: 'cli@0.4.5',
3893 silly resolved     dist: { shasum: '1ad158ded90877747143d68508149ce7b427a192' },
3893 silly resolved     _from: 'cli@0.4.x',
3893 silly resolved     _resolved: 'https://registry.npmjs.org/cli/-/cli-0.4.5.tgz' },
3893 silly resolved   { name: 'shelljs',
3893 silly resolved     version: '0.1.4',
3893 silly resolved     author: { name: 'Artur Adib', email: 'aadib@mozilla.com' },
3893 silly resolved     description: 'Portable Unix shell commands for Node.js',
3893 silly resolved     keywords: [ 'unix', 'shell', 'makefile', 'make', 'jake', 'synchronous' ],
3893 silly resolved     repository: { type: 'git', url: 'git://github.com/arturadib/shelljs.git' },
3893 silly resolved     homepage: 'http://github.com/arturadib/shelljs',
3893 silly resolved     main: './shell.js',
3893 silly resolved     scripts: { test: 'node scripts/run-tests' },
3893 silly resolved     bin: { shjs: './bin/shjs' },
3893 silly resolved     dependencies: {},
3893 silly resolved     devDependencies: { jshint: '~1.1.0' },
3893 silly resolved     optionalDependencies: {},
3893 silly resolved     engines: { node: '*' },
3893 silly resolved     readme: '# ShellJS - Unix shell commands for Node.js [![Build Status](https://secure.travis-ci.org/arturadib/shelljs.png)](http://travis-ci.org/arturadib/shelljs)\n\nShellJS is a portable **(Windows/Linux/OS X)** implementation of Unix shell commands on top of the Node.js API. You can use it to eliminate your shell script\'s dependency on Unix while still keeping its familiar and powerful commands. You can also install it globally so you can run it from outside Node projects - say goodbye to those gnarly Bash scripts!\n\nThe project is [unit-tested](http://travis-ci.org/arturadib/shelljs) and battled-tested in projects like:\n\n+ [PDF.js](http://github.com/mozilla/pdf.js) - Firefox\'s next-gen PDF reader\n+ [Firebug](http://getfirebug.com/) - Firefox\'s infamous debugger\n+ [JSHint](http://jshint.com) - Most popular JavaScript linter\n+ [Zepto](http://zeptojs.com) - jQuery-compatible JavaScript library for modern browsers\n+ [Yeoman](http://yeoman.io/) - Web application stack and development tool\n+ [Deployd.com](http://deployd.com) - Open source PaaS for quick API backend generation\n\nand [many more](https://npmjs.org/browse/depended/shelljs).\n\n## Installing\n\nVia npm:\n\n```bash\n$ npm install [-g] shelljs\n```\n\nIf the global option `-g` is specified, the binary `shjs` will be installed. This makes it possible to\nrun ShellJS scripts much like any shell script from the command line, i.e. without requiring a `node_modules` folder:\n\n```bash\n$ shjs my_script\n```\n\nYou can also just copy `shell.js` into your project\'s directory, and `require()` accordingly.\n\n\n## Examples\n\n### JavaScript\n\n```javascript\nrequire(\'shelljs/global\');\n\nif (!which(\'git\')) {\n  echo(\'Sorry, this script requires git\');\n  exit(1);\n}\n\n// Copy files to release dir\nmkdir(\'-p\', \'out/Release\');\ncp(\'-R\', \'stuff/*\', \'out/Release\');\n\n// Replace macros in each .js file\ncd(\'lib\');\nls(\'*.js\').forEach(function(file) {\n  sed(\'-i\', \'BUILD_VERSION\', \'v0.1.2\', file);\n  sed(\'-i\', /.*REMOVE_THIS_LINE.*\\n/, \'\', file);\n  sed(\'-i\', /.*REPLACE_LINE_WITH_MACRO.*\\n/, cat(\'macro.js\'), file);\n});\ncd(\'..\');\n\n// Run external tool synchronously\nif (exec(\'git commit -am "Auto-commit"\').code !== 0) {\n  echo(\'Error: Git commit failed\');\n  exit(1);\n}\n```\n\n### CoffeeScript\n\n```coffeescript\nrequire \'shelljs/global\'\n\nif not which \'git\'\n  echo \'Sorry, this script requires git\'\n  exit 1\n\n# Copy files to release dir\nmkdir \'-p\', \'out/Release\'\ncp \'-R\', \'stuff/*\', \'out/Release\'\n\n# Replace macros in each .js file\ncd \'lib\'\nfor file in ls \'*.js\'\n  sed \'-i\', \'BUILD_VERSION\', \'v0.1.2\', file\n  sed \'-i\', /.*REMOVE_THIS_LINE.*\\n/, \'\', file\n  sed \'-i\', /.*REPLACE_LINE_WITH_MACRO.*\\n/, cat \'macro.js\', file\ncd \'..\'\n\n# Run external tool synchronously\nif (exec \'git commit -am "Auto-commit"\').code != 0\n  echo \'Error: Git commit failed\'\n  exit 1\n```\n\n## Global vs. Local\n\nThe example above uses the convenience script `shelljs/global` to reduce verbosity. If polluting your global namespace is not desirable, simply require `shelljs`.\n\nExample:\n\n```javascript\nvar shell = require(\'shelljs\');\nshell.echo(\'hello world\');\n```\n\n## Make tool\n\nA convenience script `shelljs/make` is also provided to mimic the behavior of a Unix Makefile. In this case all shell objects are global, and command line arguments will cause the script to execute only the corresponding function in the global `target` object. To avoid redundant calls, target functions are executed only once per script.\n\nExample (CoffeeScript):\n\n```coffeescript\nrequire \'shelljs/make\'\n\ntarget.all = ->\n  target.bundle()\n  target.docs()\n\ntarget.bundle = ->\n  cd __dirname\n  mkdir \'build\'\n  cd \'lib\'\n  (cat \'*.js\').to \'../build/output.js\'\n\ntarget.docs = ->\n  cd __dirname\n  mkdir \'docs\'\n  cd \'lib\'\n  for file in ls \'*.js\'\n    text = grep \'//@\', file     # extract special comments\n    text.replace \'//@\', \'\'      # remove comment tags\n    text.to \'docs/my_docs.md\'\n```\n\nTo run the target `all`, call the above script without arguments: `$ node make`. To run the target `docs`: `$ node make docs`, and so on.\n\n\n\n<!-- \n\n  DO NOT MODIFY BEYOND THIS POINT - IT\'S AUTOMATICALLY GENERATED\n\n-->\n\n\n## Command reference\n\n\nAll commands run synchronously, unless otherwise stated.\n\n\n### cd(\'dir\')\nChanges to directory `dir` for the duration of the script\n\n### pwd()\nReturns the current directory.\n\n### ls([options ,] path [,path ...])\n### ls([options ,] path_array)\nAvailable options:\n\n+ `-R`: recursive\n+ `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n\nExamples:\n\n```javascript\nls(\'projs/*.js\');\nls(\'-R\', \'/users/me\', \'/tmp\');\nls(\'-R\', [\'/users/me\', \'/tmp\']); // same as above\n```\n\nReturns array of files in the given path, or in current directory if no path provided.\n\n### find(path [,path ...])\n### find(path_array)\nExamples:\n\n```javascript\nfind(\'src\', \'lib\');\nfind([\'src\', \'lib\']); // same as above\nfind(\'.\').filter(function(file) { return file.match(/\\.js$/); });\n```\n\nReturns array of all files (however deep) in the given paths.\n\nThe main difference from `ls(\'-R\', path)` is that the resulting file names\ninclude the base directories, e.g. `lib/resources/file1` instead of just `file1`.\n\n### cp([options ,] source [,source ...], dest)\n### cp([options ,] source_array, dest)\nAvailable options:\n\n+ `-f`: force\n+ `-r, -R`: recursive\n\nExamples:\n\n```javascript\ncp(\'file1\', \'dir1\');\ncp(\'-Rf\', \'/tmp/*\', \'/usr/local/*\', \'/home/tmp\');\ncp(\'-Rf\', [\'/tmp/*\', \'/usr/local/*\'], \'/home/tmp\'); // same as above\n```\n\nCopies files. The wildcard `*` is accepted.\n\n### rm([options ,] file [, file ...])\n### rm([options ,] file_array)\nAvailable options:\n\n+ `-f`: force\n+ `-r, -R`: recursive\n\nExamples:\n\n```javascript\nrm(\'-rf\', \'/tmp/*\');\nrm(\'some_file.txt\', \'another_file.txt\');\nrm([\'some_file.txt\', \'another_file.txt\']); // same as above\n```\n\nRemoves files. The wildcard `*` is accepted.\n\n### mv(source [, source ...], dest\')\n### mv(source_array, dest\')\nAvailable options:\n\n+ `f`: force\n\nExamples:\n\n```javascript\nmv(\'-f\', \'file\', \'dir/\');\nmv(\'file1\', \'file2\', \'dir/\');\nmv([\'file1\', \'file2\'], \'dir/\'); // same as above\n```\n\nMoves files. The wildcard `*` is accepted.\n\n### mkdir([options ,] dir [, dir ...])\n### mkdir([options ,] dir_array)\nAvailable options:\n\n+ `p`: full path (will create intermediate dirs if necessary)\n\nExamples:\n\n```javascript\nmkdir(\'-p\', \'/tmp/a/b/c/d\', \'/tmp/e/f/g\');\nmkdir(\'-p\', [\'/tmp/a/b/c/d\', \'/tmp/e/f/g\']); // same as above\n```\n\nCreates directories.\n\n### test(expression)\nAvailable expression primaries:\n\n+ `\'-b\', \'path\'`: true if path is a block device\n+ `\'-c\', \'path\'`: true if path is a character device\n+ `\'-d\', \'path\'`: true if path is a directory\n+ `\'-e\', \'path\'`: true if path exists\n+ `\'-f\', \'path\'`: true if path is a regular file\n+ `\'-L\', \'path\'`: true if path is a symboilc link\n+ `\'-p\', \'path\'`: true if path is a pipe (FIFO)\n+ `\'-S\', \'path\'`: true if path is a socket\n\nExamples:\n\n```javascript\nif (test(\'-d\', path)) { /* do something with dir */ };\nif (!test(\'-f\', path)) continue; // skip if it\'s a regular file\n```\n\nEvaluates expression using the available primaries and returns corresponding value.\n\n### cat(file [, file ...])\n### cat(file_array)\n\nExamples:\n\n```javascript\nvar str = cat(\'file*.txt\');\nvar str = cat(\'file1\', \'file2\');\nvar str = cat([\'file1\', \'file2\']); // same as above\n```\n\nReturns a string containing the given file, or a concatenated string\ncontaining the files if more than one file is given (a new line character is\nintroduced between each file). Wildcard `*` accepted.\n\n### \'string\'.to(file)\n\nExamples:\n\n```javascript\ncat(\'input.txt\').to(\'output.txt\');\n```\n\nAnalogous to the redirection operator `>` in Unix, but works with JavaScript strings (such as\nthose returned by `cat`, `grep`, etc). _Like Unix redirections, `to()` will overwrite any existing file!_\n\n### sed([options ,] search_regex, replace_str, file)\nAvailable options:\n\n+ `-i`: Replace contents of \'file\' in-place. _Note that no backups will be created!_\n\nExamples:\n\n```javascript\nsed(\'-i\', \'PROGRAM_VERSION\', \'v0.1.3\', \'source.js\');\nsed(/.*DELETE_THIS_LINE.*\\n/, \'\', \'source.js\');\n```\n\nReads an input string from `file` and performs a JavaScript `replace()` on the input\nusing the given search regex and replacement string. Returns the new string after replacement.\n\n### grep([options ,] regex_filter, file [, file ...])\n### grep([options ,] regex_filter, file_array)\nAvailable options:\n\n+ `-v`: Inverse the sense of the regex and print the lines not matching the criteria.\n\nExamples:\n\n```javascript\ngrep(\'-v\', \'GLOBAL_VARIABLE\', \'*.js\');\ngrep(\'GLOBAL_VARIABLE\', \'*.js\');\n```\n\nReads input string from given files and returns a string containing all lines of the\nfile that match the given `regex_filter`. Wildcard `*` accepted.\n\n### which(command)\n\nExamples:\n\n```javascript\nvar nodeExec = which(\'node\');\n```\n\nSearches for `command` in the system\'s PATH. On Windows looks for `.exe`, `.cmd`, and `.bat` extensions.\nReturns string containing the absolute path to the command.\n\n### echo(string [,string ...])\n\nExamples:\n\n```javascript\necho(\'hello world\');\nvar str = echo(\'hello world\');\n```\n\nPrints string to stdout, and returns string with additional utility methods\nlike `.to()`.\n\n### dirs([options | \'+N\' | \'-N\'])\n\nAvailable options:\n\n+ `-c`: Clears the directory stack by deleting all of the elements.\n\nArguments:\n\n+ `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n+ `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n\nDisplay the list of currently remembered directories. Returns an array of paths in the stack, or a single path if +N or -N was specified.\n\nSee also: pushd, popd\n\n### pushd([options,] [dir | \'-N\' | \'+N\'])\n\nAvailable options:\n\n+ `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n\nArguments:\n\n+ `dir`: Makes the current working directory be the top of the stack, and then executes the equivalent of `cd dir`.\n+ `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n+ `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n\nExamples:\n\n```javascript\n// process.cwd() === \'/usr\'\npushd(\'/etc\'); // Returns /etc /usr\npushd(\'+1\');   // Returns /usr /etc\n```\n\nSave the current directory on the top of the directory stack and then cd to `dir`. With no arguments, pushd exchanges the top two directories. Returns an array of paths in the stack.\n\n### popd([options,] [\'-N\' | \'+N\'])\n\nAvailable options:\n\n+ `-n`: Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.\n\nArguments:\n\n+ `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n+ `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n\nExamples:\n\n```javascript\necho(process.cwd()); // \'/usr\'\npushd(\'/etc\');       // \'/etc /usr\'\necho(process.cwd()); // \'/etc\'\npopd();              // \'/usr\'\necho(process.cwd()); // \'/usr\'\n```\n\nWhen no arguments are given, popd removes the top directory from the stack and performs a cd to the new top directory. The elements are numbered from 0 starting at the first directory listed with dirs; i.e., popd is equivalent to popd +0. Returns an array of paths in the stack.\n\n### exit(code)\nExits the current process with the given exit code.\n\n### env[\'VAR_NAME\']\nObject containing environment variables (both getter and setter). Shortcut to process.env.\n\n### exec(command [, options] [, callback])\nAvailable options (all `false` by default):\n\n+ `async`: Asynchronous execution. Defaults to true if a callback is provided.\n+ `silent`: Do not echo program output to console.\n\nExamples:\n\n```javascript\nvar version = exec(\'node --version\', {silent:true}).output;\n\nvar child = exec(\'some_long_running_process\', {async:true});\nchild.stdout.on(\'data\', function(data) {\n  /* ... do something with data ... */\n});\n\nexec(\'some_long_running_process\', function(code, output) {\n  console.log(\'Exit code:\', code);\n  console.log(\'Program output:\', output);\n});\n```\n\nExecutes the given `command` _synchronously_, unless otherwise specified.\nWhen in synchronous mode returns the object `{ code:..., output:... }`, containing the program\'s\n`output` (stdout + stderr)  and its exit `code`. Otherwise returns the child process object, and\nthe `callback` gets the arguments `(code, output)`.\n\n**Note:** For long-lived processes, it\'s best to run `exec()` asynchronously as\nthe current synchronous implementation uses a lot of CPU. This should be getting\nfixed soon.\n\n### chmod(octal_mode || octal_string, file)\n### chmod(symbolic_mode, file)\n\nAvailable options:\n\n+ `-v`: output a diagnostic for every file processed\n+ `-c`: like verbose but report only when a change is made\n+ `-R`: change files and directories recursively\n\nExamples:\n\n```javascript\nchmod(755, \'/Users/brandon\');\nchmod(\'755\', \'/Users/brandon\'); // same as above \nchmod(\'u+x\', \'/Users/brandon\');\n```\n\nAlters the permissions of a file or directory by either specifying the\nabsolute permissions in octal form or expressing the changes in symbols.\nThis command tries to mimic the POSIX behavior as much as possible.\nNotable exceptions:\n\n+ In symbolic modes, \'a-r\' and \'-r\' are identical.  No consideration is\n  given to the umask.\n+ There is no "quiet" option since default behavior is to run silent.\n\n## Configuration\n\n\n### config.silent\nExample:\n\n```javascript\nvar silentState = config.silent; // save old silent state\nconfig.silent = true;\n/* ... */\nconfig.silent = silentState; // restore old silent state\n```\n\nSuppresses all command output if `true`, except for `echo()` calls.\nDefault is `false`.\n\n### config.fatal\nExample:\n\n```javascript\nconfig.fatal = true;\ncp(\'this_file_does_not_exist\', \'/dev/null\'); // dies here\n/* more commands... */\n```\n\nIf `true` the script will die on errors. Default is `false`.\n\n## Non-Unix commands\n\n\n### tempdir()\nSearches and returns string containing a writeable, platform-dependent temporary directory.\nFollows Python\'s [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\n\n### error()\nTests if error occurred in the last command. Returns `null` if no error occurred,\notherwise returns string explaining the error\n',
3893 silly resolved     readmeFilename: 'README.md',
3893 silly resolved     bugs: { url: 'https://github.com/arturadib/shelljs/issues' },
3893 silly resolved     _id: 'shelljs@0.1.4',
3893 silly resolved     dist: { shasum: 'b1fe29c348ae710d29040cdf8d7d7926ac10b3ad' },
3893 silly resolved     _from: 'shelljs@0.1.x',
3893 silly resolved     _resolved: 'https://registry.npmjs.org/shelljs/-/shelljs-0.1.4.tgz' } ]
3894 info install underscore@1.4.4 into /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
3895 info install minimatch@0.2.12 into /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
3896 info install console-browserify@0.1.6 into /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
3897 info install cli@0.4.5 into /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
3898 info install shelljs@0.1.4 into /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint
3899 info installOne underscore@1.4.4
3900 info installOne minimatch@0.2.12
3901 info installOne console-browserify@0.1.6
3902 info installOne cli@0.4.5
3903 info installOne shelljs@0.1.4
3904 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore unbuild
3905 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/minimatch unbuild
3906 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify unbuild
3907 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/cli unbuild
3908 info /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs unbuild
3909 verbose tar unpack /home/ahmad/.npm/underscore/1.4.4/package.tgz
3910 silly lockFile 13ab1501-s-jshint-node-modules-underscore tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore
3911 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore /home/ahmad/.npm/13ab1501-s-jshint-node-modules-underscore.lock
3912 silly lockFile be39a566-npm-underscore-1-4-4-package-tgz tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz
3913 verbose lock tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz /home/ahmad/.npm/be39a566-npm-underscore-1-4-4-package-tgz.lock
3914 verbose tar unpack /home/ahmad/.npm/minimatch/0.2.12/package.tgz
3915 silly lockFile acb312dc-es-jshint-node-modules-minimatch tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/minimatch
3916 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/minimatch /home/ahmad/.npm/acb312dc-es-jshint-node-modules-minimatch.lock
3917 silly lockFile fca71e6c-npm-minimatch-0-2-12-package-tgz tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz
3918 verbose lock tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz /home/ahmad/.npm/fca71e6c-npm-minimatch-0-2-12-package-tgz.lock
3919 verbose tar unpack /home/ahmad/.npm/console-browserify/0.1.6/package.tgz
3920 silly lockFile 23c3def5--node-modules-console-browserify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify
3921 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify /home/ahmad/.npm/23c3def5--node-modules-console-browserify.lock
3922 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
3923 verbose lock tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz /home/ahmad/.npm/1904875e-ole-browserify-0-1-6-package-tgz.lock
3924 verbose tar unpack /home/ahmad/.npm/cli/0.4.5/package.tgz
3925 silly lockFile 01cf76cd--modules-jshint-node-modules-cli tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/cli
3926 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/cli /home/ahmad/.npm/01cf76cd--modules-jshint-node-modules-cli.lock
3927 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
3928 verbose lock tar:///home/ahmad/.npm/cli/0.4.5/package.tgz /home/ahmad/.npm/597c9cef--ahmad-npm-cli-0-4-5-package-tgz.lock
3929 verbose tar unpack /home/ahmad/.npm/shelljs/0.1.4/package.tgz
3930 silly lockFile 5069f006-ules-jshint-node-modules-shelljs tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs
3931 verbose lock tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs /home/ahmad/.npm/5069f006-ules-jshint-node-modules-shelljs.lock
3932 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
3933 verbose lock tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz /home/ahmad/.npm/20ce3685-ad-npm-shelljs-0-1-4-package-tgz.lock
3934 silly gunzTarPerm modes [ '755', '644' ]
3935 silly gunzTarPerm modes [ '755', '644' ]
3936 silly gunzTarPerm modes [ '755', '644' ]
3937 silly gunzTarPerm modes [ '755', '644' ]
3938 silly gunzTarPerm modes [ '755', '644' ]
3939 silly gunzTarPerm extractEntry package.json
3940 silly gunzTarPerm extractEntry package.json
3941 silly gunzTarPerm extractEntry package.json
3942 silly gunzTarPerm extractEntry package.json
3943 silly gunzTarPerm extractEntry package.json
3944 silly gunzTarPerm extractEntry .npmignore
3945 silly gunzTarPerm extractEntry README.md
3946 silly gunzTarPerm extractEntry README.md
3947 silly gunzTarPerm extractEntry LICENSE
3948 silly gunzTarPerm extractEntry .npmignore
3949 silly gunzTarPerm extractEntry README.md
3950 silly gunzTarPerm extractEntry README.md
3951 silly gunzTarPerm extractEntry cli.js
3952 silly gunzTarPerm extractEntry .npmignore
3953 silly gunzTarPerm extractEntry README.md
3954 silly gunzTarPerm extractEntry LICENSE
3955 silly gunzTarPerm extractEntry underscore-min.js
3956 silly gunzTarPerm extractEntry minimatch.js
3957 silly gunzTarPerm extractEntry test/basic.js
3958 silly gunzTarPerm extractEntry test/brace-expand.js
3959 silly gunzTarPerm extractEntry test/caching.js
3960 silly gunzTarPerm extractEntry test/defaults.js
3961 silly gunzTarPerm extractEntry index.js
3962 silly gunzTarPerm extractEntry LICENSE
3963 silly gunzTarPerm extractEntry LICENCE
3964 silly gunzTarPerm extractEntry index.js
3965 silly gunzTarPerm extractEntry index.js
3966 silly gunzTarPerm extractEntry global.js
3967 silly gunzTarPerm extractEntry make.js
3968 silly gunzTarPerm extractEntry .testem.json
3969 silly gunzTarPerm extractEntry .travis.yml
3970 silly gunzTarPerm extractEntry underscore.js
3971 silly gunzTarPerm extractEntry index.html
3972 silly gunzTarPerm extractEntry test/index.js
3973 silly gunzTarPerm extractEntry test/static/test-adapter.js
3974 silly gunzTarPerm extractEntry examples/cat.js
3975 silly gunzTarPerm extractEntry examples/command.js
3976 silly gunzTarPerm extractEntry .travis.yml
3977 silly gunzTarPerm extractEntry CONTRIBUTING.md
3978 silly gunzTarPerm extractEntry test/static/index.html
3979 silly gunzTarPerm extractEntry shell.js
3980 silly gunzTarPerm extractEntry jshint.json
3981 silly gunzTarPerm extractEntry .travis.yml
3982 silly gunzTarPerm extractEntry bin/shjs
3983 silly gunzTarPerm extractEntry CNAME
3984 silly gunzTarPerm extractEntry favicon.ico
3985 silly gunzTarPerm extractEntry scripts/docs.js
3986 silly gunzTarPerm extractEntry scripts/run-tests.js
3987 silly gunzTarPerm extractEntry .documentup.json
3988 silly gunzTarPerm extractEntry test/.npmignore
3989 silly lockFile 23c3def5--node-modules-console-browserify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify
3990 silly lockFile 23c3def5--node-modules-console-browserify tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify
3991 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
3992 silly lockFile 1904875e-ole-browserify-0-1-6-package-tgz tar:///home/ahmad/.npm/console-browserify/0.1.6/package.tgz
3993 info preinstall console-browserify@0.1.6
3994 silly gunzTarPerm extractEntry examples/echo.js
3995 silly gunzTarPerm extractEntry examples/glob.js
3996 verbose readDependencies using package.json deps
3997 verbose readDependencies using package.json deps
3998 silly resolved []
3999 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify
4000 info build /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/console-browserify
4001 verbose linkStuff [ false,
4001 verbose linkStuff   false,
4001 verbose linkStuff   false,
4001 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules' ]
4002 info linkStuff console-browserify@0.1.6
4003 verbose linkBins console-browserify@0.1.6
4004 verbose linkMans console-browserify@0.1.6
4005 verbose rebuildBundles console-browserify@0.1.6
4006 info install console-browserify@0.1.6
4007 info postinstall console-browserify@0.1.6
4008 silly gunzTarPerm extractEntry examples/long_desc.js
4009 silly gunzTarPerm extractEntry examples/progress.js
4010 silly gunzTarPerm extractEntry examples/sort.js
4011 silly gunzTarPerm extractEntry examples/spinner.js
4012 silly gunzTarPerm extractEntry examples/static.js
4013 silly gunzTarPerm extractEntry examples/static.coffee
4014 silly gunzTarPerm extractEntry test/exec.js
4015 silly gunzTarPerm extractEntry test/find.js
4016 silly lockFile acb312dc-es-jshint-node-modules-minimatch tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/minimatch
4017 silly lockFile acb312dc-es-jshint-node-modules-minimatch tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/minimatch
4018 silly lockFile fca71e6c-npm-minimatch-0-2-12-package-tgz tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz
4019 silly lockFile fca71e6c-npm-minimatch-0-2-12-package-tgz tar:///home/ahmad/.npm/minimatch/0.2.12/package.tgz
4020 info preinstall minimatch@0.2.12
4021 silly gunzTarPerm extractEntry test/grep.js
4022 silly gunzTarPerm extractEntry test/env.js
4023 verbose readDependencies using package.json deps
4024 verbose readDependencies using package.json deps
4025 silly gunzTarPerm extractEntry test/cat.js
4026 silly gunzTarPerm extractEntry test/mkdir.js
4027 verbose cache add [ 'sigmund@~1.0.0', null ]
4028 verbose cache add name=undefined spec="sigmund@~1.0.0" args=["sigmund@~1.0.0",null]
4029 verbose parsed url { protocol: null,
4029 verbose parsed url   slashes: null,
4029 verbose parsed url   auth: null,
4029 verbose parsed url   host: null,
4029 verbose parsed url   port: null,
4029 verbose parsed url   hostname: null,
4029 verbose parsed url   hash: null,
4029 verbose parsed url   search: null,
4029 verbose parsed url   query: null,
4029 verbose parsed url   pathname: 'sigmund@~1.0.0',
4029 verbose parsed url   path: 'sigmund@~1.0.0',
4029 verbose parsed url   href: 'sigmund@~1.0.0' }
4030 verbose cache add name="sigmund" spec="~1.0.0" args=["sigmund","~1.0.0"]
4031 verbose parsed url { protocol: null,
4031 verbose parsed url   slashes: null,
4031 verbose parsed url   auth: null,
4031 verbose parsed url   host: null,
4031 verbose parsed url   port: null,
4031 verbose parsed url   hostname: null,
4031 verbose parsed url   hash: null,
4031 verbose parsed url   search: null,
4031 verbose parsed url   query: null,
4031 verbose parsed url   pathname: '~1.0.0',
4031 verbose parsed url   path: '~1.0.0',
4031 verbose parsed url   href: '~1.0.0' }
4032 verbose addNamed [ 'sigmund', '~1.0.0' ]
4033 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
4034 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
4035 verbose lock sigmund@~1.0.0 /home/ahmad/.npm/584a4a05-sigmund-1-0-0.lock
4036 verbose cache add [ 'lru-cache@2', null ]
4037 verbose cache add name=undefined spec="lru-cache@2" args=["lru-cache@2",null]
4038 verbose parsed url { protocol: null,
4038 verbose parsed url   slashes: null,
4038 verbose parsed url   auth: null,
4038 verbose parsed url   host: null,
4038 verbose parsed url   port: null,
4038 verbose parsed url   hostname: null,
4038 verbose parsed url   hash: null,
4038 verbose parsed url   search: null,
4038 verbose parsed url   query: null,
4038 verbose parsed url   pathname: 'lru-cache@2',
4038 verbose parsed url   path: 'lru-cache@2',
4038 verbose parsed url   href: 'lru-cache@2' }
4039 verbose cache add name="lru-cache" spec="2" args=["lru-cache","2"]
4040 verbose parsed url { protocol: null,
4040 verbose parsed url   slashes: null,
4040 verbose parsed url   auth: null,
4040 verbose parsed url   host: null,
4040 verbose parsed url   port: null,
4040 verbose parsed url   hostname: null,
4040 verbose parsed url   hash: null,
4040 verbose parsed url   search: null,
4040 verbose parsed url   query: null,
4040 verbose parsed url   pathname: '2',
4040 verbose parsed url   path: '2',
4040 verbose parsed url   href: '2' }
4041 verbose addNamed [ 'lru-cache', '2' ]
4042 verbose addNamed [ null, '>=2.0.0-0 <3.0.0-0' ]
4043 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
4044 verbose lock lru-cache@2 /home/ahmad/.npm/b4f9d1ff-lru-cache-2.lock
4045 silly addNameRange { name: 'sigmund', range: '>=1.0.0-0 <1.1.0-0', hasData: false }
4046 silly addNameRange { name: 'lru-cache',
4046 silly addNameRange   range: '>=2.0.0-0 <3.0.0-0',
4046 silly addNameRange   hasData: false }
4047 silly lockFile 01cf76cd--modules-jshint-node-modules-cli tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/cli
4048 silly lockFile 01cf76cd--modules-jshint-node-modules-cli tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/cli
4049 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
4050 silly lockFile 597c9cef--ahmad-npm-cli-0-4-5-package-tgz tar:///home/ahmad/.npm/cli/0.4.5/package.tgz
4051 verbose url raw sigmund
4052 verbose url resolving [ 'https://registry.npmjs.org/', './sigmund' ]
4053 verbose url resolved https://registry.npmjs.org/sigmund
4054 info trying registry request attempt 1 at 23:50:10
4055 verbose etag "BAAVPGGBONNEW4H9S234JOULZ"
4056 http GET https://registry.npmjs.org/sigmund
4057 verbose url raw lru-cache
4058 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache' ]
4059 verbose url resolved https://registry.npmjs.org/lru-cache
4060 info trying registry request attempt 1 at 23:50:10
4061 verbose etag "14VF40U499GDAIDK33TEOG56Q"
4062 http GET https://registry.npmjs.org/lru-cache
4063 info preinstall cli@0.4.5
4064 silly gunzTarPerm extractEntry test/mv.js
4065 silly gunzTarPerm extractEntry test/popd.js
4066 verbose readDependencies using package.json deps
4067 verbose readDependencies using package.json deps
4068 verbose cache add [ 'glob@>= 3.1.4', null ]
4069 verbose cache add name=undefined spec="glob@>= 3.1.4" args=["glob@>= 3.1.4",null]
4070 verbose parsed url { protocol: null,
4070 verbose parsed url   slashes: null,
4070 verbose parsed url   auth: null,
4070 verbose parsed url   host: null,
4070 verbose parsed url   port: null,
4070 verbose parsed url   hostname: null,
4070 verbose parsed url   hash: null,
4070 verbose parsed url   search: null,
4070 verbose parsed url   query: null,
4070 verbose parsed url   pathname: 'glob@%3E=%203.1.4',
4070 verbose parsed url   path: 'glob@%3E=%203.1.4',
4070 verbose parsed url   href: 'glob@%3E=%203.1.4' }
4071 verbose cache add name="glob" spec=">= 3.1.4" args=["glob",">= 3.1.4"]
4072 verbose parsed url { protocol: null,
4072 verbose parsed url   slashes: null,
4072 verbose parsed url   auth: null,
4072 verbose parsed url   host: null,
4072 verbose parsed url   port: null,
4072 verbose parsed url   hostname: null,
4072 verbose parsed url   hash: null,
4072 verbose parsed url   search: null,
4072 verbose parsed url   query: null,
4072 verbose parsed url   pathname: '%3E=%203.1.4',
4072 verbose parsed url   path: '%3E=%203.1.4',
4072 verbose parsed url   href: '%3E=%203.1.4' }
4073 verbose addNamed [ 'glob', '>= 3.1.4' ]
4074 verbose addNamed [ null, '>=3.1.4' ]
4075 silly lockFile 2f09716d-glob-3-1-4 glob@>= 3.1.4
4076 verbose lock glob@>= 3.1.4 /home/ahmad/.npm/2f09716d-glob-3-1-4.lock
4077 silly addNameRange { name: 'glob', range: '>=3.1.4', hasData: false }
4078 silly gunzTarPerm extractEntry test/pushd.js
4079 silly gunzTarPerm extractEntry test/echo.js
4080 verbose url raw glob
4081 verbose url resolving [ 'https://registry.npmjs.org/', './glob' ]
4082 verbose url resolved https://registry.npmjs.org/glob
4083 info trying registry request attempt 1 at 23:50:10
4084 verbose etag "9F27NP1F72HEQ13T6LA8E16E8"
4085 http GET https://registry.npmjs.org/glob
4086 silly gunzTarPerm extractEntry test/pwd.js
4087 silly gunzTarPerm extractEntry test/dirs.js
4088 silly gunzTarPerm extractEntry test/to.js
4089 silly gunzTarPerm extractEntry test/cp.js
4090 silly gunzTarPerm extractEntry test/rm.js
4091 silly gunzTarPerm extractEntry test/config.js
4092 silly gunzTarPerm extractEntry test/sed.js
4093 silly gunzTarPerm extractEntry test/chmod.js
4094 silly gunzTarPerm extractEntry test/tempdir.js
4095 silly gunzTarPerm extractEntry test/cd.js
4096 silly gunzTarPerm extractEntry test/test.js
4097 silly gunzTarPerm extractEntry test/ls.js
4098 silly gunzTarPerm extractEntry test/which.js
4099 silly gunzTarPerm extractEntry test/make.js
4100 silly gunzTarPerm extractEntry test/resources/file1.js
4101 silly gunzTarPerm extractEntry test/resources/file2.js
4102 silly gunzTarPerm extractEntry test/resources/file2
4103 silly gunzTarPerm extractEntry test/resources/external/node_script.js
4104 silly gunzTarPerm extractEntry test/resources/file1
4105 silly gunzTarPerm extractEntry test/resources/a.txt
4106 silly gunzTarPerm extractEntry test/resources/file1.txt
4107 silly gunzTarPerm extractEntry test/resources/chmod/a/b/c/.npmignore
4108 silly gunzTarPerm extractEntry test/resources/chmod/b/a/b/.npmignore
4109 silly gunzTarPerm extractEntry test/resources/chmod/c/a/b/.npmignore
4110 silly gunzTarPerm extractEntry test/resources/chmod/file1
4111 silly gunzTarPerm extractEntry test/resources/cp/a
4112 silly gunzTarPerm extractEntry test/resources/cp/b
4113 silly gunzTarPerm extractEntry test/resources/cp/dir_a/z
4114 silly lockFile 13ab1501-s-jshint-node-modules-underscore tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore
4115 silly lockFile 13ab1501-s-jshint-node-modules-underscore tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore
4116 silly lockFile be39a566-npm-underscore-1-4-4-package-tgz tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz
4117 silly lockFile be39a566-npm-underscore-1-4-4-package-tgz tar:///home/ahmad/.npm/underscore/1.4.4/package.tgz
4118 silly gunzTarPerm extractEntry test/resources/cp/dir_b/dir_b_a/dir_b_a_a/z
4119 silly gunzTarPerm extractEntry test/resources/file2.txt
4120 info preinstall underscore@1.4.4
4121 verbose readDependencies using package.json deps
4122 verbose readDependencies using package.json deps
4123 silly resolved []
4124 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore
4125 info build /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/underscore
4126 verbose linkStuff [ false,
4126 verbose linkStuff   false,
4126 verbose linkStuff   false,
4126 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules' ]
4127 info linkStuff underscore@1.4.4
4128 verbose linkBins underscore@1.4.4
4129 verbose linkMans underscore@1.4.4
4130 verbose rebuildBundles underscore@1.4.4
4131 info install underscore@1.4.4
4132 info postinstall underscore@1.4.4
4133 silly gunzTarPerm extractEntry test/resources/find/.hidden
4134 silly gunzTarPerm extractEntry test/resources/find/a
4135 silly gunzTarPerm extractEntry test/resources/find/b
4136 silly gunzTarPerm extractEntry test/resources/find/dir1/a_dir1
4137 silly gunzTarPerm extractEntry test/resources/find/dir1/dir11/a_dir11
4138 silly gunzTarPerm extractEntry test/resources/find/dir2/a_dir1
4139 silly gunzTarPerm extractEntry test/resources/issue44/main.js
4140 silly gunzTarPerm extractEntry test/resources/ls/file1.js
4141 silly gunzTarPerm extractEntry test/resources/ls/file2.js
4142 silly gunzTarPerm extractEntry test/resources/ls/.hidden_dir/nada
4143 silly gunzTarPerm extractEntry test/resources/ls/.hidden_file
4144 silly gunzTarPerm extractEntry test/resources/ls/a_dir/.hidden_dir/nada
4145 silly gunzTarPerm extractEntry test/resources/ls/a_dir/b_dir/z
4146 silly gunzTarPerm extractEntry test/resources/ls/a_dir/nada
4147 silly gunzTarPerm extractEntry test/resources/ls/file1
4148 silly gunzTarPerm extractEntry test/resources/ls/file2
4149 silly gunzTarPerm extractEntry test/resources/ls/filename(with)[chars$]^that.must+be-escaped
4150 silly gunzTarPerm extractEntry test/resources/pushd/a/dummy
4151 silly gunzTarPerm extractEntry test/resources/pushd/b/c/dummy
4152 silly lockFile 5069f006-ules-jshint-node-modules-shelljs tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs
4153 silly lockFile 5069f006-ules-jshint-node-modules-shelljs tar:///var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs
4154 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
4155 silly lockFile 20ce3685-ad-npm-shelljs-0-1-4-package-tgz tar:///home/ahmad/.npm/shelljs/0.1.4/package.tgz
4156 info preinstall shelljs@0.1.4
4157 verbose readDependencies using package.json deps
4158 verbose readDependencies using package.json deps
4159 silly resolved []
4160 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs
4161 info build /var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/shelljs
4162 verbose linkStuff [ false,
4162 verbose linkStuff   false,
4162 verbose linkStuff   false,
4162 verbose linkStuff   '/var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules' ]
4163 info linkStuff shelljs@0.1.4
4164 verbose linkBins shelljs@0.1.4
4165 verbose link bins [ { shjs: './bin/shjs' },
4165 verbose link bins   '/var/www/sites/marker/http/node_modules/grunt-contrib-jshint/node_modules/jshint/node_modules/.bin',
4165 verbose link bins   false ]
4166 verbose linkMans shelljs@0.1.4
4167 verbose rebuildBundles shelljs@0.1.4
4168 info install shelljs@0.1.4
4169 info postinstall shelljs@0.1.4
4170 http 200 https://registry.npmjs.org/source-map
4171 verbose bad json {"_id":"source-map","_rev":"73-a475b32833cb94270216a47680d2d80c","name":"source-map","description":"Generates and consumes source maps","dist-tags":{"latest":"0.1.31"},"versions":{"0.0.0":{"name":"source-map","description":"Generates and consumes source maps","version":"0.0.0","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"MPL","url":"https://www.mozilla.org/MPL/MPL-1.1.html"},{"type":"GPL","url":"http://www.gnu.org/licenses/gpl.html"},{"type":"LGPL","url":"http://www.gnu.org/licenses/lgpl.html"}],"dependencies":{"requirejs":">=0.26.0"},"_npmJsonOpts":{"file":"/Users/fitzgen/.npm/source-map/0.0.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"source-map@0.0.0","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"44220b0adf1572e603614d853727d3b05078d56c","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.0.0.tgz"},"scripts":{},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"}]},"0.1.0":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.0","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"MPL","url":"https://www.mozilla.org/MPL/MPL-1.1.html"},{"type":"GPL","url":"http://www.gnu.org/licenses/gpl.html"},{"type":"LGPL","url":"http://www.gnu.org/licenses/lgpl.html"}],"dependencies":{"requirejs":">=0.26.0"},"_npmJsonOpts":{"file":"/Users/fitzgen/.npm/source-map/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"source-map@0.1.0","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"229a5427719f1971be234b37cf968538b0600136","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"}]},"0.1.1":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.1","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"requirejs":">=0.26.0"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.1","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"524b0c511d53c3b1a76a211c084361bde15da726","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.1.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall NodeJS and [Dryice][]. Then run `node Makefile.dryice.js`. This should\ncreate the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/SourceMapConsumer.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.2":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.2","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"requirejs":"==0.26.0"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.2","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"7132efc1fa95273bc71bff8f8202d7b4eed57993","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.2.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall NodeJS and [Dryice][]. Then run `node Makefile.dryice.js`. This should\ncreate the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.3":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.3","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"requirejs":"==0.26.0"},"devDependencies":{"dryice":"~0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.3","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"ed3165c4d0f0a6291e53e485cb95b5f1a0a25183","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.3.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall NodeJS and [Dryice][]. Then run `node Makefile.dryice.js`. This should\ncreate the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.4":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.4","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.4","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"cd67f54e9c4fdc713c00a869241c419e9fedace0","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.4.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.5":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.5","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.5","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"63aaaee4c9dc9bea95ba9469a80775576927bf08","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.5.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.6":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.6","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.6","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"0035ddb2d9a191df8c8b13a0362eb618d881ea34","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.6.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.7":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.7","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.7","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"92da34014a5576d60676150bcf0f55cbd1f395c0","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.7.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.8":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.8","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.8","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"0bcc088a50ed8c586f50c8da4833a27dc0cc0c30","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.8.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.9":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.9","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.9","dist":{"shasum":"250224e4e9ef7e91f4cad76cae714b90f6218599","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.9.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.10":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.10","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.10","dist":{"shasum":"0bdafd2e1e97d147a862b7c7d1b26387ecc93aa9","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.10.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.11":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.11","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.11","dist":{"shasum":"2eef2fd65a74c179880ae5ee6975d99ce21eb7b4","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.11.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.12":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.12","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.12","dist":{"shasum":"55d5a5c58d98ffadacc4a8a7fbd7c9d4e459abd2","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.12.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.13":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.13","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.13","dist":{"shasum":"cc3d10be14dcafbd8f8259546438f19b72995a1c","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.13.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.14":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.14","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.14","dist":{"shasum":"81fb3b85f54abb1ad6a8e3f92e55b8fcd3eb836d","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.14.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.15":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.15","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.15","dist":{"shasum":"4eed4690db25839af3505ea4d018b6f5523f0807","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.15.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.16":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.16","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.16","dist":{"shasum":"4a1b371e9abd69a45fa698a1d281e2b213333dca","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.16.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.17":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.17","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.17","dist":{"shasum":"1b34e5b30616d48137d604b996cf5585dc78e204","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.17.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.18":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.18","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.18","dist":{"shasum":"6645e412fe48f748ba3a4ae56ed53f38a550f17e","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.18.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.19":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.19","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.19","dist":{"shasum":"61ce72499b6caaaa15484bd4b5dc718b0aebf76a","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.19.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.20":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.20","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.20","dist":{"shasum":"e41ce3288cac4c4f6eca181b53ae12558e7ad02a","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.20.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.21":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.21","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.21","dist":{"shasum":"ecd4efc4c3579de66b95913dda08c72ea0256469","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.21.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.22":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.22","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"github.com/usrbincc"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.22","dist":{"shasum":"425906162f81bf110552ccc9931dba079e9f1341","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.22.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.23":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.23","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"github.com/usrbincc"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.23","dist":{"shasum":"079f8fa7867f318b48cf5d4c716ab6d4dc859be9","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.23.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.24":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.24","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"github.com/usrbincc"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.24","dist":{"shasum":"5b533dd08948de2d8c3b002a9c31842cb1b35103","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.24.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.25":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.25","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.25","dist":{"shasum":"5851545c1f4a40243829065c20e6f40b023fba1a","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.25.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.26":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.26","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.26","dist":{"shasum":"4cce2dcb5fa02cfe1b4cf32cc83962b1b3997560","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.26.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.27":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.27","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.27","dist":{"shasum":"f114e06a8b5c05cbc51aa1fa600e728162455eda","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.27.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.28":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.28","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.28","dist":{"shasum":"9cae9d9b8352fb030f77c4e12226cc28cb251f39","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.28.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.29":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.29","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.29","dist":{"shasum":"39d571a0988fb7a548a676c4de72db78914d173c","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.29.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.30":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.30","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js","build":"node Makefile.dryice.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: 'min.js',\n      names: ['bar', 'baz', 'n'],\n      sources: ['one.js', 'two.js'],\n      sourceRoot: 'http://example.com/www/js/',\n      mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ 'http://example.com/www/js/one.js',\n    //   'http://example.com/www/js/two.js' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: 'http://example.com/www/js/two.js',\n    //   line: 2,\n    //   column: 10,\n    //   name: 'n' }\n\n    console.log(smc.generatedPositionFor({\n      source: 'http://example.com/www/js/two.js',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case 'BinaryExpression':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), \" + \", compile(ast.right)]\n        );\n      case 'Literal':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error(\"Bad AST\");\n      }\n    }\n\n    var ast = parse(\"40 + 2\", \"add.js\");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: 'add.js'\n    }));\n    // { code: '40 + 2',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: \"source-mapped.js\"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: \"foo.js\",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: \"christopher\"\n    });\n\n    console.log(map.toString());\n    // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.30","dist":{"shasum":"182726b50671d8fccaefc5ec35bf2a65c1956afb","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.30.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.31":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.31","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js","build":"node Makefile.dryice.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: 'min.js',\n      names: ['bar', 'baz', 'n'],\n      sources: ['one.js', 'two.js'],\n      sourceRoot: 'http://example.com/www/js/',\n      mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ 'http://example.com/www/js/one.js',\n    //   'http://example.com/www/js/two.js' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: 'http://example.com/www/js/two.js',\n    //   line: 2,\n    //   column: 10,\n    //   name: 'n' }\n\n    console.log(smc.generatedPositionFor({\n      source: 'http://example.com/www/js/two.js',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case 'BinaryExpression':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), \" + \", compile(ast.right)]\n        );\n      case 'Literal':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error(\"Bad AST\");\n      }\n    }\n\n    var ast = parse(\"40 + 2\", \"add.js\");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: 'add.js'\n    }));\n    // { code: '40 + 2',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: \"source-mapped.js\"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: \"foo.js\",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: \"christopher\"\n    });\n\n    console.log(map.toString());\n    // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.31","dist":{"shasum":"9f704d0d69d9e138a81badf6ebb4fde33d151c61","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.31.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]}},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}],"time":{"0.0.0":"2011-08-30T19:45:40.104Z","0.1.0":"2011-09-08T23:37:50.688Z","0.1.1":"2012-06-19T22:27:12.055Z","0.1.2":"2012-09-05T16:30:51.322Z","0.1.3":"2012-10-12T18:43:39.522Z","0.1.4":"2012-10-29T20:16:21.630Z","0.1.5":"2012-10-31T01:28:00.060Z","0.1.6":"2012-11-02T18:52:59.069Z","0.1.7":"2012-11-02T19:09:11.172Z","0.1.8":"2012-11-19T22:48:36.067Z","0.1.9":"2013-03-01T01:02:37.514Z","0.1.10":"2013-03-19T18:27:06.685Z","0.1.11":"2013-03-20T16:56:07.393Z","0.1.12":"2013-03-20T18:37:52.714Z","0.1.13":"2013-
4172 error registry error parsing json
4173 silly registry.get cb [ 200,
4173 silly registry.get   { vary: 'Accept',
4173 silly registry.get     server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
4173 silly registry.get     etag: '"7C9ASREIM5MJFAWMF85BIVLLP"',
4173 silly registry.get     date: 'Sun, 17 Nov 2013 21:49:01 GMT',
4173 silly registry.get     'content-type': 'application/json',
4173 silly registry.get     'content-length': '370469' } ]
4174 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
4175 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
4176 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js
4177 info /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/uglify-js unbuild
4178 info preuninstall uglify-js@2.4.3
4179 info uninstall uglify-js@2.4.3
4180 verbose false,/var/www/sites/marker/http/node_modules,/var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules unbuild uglify-js@2.4.3
4181 verbose /var/www/sites/marker/http/node_modules/grunt-contrib-uglify/node_modules/.bin,[object Object] binRoot
4182 info postuninstall uglify-js@2.4.3
4183 verbose about to build /var/www/sites/marker/http/node_modules/grunt-contrib-uglify
4184 info /var/www/sites/marker/http/node_modules/grunt-contrib-uglify unbuild
4185 info preuninstall grunt-contrib-uglify@0.2.7
4186 info uninstall grunt-contrib-uglify@0.2.7
4187 verbose true,/var/www/sites/marker/http/node_modules,/var/www/sites/marker/http/node_modules unbuild grunt-contrib-uglify@0.2.7
4188 info postuninstall grunt-contrib-uglify@0.2.7
4189 error SyntaxError: Unexpected end of input
4189 error {"_id":"source-map","_rev":"73-a475b32833cb94270216a47680d2d80c","name":"source-map","description":"Generates and consumes source maps","dist-tags":{"latest":"0.1.31"},"versions":{"0.0.0":{"name":"source-map","description":"Generates and consumes source maps","version":"0.0.0","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"MPL","url":"https://www.mozilla.org/MPL/MPL-1.1.html"},{"type":"GPL","url":"http://www.gnu.org/licenses/gpl.html"},{"type":"LGPL","url":"http://www.gnu.org/licenses/lgpl.html"}],"dependencies":{"requirejs":">=0.26.0"},"_npmJsonOpts":{"file":"/Users/fitzgen/.npm/source-map/0.0.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"source-map@0.0.0","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"44220b0adf1572e603614d853727d3b05078d56c","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.0.0.tgz"},"scripts":{},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"}]},"0.1.0":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.0","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"MPL","url":"https://www.mozilla.org/MPL/MPL-1.1.html"},{"type":"GPL","url":"http://www.gnu.org/licenses/gpl.html"},{"type":"LGPL","url":"http://www.gnu.org/licenses/lgpl.html"}],"dependencies":{"requirejs":">=0.26.0"},"_npmJsonOpts":{"file":"/Users/fitzgen/.npm/source-map/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"source-map@0.1.0","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"229a5427719f1971be234b37cf968538b0600136","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"}]},"0.1.1":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.1","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"requirejs":">=0.26.0"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.1","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"524b0c511d53c3b1a76a211c084361bde15da726","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.1.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall NodeJS and [Dryice][]. Then run `node Makefile.dryice.js`. This should\ncreate the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/SourceMapConsumer.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.2":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.2","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"requirejs":"==0.26.0"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.2","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"7132efc1fa95273bc71bff8f8202d7b4eed57993","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.2.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall NodeJS and [Dryice][]. Then run `node Makefile.dryice.js`. This should\ncreate the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.3":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.3","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.4.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"requirejs":"==0.26.0"},"devDependencies":{"dryice":"~0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.3","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"ed3165c4d0f0a6291e53e485cb95b5f1a0a25183","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.3.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall NodeJS and [Dryice][]. Then run `node Makefile.dryice.js`. This should\ncreate the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.4":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.4","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.4","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"cd67f54e9c4fdc713c00a869241c419e9fedace0","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.4.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.5":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.5","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.5","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"63aaaee4c9dc9bea95ba9469a80775576927bf08","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.5.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.6":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.6","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.6","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"0035ddb2d9a191df8c8b13a0362eb618d881ea34","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.6.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.7":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.7","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.7","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"92da34014a5576d60676150bcf0f55cbd1f395c0","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.7.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMapConsumer.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.8":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.8","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"git://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"_npmUser":{"name":"mozilla-devtools","email":"nfitzgerald@mozilla.com"},"_id":"source-map@0.1.8","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.8.5","_defaultsLoaded":true,"dist":{"shasum":"0bcc088a50ed8c586f50c8da4833a27dc0cc0c30","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.8.tgz"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.4.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.4.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.9":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.9","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.9","dist":{"shasum":"250224e4e9ef7e91f4cad76cae714b90f6218599","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.9.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.10":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.10","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.10","dist":{"shasum":"0bdafd2e1e97d147a862b7c7d1b26387ecc93aa9","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.10.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.11":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.11","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.11","dist":{"shasum":"2eef2fd65a74c179880ae5ee6975d99ce21eb7b4","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.11.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.12":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.12","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.12","dist":{"shasum":"55d5a5c58d98ffadacc4a8a7fbd7c9d4e459abd2","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.12.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.13":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.13","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.13","dist":{"shasum":"cc3d10be14dcafbd8f8259546438f19b72995a1c","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.13.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.14":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.14","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. This function\n  should not mutate the mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function () {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.14","dist":{"shasum":"81fb3b85f54abb1ad6a8e3f92e55b8fcd3eb836d","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.14.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.15":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.15","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.15","dist":{"shasum":"4eed4690db25839af3505ea4d018b6f5523f0807","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.15.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.16":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.16","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.16","dist":{"shasum":"4a1b371e9abd69a45fa698a1d281e2b213333dca","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.16.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.17":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.17","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.17","dist":{"shasum":"1b34e5b30616d48137d604b996cf5585dc78e204","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.17.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.18":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.18","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.18","dist":{"shasum":"6645e412fe48f748ba3a4ae56ed53f38a550f17e","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.18.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.19":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.19","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.19","dist":{"shasum":"61ce72499b6caaaa15484bd4b5dc718b0aebf76a","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.19.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.20":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.20","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.20","dist":{"shasum":"e41ce3288cac4c4f6eca181b53ae12558e7ad02a","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.20.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.21":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.21","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.21","dist":{"shasum":"ecd4efc4c3579de66b95913dda08c72ea0256469","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.21.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.22":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.22","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"github.com/usrbincc"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.22","dist":{"shasum":"425906162f81bf110552ccc9931dba079e9f1341","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.22.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.23":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.23","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"github.com/usrbincc"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.23","dist":{"shasum":"079f8fa7867f318b48cf5d4c716ab6d4dc859be9","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.23.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.24":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.24","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Stephen Crane"},{"name":"Ryan Seddon"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"github.com/usrbincc"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.24","dist":{"shasum":"5b533dd08948de2d8c3b002a9c31842cb1b35103","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.24.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.25":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.25","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js`\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.25","dist":{"shasum":"5851545c1f4a40243829065c20e6f40b023fba1a","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.25.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.26":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.26","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.26","dist":{"shasum":"4cce2dcb5fa02cfe1b4cf32cc83962b1b3997560","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.26.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.27":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.27","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.27","dist":{"shasum":"f114e06a8b5c05cbc51aa1fa600e728162455eda","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.27.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.28":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.28","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.28","dist":{"shasum":"9cae9d9b8352fb030f77c4e12226cc28cb251f39","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.28.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.29":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.29","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[Learn more here][feature].\n\nThis library was written in the Asynchronous Module Definition\nformat. It should work in the following environments:\n\n* Modern Browsers (either after the build, or with an AMD loader such as\n  RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Installing with NPM (for use with NodeJS)\n\nSimply\n\n    $ npm install source-map\n\nOr, if you'd like to hack on this library and have it installed via npm so you\ncan try out your changes:\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox\n  source.\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping.\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.29","dist":{"shasum":"39d571a0988fb7a548a676c4de72db78914d173c","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.29.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.30":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.30","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js","build":"node Makefile.dryice.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: 'min.js',\n      names: ['bar', 'baz', 'n'],\n      sources: ['one.js', 'two.js'],\n      sourceRoot: 'http://example.com/www/js/',\n      mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ 'http://example.com/www/js/one.js',\n    //   'http://example.com/www/js/two.js' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: 'http://example.com/www/js/two.js',\n    //   line: 2,\n    //   column: 10,\n    //   name: 'n' }\n\n    console.log(smc.generatedPositionFor({\n      source: 'http://example.com/www/js/two.js',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case 'BinaryExpression':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), \" + \", compile(ast.right)]\n        );\n      case 'Literal':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error(\"Bad AST\");\n      }\n    }\n\n    var ast = parse(\"40 + 2\", \"add.js\");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: 'add.js'\n    }));\n    // { code: '40 + 2',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: \"source-mapped.js\"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: \"foo.js\",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: \"christopher\"\n    });\n\n    console.log(map.toString());\n    // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.30","dist":{"shasum":"182726b50671d8fccaefc5ec35bf2a65c1956afb","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.30.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]},"0.1.31":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.31","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js","build":"node Makefile.dryice.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: 'min.js',\n      names: ['bar', 'baz', 'n'],\n      sources: ['one.js', 'two.js'],\n      sourceRoot: 'http://example.com/www/js/',\n      mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ 'http://example.com/www/js/one.js',\n    //   'http://example.com/www/js/two.js' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: 'http://example.com/www/js/two.js',\n    //   line: 2,\n    //   column: 10,\n    //   name: 'n' }\n\n    console.log(smc.generatedPositionFor({\n      source: 'http://example.com/www/js/two.js',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case 'BinaryExpression':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), \" + \", compile(ast.right)]\n        );\n      case 'Literal':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error(\"Bad AST\");\n      }\n    }\n\n    var ast = parse(\"40 + 2\", \"add.js\");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: 'add.js'\n    }));\n    // { code: '40 + 2',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: \"source-mapped.js\"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: \"foo.js\",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: \"christopher\"\n    });\n\n    console.log(map.toString());\n    // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","_id":"source-map@0.1.31","dist":{"shasum":"9f704d0d69d9e138a81badf6ebb4fde33d151c61","tarball":"http://registry.npmjs.org/source-map/-/source-map-0.1.31.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"nickfitzgerald","email":"fitzgen@gmail.com"},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}]}},"maintainers":[{"name":"mozilla-devtools","email":"mozilla-developer-tools@googlegroups.com"},{"name":"mozilla","email":"dherman@mozilla.com"},{"name":"nickfitzgerald","email":"fitzgen@gmail.com"}],"time":{"0.0.0":"2011-08-30T19:45:40.104Z","0.1.0":"2011-09-08T23:37:50.688Z","0.1.1":"2012-06-19T22:27:12.055Z","0.1.2":"2012-09-05T16:30:51.322Z","0.1.3":"2012-10-12T18:43:39.522Z","0.1.4":"2012-10-29T20:16:21.630Z","0.1.5":"2012-10-31T01:28:00.060Z","0.1.6":"2012-11-02T18:52:59.069Z","0.1.7":"2012-11-02T19:09:11.172Z","0.1.8":"2012-11-19T22:48:36.067Z","0.1.9":"2013-03-01T01:02:37.514Z","0.1.10":"2013-03-19T18:27:06.685Z","0.1.11":"2013-03-20T16:56:07.393Z","0.1.12":"2013-03-20T18:37:52.714Z","0.1.13":"2013-
4189 error     at Object.parse (native)
4189 error     at RegClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:238:23)
4189 error     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:129:22)
4189 error     at Request.EventEmitter.emit (events.js:98:17)
4189 error     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:873:14)
4189 error     at Request.EventEmitter.emit (events.js:117:20)
4189 error     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:824:12)
4189 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
4189 error     at _stream_readable.js:920:16
4189 error     at process._tickCallback (node.js:415:13)
4190 error If you need help, you may report this log at:
4190 error     <http://github.com/isaacs/npm/issues>
4190 error or email it to:
4190 error     <npm-@googlegroups.com>
4191 error System Linux 3.8.0-29-generic
4192 error command "/usr/bin/node" "/usr/bin/npm" "install"
4193 error cwd /var/www/sites/marker/http
4194 error node -v v0.10.22
4195 error npm -v 1.3.14
4196 error type unexpected_eos
4197 verbose exit [ 1, true ]
